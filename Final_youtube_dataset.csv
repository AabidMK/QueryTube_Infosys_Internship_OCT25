id,title,description,publishedAt,tags,categoryId,defaultLanguage,defaultAudioLanguage,thumbnail_default,thumbnail_high,duration,viewCount,likeCount,commentCount,privacyStatus,channel_id,channel_title,channel_description,channel_country,channel_thumbnail,channel_subscriberCount,channel_videoCount,transcript,is_transcript_available
HqL0xhwDz9s,US-EAST-1 is humanityâ€™s weakest linkâ€¦,"Traycerâ€™s orchestration tool makes your coding agents smarter. Try it - https://traycer.ai

Yesterday, over 2,500 internet services got wrecked by the most catastrophic cloud outage in history, courtesy of AWS.

In today's video, we'll break down the technical details and explain how the world's addiction to cloud computing brought us all to our knees.

#aws #tech #coding #programming

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://www.techradar.com/news/live/amazon-web-services-alexa-ring-snapchat-fortnite-down-october-2025
- https://www.youtube.com/watch?v=UVR9lhUGAyU

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- How AWS brought down the internet
- How cloud storage works
- US-EAST-1
- WTF is DNS?",2025-10-21T16:54:32Z,"webdev,app development,lesson,tutorial,aws,dns,us-east-1,aws outage,aws down,aws cloud down,How AWS brought down the internet,How cloud storage works,cloud computing,aws news,tech news,coding,programming,big cloud,jeff bezos,elon musk,aws disaster,aws catastrophe,snapchat,netflix,playstation",28,en,en,https://i.ytimg.com/vi/HqL0xhwDz9s/default.jpg,https://i.ytimg.com/vi/HqL0xhwDz9s/hqdefault.jpg,PT4M27S,580206,28300,1403,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, Netflix went down, then Reddit went down, PlayStation down, Roblox down, Fortnite down, Robin Hood, Coinbase, Venmo, Snapchat, Disney, down, down, down, down. And that's just a small list out of the 2500 plus companies that got wrecked after we experienced the most catastrophic cloud outage in history. What do all these apps have in common? Well, they're all addicted to AWS, Amazon Web Services, the biggest cloud in the game with an estimated 350 massive data centers up and running around the world and hundreds more being built as we speak. That means when AWS goes down, the entire world goes to hell. I nearly starved to death yesterday because the McDonald's app was down. I tried to Door Dash some food, but that was down, too. Then I tried to order groceries on Amazon, but wouldn't you know it, Amazon.com itself was down. I tried to ask my AI girlfriend what was going on, but she runs on AWS. As I laid there starving to death, I tried to open Dolingo to ask the Abua next door how to cook food, but Dolingo was down, too. Little did I know, because the New York Times was down, a single misconfigured DNS setting in US East1 had regressed society back 50 years. I only survived because I logged into X, which wasn't affected. Elon Musk and DHH had a field day with this incident. And in today's video, we'll break down the technical details that led to the great AWS cluster of 2025. It is October 21st, 2025, and you're watching the code report. As I mentioned, AWS operates hundreds of data centers that literally power the multi-t trillion dollar internet economy. I literally mean that. Literally. When you receive an unsolicited dickpick on Snapchat, it's Amazon, not Snapchat, that's the one using the electricity to process those pixels. As Snapchat just rents out space in their data centers. Now all of these data centers get clustered into geographic regions with the US East1 region in Northern Virginia being one of the oldest and perhaps most important. It lives next to the economic and cultural heart of the United States near DC, New York, Boston, etc. But a cloud region contains multiple data centers along with at least three availability zones for redundancy and fault tolerance. Like each zone has its own power, cooling, and networking is so if one gets blown up by a disgruntled programmer, everything should still work just fine in theory. But in practice, things can still break massively for silly reasons. Here's the timeline. At 9:07 p.m. Eastern time, AWS posted they were seeing increased error rates and latencies across multiple AWS services in US East1. Then they later narrowed the root problem to a subsystem related to DNS resolution for the API endpoints of services, most notably Amazon Dynamo DB. I once made a video about it, but the DNS is like the phone book of the internet. That means for an app like Snapchat to work, it needs to reach out to AWS and say, ""Hey, where's my database?"" A DNS lookup is performed. And because in this case it was broken, Amazon would say, ""Sorry, I can't find your database on this address."" And that turned all these software products into instant vaporware. But in this case, the failure had a cascading effect. Even though AWS was able to locate and fix the issue within a couple of hours, a massive queue of serverless jobs accumulated, like Lambda function calls and simple Q service messages, is so apps continue to have problems for hours afterwards. As a Firebase developer, I'm one of the lucky ones who survived. But this incident is yet another example of why we probably shouldn't be relying on one company to centralize so much computing. Even companies like Superbase are pissing off their users with 10 plus days of downtime in the EU West 2 region. It's not Superbase's fault though. AWS just won't give them the capacity no matter how hard they beg. Is Superbase's only crime is not having a backup heroin dealer? And by heroin dealer, I mean Big Cloud. But the big question is which developer can we get blame for this outage? We don't know. But my theory is that they just push some bad AI code. And none of this would have happened if they were using Tracer, the sponsor of today's video. It's an agent orchestrator, which adds a layer of planning and verification that makes your coding agents a lot more effective. Just tell it what you want to build, and it will pull context from your codebase and ask you follow-up questions to create a detailed implementation plan that is broken down into phases. Once you approve the plan, you can pass it off to your favorite coding agent, and it will generate code that actually does what you want. After it's finished, Tracer scans all the changes and flags any issues, so no slop actually makes it into production. It's especially useful when working in larger code bases, which is probably why a surprising number of developers already seem hooked on it. But you can get your first hit for free by going to tracer.ai and signing up for a 7-day trial. This has been the Code Report. Thanks for watching and I will see you in the next one. [Music]",True
yl0YWA2K2B0,React wants to win you backâ€¦,"Get 20% off Mobbin Pro to make your apps not ugly - https://mobbin.com/fireship

In todayâ€™s video, weâ€™ll revisit everything announced at React Conf 2025 to see if it will actually make a differenceâ€¦

#React #Coding #Programming

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://conf.react.dev/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Cloudflareâ€™s useEffect bug
- useEffectEvent
- Activity
- ViewTransition
- Fragment refs
- React Compiler 1.0
- React Foundation
- Why Remix 3 is ditching React",2025-10-17T19:32:39Z,"webdev,app development,lesson,tutorial,react,React Native,React Conf 2025,React Conference 2025,React News,JavaScript,JS,JavaScript News,Web Development,Developers,Coding,Webdev,Programming,Programming News,JS News,React Updates,React Conf,React Conference,React Router",28,en,en,https://i.ytimg.com/vi/yl0YWA2K2B0/default.jpg,https://i.ytimg.com/vi/yl0YWA2K2B0/hqdefault.jpg,PT4M11S,609041,20924,990,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, I got to participate in my favorite activity of the year. No, it wasn't watching all the overleveraged crypto bros learn what a margin call is. It was hate watching React comp as an anti-react influencer. Every year I crawl into my spelt Snuggy and I watch the React team try to convince everyone that their new APIs fix all of their old APIs. And though it hurts me to say it, this year I think they may have actually done it. I know this is an AI channel now, but in today's video, we'll revisit the worst parts of React to see if the announcements they made at React Comp will actually make a difference. It is October 17th, 2025, and you're watching the code report. The greatest trick the devil ever pulled was making referential stability a prerequisite to writing React apps that don't blow up. Just last month, Cloudflare had a massive outage because their dashboard kept making unnecessary calls to one of their own APIs, which led to them basically themselves. If you're a React dev, you know this is the primary use case for React's use effect hook. And it's exactly what caused this embarrassing bug for Cloudflare. But it's hard to blame React for this. The whole situation could have been avoided if only the poor debit Cloudflare would have read the docs on use effect. Then this post which shows you when to use it. Then this post which shows you when to not use it. Then this post which shows you what it actually does. Then this post which shows you how to use it correctly. And now with React 19.2. this post which shows you how to work around it with React's new use effect event hook. The way it works is it creates a function that you can use inside of use effect without needing to declare it in the dependency array. This is nice for situations like this where you need to use a value inside of use effect but don't want the effect to rerun when it changes. And the other big API addition was the new activity component which you can think of like a smarter display none that React itself controls. It lets you show and hide certain components, but unlike display none, React is able to maintain the state of those components across visibility and also deprioritize the work it does for hidden components. And if you've been drinking your lead lace protein and want to live on the edge, you can install React's Canary version where you'll get the new view transition component for animating transitions between different UIs. And you'll be able to pass a ref to a fragment, which makes working with platform APIs a little easier. But the most impactful announcements of the conference may have not been related to the React API. The first React compiler finally hit 1.0. If you've been in any React codebase lately, you've probably noticed a weird smell coming from all the unnecessary memoization. Hooks like use memo and use callback are used as a performance silver bullet to memoise values between renders. But the sad reality is that they usually just make your app slower if you don't actually know what you're doing. Thankfully, now the React compiler is stable. It'll autooptimize your app for you so you can stop pretending you care about how many times it rerenders. And finally, after 15 years of being owned by Meta, both React and React Native are being moved to a new foundation with an independent technical governance structure to quote ensure the future of React. But if you'd like to avoid that future entirely, you can do what the Remix team did and just ditch it altogether. Remix 3, built by the same authors as Remix, Reach Router, React Router, and React Router Framework, is a brand new framework that embraces web fundamentals like closures and events. It'll come with TypeScript and JSX support out of the box, but unlike React, it won't come with 15 years of oopsie, never minds. Although nothing has been officially released yet, so it's technically vaporware, that the vision of a simple AI friendly framework built on web APIs is appealing to anyone who still has no idea what a React transition is. And speaking of transitions, the only thing that truly matters is that your UI looks beautiful for the end user. That's why you need to know about mobin.com, the sponsor of today's video. I've been using Mobin for over 5 years now to get highly detailed breakdowns of every screen in thousands of popular applications. It even shows entire user flows. So, if you want to see how different apps design their onboarding or checkout, you can click through each screen, then copy and paste the whole thing into Figma to kickstart your own design. You can also filter by app category and even the specific UI elements you want to steal for your next project. Give Mobin a try for free right now and use the link below to get an extra 20% discount. This has been the code report. Thanks for watching and I will see you in the next one. [Music]",True
qJle6Bki4Og,Apple and Google wonâ€™t like this...,"Install CodeRabbit CLI for free to catch all your AI slop code - https://coderabbit.link/fireship-cli

The Free Software Foundation just gave humanity a final shot at salvation by announcing the Librephone, one of the most ambitious open-source projects of our time. But can this project really topple iOS and Android? Let's find out...

#tech #iOS #Android

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://www.fsf.org/news/librephone-project

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is the Librephone?
- Free Software Foundation
- Is Android really open-source?
- Richard Stallman hires Rob Savoye",2025-10-16T17:32:29Z,"webdev,app development,lesson,tutorial,Librephone,free software foundation,foss,open source,open source software,Richard Stallman,Rob Savoye,Android,ios,google,apple,librephone vs android,is android really open-source?,linux,gnu,gnu phone,freedom phone,liberty phone,freedom,internet freedom,software freedom,software freedom phones,operating systems,os",28,en,en,https://i.ytimg.com/vi/qJle6Bki4Og/default.jpg,https://i.ytimg.com/vi/qJle6Bki4Og/hqdefault.jpg,PT4M11S,882527,41125,1981,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, the Free Software Foundation gave humanity a small glimmer of hope for a better future by announcing one of the most ambitious open- source projects of our time, the Libra phone, the Freedom or Liberty Phone. The modern man is a slave to this dark little rectangle. The average person clocks in 6.66 hours of screen time daily. And if you're Gen Z, it goes up to 9 hours, no cap. But those are rookie numbers for South Africans who grind out 9 hours of screen time daily. By watching this video, you're becoming a statistic and quite literally draining your consciousness to Silicon Valley ad companies like Google and Facebook. It's a problem we should have seen coming when Stanley Kubri and Arthur C. Clark tried to warn us with the Black Cuboid in 1968. But it's too late now. Not only are we all addicted to the monolith, but with digital IDs rolling out around the world against the will of the people, it'll soon be impossible to put food on your family without a 247 spyware loaded smartphone in your pocket. In today's video, we'll look at the world of open source mobile tech and find out if there's any hope for technological freedom in our future. It is October 16th, 2025, and you're watching the Code Report. Maybe you've never heard of the free software foundation, but virtually every human on planet Earth uses its software daily. But from the GNU tools that power Linux and Android to the GCC compiler and the GPG encryption that secures your emails, the free software foundation's work is quietly running underneath almost every device, server, and app that you touch. It was started 40 years ago by Richard Stallman and yesterday they announced a new initiative called the Libriophone. They've tapped legendary hacker Rob Savois to lead the charge, the guy behind Open Street Map and the guy who made Flash work on Linux before it was cool with Nash. The mission is to replace every closed source bit on your phone with open- source freedom. But you might be saying, ""Wait a minute, Android is already an open-source Linux- based operating system."" That's true, but only technically. In reality, most of the software that makes your phone actually work, from the modern firmware to the camera drivers and Google Play services, is all locked down proprietary code. The Libra phone wants to rip out all these blobs and replace them with fully free software. So, your phone isn't just open- source on paper, but free isn't freedom in practice. But if you're already based, you might be using Lineage OS to bypass Google Spyware. Well, apparently Lineage Link's significant proprietary code and FSF board member John Gilmore said, quote, ""Rather than accept the sad situation, I looked for collaborators to reverse engineer and replace those proprietary modules with fully free software before at least one modern phone. It's a noble cause, but reverse engineering all the firmware and binary blobs on a smartphone is a massive undertaking. This was already tried once before with Replicant, an early FSFbacked attempt to create a fully free Android fork. It did work technically, but adoption was almost non-existent. Only a handful of devices were supported and most users just aren't willing to give up basic features like Wi-Fi, cameras, GPS, etc. to run free software. And even if the Libra phone somehow pulls it off, the Apple Google duopoly is practically unbreakable. These two companies control the hardware, the operating system, the app stores, the payment rails, and have massive lobbying efforts in government. At a time when governments are rolling out digital ID systems, contact tracing, and app-based verification platforms that are tightly integrated into these ecosystems, the mobile ecosystem feels hopelessly locked down. But the Libra phone might be the only thing that can liberate us from this dystopian crony surveillance state while preserving all of the features that we need to maintain massive amounts of screen time daily. That means there's going to be a lot of code reviews. And that's why you need to know about Code Rabbit, the sponsor of today's video. They just announced a new Codeex integration that allows it to execute Code Rabbit reviews directly in your development workflow. So now you can tell CodeEx to review your latest changes, and the Code Rabbit CLI will surface specific issues on everything from simple styling errors to more complex architectural problems. From there, you can approve the proposed fixes and tell Codeex to apply the changes, or you can just allow the whole thing to happen autonomously in the background until the code can actually pass the review. Code Rabbit CLI is free to use and you can install it using the command on screen or by checking the link below. This has been the code report. Thanks for watching and I will see you in the next",True
PLKrSVuT-Dg,How to make vibe coding not suckâ€¦,"Deploy your app the easy way with Sevalla and get $50 in free credits - https://sevalla.com/fireship

AI coding may be overhyped but Model Context Protocols are making it possible for experienced devs to vibe code responsibly. In today's video, we'll look at 7 MCP servers that make programming with AI suck less...

#coding #programming #ai

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://svelte.dev/docs/mcp/overview
- https://www.figma.com/mcp-catalog/
- https://awslabs.github.io/mcp/
- https://docs.stripe.com/mcp
- https://docs.sentry.io/product/sentry-mcp/
- https://github.com/github/github-mcp-server
- https://github.com/sooperset/mcp-atlassian

ðŸ“š Chapters
1. Framework optimizers
2. Design implementers
3. API executers
4. Error catchers
5. QA terminators
6. Infra scalers
7. Build your own

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is an MCP server?
- Vibe coding tips
- Programming with ai
- Best MCP servers for developers",2025-10-14T18:34:41Z,"webdev,app development,lesson,tutorial,Framework optimizers,Design implementers,API executers,Error catchers,QA terminators,Infra scalers,Build your own,mcp servers,best mcp servers,mcp server,mcp,claude,claude code,model context protocol,model context protocol explained,stripe mcp,figma mcp,git mcp,github mcp,atlassian mcp,aws mcp,svelte mcp,svelte mcp server,vibe coding,vibe code,ai,ai coding,artificial intelligence,code,programming,coding",28,en,en,https://i.ytimg.com/vi/PLKrSVuT-Dg/default.jpg,https://i.ytimg.com/vi/PLKrSVuT-Dg/hqdefault.jpg,PT5M44S,603954,22875,975,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, I was looking for some software to solve a very specific problem. Lo and behold, I found this great app for 10 bucks. But as a Vibe engineer, I didn't pay for it. Instead, I spent 3 days, $500 in claude credits, and missed my kids' baseball game over the weekend to build a crappier version from scratch. Developers are living in weird times as some of us are becoming less productive and ditching AI altogether. Like the streamer coding garden just completely destroyed the grift in this video. >> And it's not fun. It's not fun at all. But many others are going allin and seeing productivity gains like never before. Every employee at multi-trillion dollar company Nvidia is now AI enabled. >> Every one of our engineers 100% is now assisted by AI coders and our productivity has gone up incredibly. >> The truth is that AI does suck. It's like gambling. When you prompt it and the code actually works, you feel that indescribable rush of dopamine. >> I'm coming day and night. I mean, it's terrific. But eventually your prompt won't work and this leads to a vicious cycle that I like to call the prompt treadmill of hell where you keep burning through credits but never actually get what you need. Despite that drawback, there are ways to make AI coding more reliable and quasi deterministic thanks to the power of model context protocol servers. In today's video, we'll look at seven MCP servers every dev needs to know about to make AI coding suck less. It is October 14th, 2025, and you're watching the code report. I think it's safe to say that the majority of programmers are now using AI in some capacity, but very few are using it to its full potential. If you don't already have a couple of MCP servers hooked up to claude code, cursor, open code, or whatever you prefer, you're falling behind and you're not going to make it. But what even is a model context protocol server? Well, in one sentence, it's a standardized way for your coding agent to talk to external systems. That could be an app running on your local machine. It could be a remote server that runs your code. or it could be a thirdparty API. To understand its full potential, let's look at some examples. On this channel, I've complained endlessly about AI not being able to generate proper spelt 5 code. Well, luckily, just a few days ago, that problem has been solved thanks to the release of the spelt MCP server. All you have to do is install this bad boy in your favorite coding tool, like I'm using Claude Code here. And now, instead of going in blind, you can start a prompt with /spelt. This will automatically tell Claude how to get the right spelt documentation. And more importantly, use the spelt autofixer. It'll perform a static analysis on the code and delopify it when the LLM hallucinates random ReactJS code in your project. But if you're a front-end developer, the most time-conuming task is implementing your designer's Figma files into actual code. Well, not anymore. The Figma MCP server allows you to connect your local Figma app on the desktop or in the cloud. It'll pull a design file and automatically implement it in HTML and CSS. You can even generate React components, use Tailwind, or build iOS UI elements using Figma's more reliable tooling. Pretty cool. But what if you're building something like a payment system with a third-party API? If this is something you really can't afford to screw up, well, Stripe and many other APIs now have an MCP server that can fetch documentation for the exact API version you're using. Not only that, but it has a long list of tools you can use to access live data in Stripe, opening the door to all sorts of possibilities, like accidentally refunding 10,000 customers with a single prompt. Now, even if you leverage these tools, your code is still probably going to break in unexpected ways at runtime. If you use a monitoring tool like Sentry, you can access all of the issues and errors your AI assistant missed before deploying. Instead of trying to understand the slop you rolled out a few minutes ago, you just tell it to query the Sentry issues and fix them on the fly. That's helpful, but not all runtime issues can be caught. At other times, it might be the QA guy who worked at Blizzard for 7 years who assigns you a Jira ticket to fix some pointless edge case he found, in which case you'll want to have the Atlassian or GitHub MCP server installed. You can use it to automatically pull issues and tickets without ever needing to read them yourself. Just run a prompt that tells the AI to fix the issue and close the ticket while you sit on the train reading your favorite book. That's awesome. And if you follow this guide, you'll eventually have a billion-dollar app that requires more infrastructure to scale. There are now MCP servers for AWS, Cloudflare, Verscell, and many others that can let AI provision the actual resources you use in the cloud. In theory, the great thing about robots is that they won't forget to shut down an EC2 instance that will destroy your finances, but don't quote me on that. So far, all the examples we've looked at require the trust of a third party developer. So, you have to trust us. Just relax and fall. One, two, three. No. >> What's cool about this protocol, though, is that it's essentially standardized now. And you can use it to build your own highly specialized server. Like maybe you want a server that can look up custom data sources, manage your smartome, or really anything you can imagine. And they're easy to build because there's now an MCP framework for every major programming language out there. But after you build one, you'll need a place to deploy it. And an awesome platform you need to know about is Savala, the sponsor of today's video. It's a modern successor to Heroku that combines Google Kubernetes Engine with Cloudflare to give you a simple way to deploy full stack applications, databases, and static sites without drowning in YAML configs. We can easily ship our app by connecting a Git repo in the Savala dashboard or by selecting one of their pre-built templates. Once it's live, you get app analytics, environment variables, and everything else you need to scale your app. You also get real environment pipelines for preview, staging, and production, so your team can promote changes safely instead of just praying to the prod gods. So try out Savala for free with $50 in free credits using the link below. This has been the Code Report. Thanks for watching and I will see you in the next",True
91aH8jsG4cc,OpenAI just made your entire tech stack obsolete...,"Try out the Junie coding agent in your JetBrains IDE - https://jb.gg/Fireship-Junie-AI

At OpenAI DevDay 2025, Sam Altman unleashed a flurry of new features that could change the way developers build AI-powered applications. 

But OpenAI's biggest bet is on turning ChatGPT into an app platform or even an operating system that you're completely locked into. Let's take a look...

#openai #chatgpt #ai #coding

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://openai.com/devday/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- OpenAI DevDay 2025
- ChatGPT Apps SDK
- ChatGPT Agentkit
- ChatGPT vs n8n
- Codex Updates
- GPT-5 Pro
- Sora 2",2025-10-07T19:10:52Z,"webdev,app development,lesson,tutorial,openai,openai dev day,openai dev day 2025,openai dev day 2025 highlights,sam altman,openai updates,chatgpt,chatgpt apps,chatgpt apps sdk,chatgpt app store,chatgpt app,chatgpt agentkit,openai agentkit,codex,openai codex,agentkit vs n8n,n8n vs agentkit,big tech,ai news,ai,coding,coding news,fireship,sora 2,gpt 5 pro,sam altman keynote,sam altman news,open ai,openai keynote,openai news,tech,technology,developer",28,en,en,https://i.ytimg.com/vi/91aH8jsG4cc/default.jpg,https://i.ytimg.com/vi/91aH8jsG4cc/hqdefault.jpg,PT4M18S,1007381,31407,1863,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday at OpenAI dev day, Sam Waltman walked on the stage in San Francisco and said, ""Your entire tech stack is deprecated."" That's not a direct quote. I'm just paraphrasing. But we have about a half dozen newly released features that will change the way developers build AI powered apps in the future. The biggest bet OpenAI is making is turning Chat GPT into an app platform, which means you no longer have to use old-fashioned websites or mobile apps like a boomer. The goal is to make chat GPT like an operating system that you're completely locked into. Imagine this. You want to play your favorite song on Spotify, like I'm quitting Prozac to continue drinking by 19-year-old pop sensation Jimmy Brown. In the future, you no longer need to open the Spotify app and hit the play button. Instead, you can simply open the Chat GPT app and type out an awkward prompt to tell Chat GPT to push the button for you. Looks like the future of AI is going to skip the Great Robot War of 2029 prophesized in Terminator and go straight to the year of 255 prophesized in Idiocracy. Well, there plenty of tards out there living really kick-ass lives. >> But developers who ride the chat GPT apps wave early stand to make tons of money from the massive distribution opportunity of their 800 million weekly active users. But apps and chat GPT isn't the most interesting announcement. You also need to know about agent kit codecs with GitHub actions, new models for poor people, and some big updates to the API. It is October 7th, 2025, and you're watching the code report. First, let's talk more about apps and chat GPT. remember GPT plugins from a couple years ago? They died. Then they tried a slight variation GPTs, but they're also pretty much dead. And now they're trying apps and chat GPT because the third time's a charm. Right. Right now it's only being triled by big apps you probably recognize. And I think it could work really well for things like Zillow. Like this guy paid his realtor $50,000 for this million-doll home in San Francisco. When in reality, Chat GPT could have done a better job faster. However, I'm also pretty bearish on apps and chat GPT because in most cases, I'd rather just use an app's UI than rope in a chatbot to over complicate things. The next thing you should know about are updates to the OpenAI API. Both Sora 2 and GPT5 Pro are now available in the API, which means you can start lighting money on fire trying to build your own AI powered and shitification accelerator. The Sora 2 costs 50 cents per 1 second of highquality video or about $1,800 to slop out a 1-hour movie that nobody's going to watch. In addition, if you're implementing voice or image generation features, there's now two smaller models that are far less expensive than the alternatives, but pretty cool. But one of the greatest life hacks for developers is to stop wasting time on code reviews. OpenAI just released a GitHub action for codecs that will automatically review code quality every time you make a new PR on GitHub. And not just that, but you could also use it to scan for security flaws, write documentation, and a bunch of other stuff. The coolest thing announced yesterday though is agent kit, a unified set of tools where developers can build, deploy, and optimize agents. Just a few days ago, I was talking about how awesome N8N was as a Zapier alternative, while now Agent Kit drops as the NAN alternative for building AI apps. It gives you a flowchart style canvas where you can implement the logic for your app without stitching together a bunch of code manually. On one hand, this tool has a lot of potential because it gives non-engineers the ability to build non-trivial apps. But on the other hand, no code tools like this always have a complexity ceiling that eventually requires a real human programmer to come in and tear the entire thing down and build it properly with actual code. In any case, it's a legit new tool that you should have on your radar. Speaking of which, you also need to know what Jet Brains is up to, the sponsor of today's video. They just launched a new AI coding agent called Juny that's tightly integrated with the Jet Brains IDE and can understand the context of your entire codebase. This allows it to fit seamlessly into your workflow is so you can have it complete realworld jobs at your job without the need to context switch between multiple tools. I've been using Juni on my own side project that has a bunch of complex geospatial data. And my honest opinion is that it's a little bit slower than other codegen tools I've tried, but it handles context and accuracy extremely well on a big project. That's huge if you're on a big team and it integrates well with external platforms like GitHub where you can assign multiple jobs to Juny at the same time and have it complete all of them asynchronously. Use the link below to try out Juny for yourself today. This has been the code report. Thanks for watching and I will see you in the next one.",True
SquU4Bpc73Y,Alibaba is going all in on Qwenâ€¦,"Try Brilliant for free - https://brilliant.org/fireship and get 20% off a premium annual subscription.

Alibaba just announced a $52 billion roadmap towards artificial super intelligence and their ultimate goal of becoming the Android of the AI era. But can the announcements made at Apsara 2025 really put them on the road to ASI? Let's find out...

#ai #tech #alibaba

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://www.alibabacloud.com/en/apsara-conference

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What Alibaba announced at Apsara 2025
- How close is Alibaba achieve ASI?
- Are Alibaba's plans achievable?
- Qwen 3-Max",2025-10-03T16:02:28Z,"webdev,app development,lesson,tutorial,ai,qwen,qwen 3,qwen 3-max,qwen 3-instruct,alibaba,asi,apsara,apsara 2025",28,en,en,https://i.ytimg.com/vi/SquU4Bpc73Y/default.jpg,https://i.ytimg.com/vi/SquU4Bpc73Y/hqdefault.jpg,PT3M13S,491733,16903,727,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, the worst nightmare of the four horsemen of the apocalypse came true. Alibaba became a frontier AI lab with announcements made during their Absara conference, which if you've never heard of is like the Super Bowl for shape rotating aspie comrades with the announcement of a $52 billion three-phase road map. They've made one thing clear. They read the comments. Oh, and they're all in on the great race to artificial super intelligence. In today's video, we'll take a closer look at that road map, break down all of the new models they released, and show how their ultimate plan is to become the Android of the AI era. It is October 3rd, 2025, and I hope you're ready to learn Chinese. As a teenage boy, I learned that the best things in life come in threes, and that's why I was revved up when I heard Alibaba announced their three-phase road map to ASI. Phase one is emergence of intelligence, where AI achieves generalized understanding by stealing, I mean, learning, vast amounts of human knowledge. This is where we were a few years ago. The phase two is autonomous action where AI can learn to use the languages and tools humans do in order to offer some assistance. This is where we are today. And phase three is selfiteration where AI can connect to the physical world and learn on its own. This is where we either all die or live in a gluttonous utopia and Alibaba thinks we'll be there by 2032. I have my doubts, but they're shipping like they're addicted to creatine laced with aderall, so it might come true. Their biggest release of the conference was Quen 3 Max. The base model has over 1 trillion parameters and was pre-trained on 36 trillion tokens using its mixture of experts architecture. I know every time I mention a benchmark, an intern in the tenderloin gets mugged, but for being a non-thinking model, Quen 3 Max Instruct scores pretty well on the standard benchmarks and there's a reasoning variant that's currently being trained that does as well. And the most impressive release of the week may be Quen 3VL. Their vision language model designed to process and understand visual input like images and videos. And it currently sits at the top of this new awesome benchmark, Clockbench. It turns out just like Gen Z, current Frontier models struggle with reading an analog clock. But Quen 3VL is now the tallest dwarf with 39% accuracy. And it gets bonus points for being as powerful as it is while being open source and open weight. And if vision and language aren't enough, they also released Quen 3 Omni, their multimodal model, which can see, hear, read, and talk. And that means it's now possible to create highquality AI girlfriends that are free and open- source. But before you go and do something foolish like that, you need to understand how this AI stuff works at a low level with Brilliant, the sponsor of today's video. A hard truth is that code is useless if you don't understand the math and computer science behind it. Brilliant helps you master these concepts with interactive lessons that you have to learn by doing, not just watching video lectures. I'd highly recommend taking their thinking and code course where you'll learn how to think from first principles like an experienced programmer. Most importantly, you'll develop critical thinking skills through problem solving, not just memorizing. Try Brilliant for free by visiting brilliant.org/fireship org/fireship or scan the QR code on screen to get 20% off a premium annual subscription which gives you unlimited access to everything on Brilliant. This has been the code report. Thanks for watching and I will see you in the next one. [Music]",True
hkSj-QapfZo,OpenAIâ€™s new slop machine is open for businessâ€¦,"Try out Blitzyâ€™s codegen platform for enterprise codebases for free - https://blitzy.com

OpenAI's new Sora 2 model is the most accurate, realistic and controllable than anything we've seen before.

In today's video, we'll take a look at what Sora 2 means video content creators and whether they're about to go the way of the dodo. 

#Coding #programming #tech 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
-   https://openai.com/index/sora-2/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- OpenAI Sora 2
- What can Sora 2 do?
- The future of generative video",2025-10-01T18:38:26Z,"webdev,app development,lesson,tutorial,sora 2,sora2,ai,generative video,openai,open ai,sam altman,chatgpt,video,ai video",28,en,en,https://i.ytimg.com/vi/hkSj-QapfZo/default.jpg,https://i.ytimg.com/vi/hkSj-QapfZo/hqdefault.jpg,PT3M43S,562381,21917,1537,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday was a bad day for those with AI paranoia and a great day for those who are thirsty for Sam Olman. That's because OpenAI released Sora 2, their latest video generation model that's more physically accurate, realistic, and controllable than anything we've seen before. Yes, I did have to buy my invite code off eBay because I have no friends in real life. But it was worth it for the constant stream of hyperpersonalized AI generated content that's been rotting my dopamine sensors for the last 24 hours. You might remember this video of Will Smith eating spaghetti from two years ago that took the world by storm. At the time, we humans joked about it because we could easily tell it was fake. Then a year later, Generative AI took another leap forward. And on this very channel, I said this new video of Will was nothing to joke around about. Well, here we are after another year and another leap, and it's starting to get weird. The Sora 2 not only creates incredibly realistic videos, but unlike the original version, they now come with sound. >> Eat it. Eat up your slot, piggies. which means we can make videos like this with a simple text prompt. In fact, everything you're seeing here has been AI generated by Sora. Oh, oops, not that one. That's actually real. From anime to cartoons to fake security camera footage to realistic cameos of you watching my videos, it does it all. In today's video, we'll take a look at all of Sora's new capabilities and find out if video creators are about to go the way of the dodo. It is October 1st, 2025, and you're watching the code report. There's an ancient Chinese proverb that says, ""Be suspicious of those who promise you AGI while delivering slop."" But I think they underestimated how delicious the slop is, or sloppilicious, if you will, to my simple monkey brain. Last week, Meta released Vibes, a new feed where you can create short form AI generated videos designed to quote, ""Make it easier to find creative inspiration."" And well, the response from the public went about as well as you'd expect. Not to be outdone, yesterday, OpenAI released Sora 2, which is either a video generation model according to the announcement post, or it's a social network, unless my eyes are lying to me. If you go on sora.com, it's clearly optimized for consumption. The default UI is a for you explore page. You can like and comment on different videos. Each creator has their own profile you can follow, and you can only join by getting an invite from someone else. You guys remember Clubhouse, right? They're pulling out all the stops to get as much social media momentum as possible. Basically, it's a full-blown social network, but all the content is generated by AI. Between this and Vibes, it's like we now have our own infinitely scalable and always available bore on the floor. >> Bore on the floor. Oink for your sausages, piggy. Oink. >> We all thought Meta was poaching open AI researchers to accelerate time to artificial super intelligence. But it looks like they were actually doing it to better compete in building out an infinite AI Tik Tok slot machine. Even former OpenAI researchers are using it as an opportunity to ask their former colleagues if they really want to sell sugar water their whole lives. There's a definite vibe shift going on. But don't worry, Sloppy Sam has assured us that they're still focused on AGI with almost all their research effort. And rumor has it that something big is coming on Monday. They should be building something that's actually useful like Blitzy, the sponsor of today's video. It's an autonomous development platform built specifically for large enterprise code bases, which comes with infinite code context. That means you can connect your team's repo and Blitzy's thousands of specialized AI agents will think for hours until it understands every line of code in your entire codebase. From there, you can type in the features you want to build and Blitzy will create a technical plan for your approval, then generate and pre-ompile the code for each task. It performs 80% of the development work autonomously, then gives you a project guide for the final 20% of human engineering work required to complete the sprint. Blitzy is already helping large teams see a 5x increase in engineering velocity and you can try it out for free today at blitzy.com. This has been the code report. Thanks for watching and I will see you in the next one.",True
bS9R6aCVEzw,n8n will change your life as a developer...,"Get up to 67% off VPS at Hostinger to self-host your own automations. Use code FIRESHIP for an extra discount at https://hostinger.com/fireshipn8n

As programmers, we have the unique ability to prevent lost time through automation but it's often difficult and expensive to pull off.

But in today's video we'll look at how an open-source project called n8n could change the way you think about automating work forever. 

#coding #programming #codereport

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://n8n.io/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is n8n?
- Automation software
- n8n vs Zapier
- Crazy ways to use n8n
-  n8n Linux VPS install",2025-09-29T18:11:47Z,"webdev,app development,lesson,tutorial,n8n,n8n tutorial,n8n example,n8n automation,n8n coding,coding,programming,linux,zapier,n8n vs zapier,hostinger,software development,vps,linux n8n,n8n linux install,n8n linux setup,automation,automation software,n8n ideas,n8n automation project,n8n automation ideas",28,en,en,https://i.ytimg.com/vi/bS9R6aCVEzw/default.jpg,https://i.ytimg.com/vi/bS9R6aCVEzw/hqdefault.jpg,PT5M56S,943557,49328,2001,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Benjamin Franklin once said, ""Losts time is never found again."" As programmers, we have the unique ability to prevent lost time through the power of automation. Like when your Gen Z boss in a mini tells you to put a TPS report on her desk by 5:00 p.m. >> Gen Z boss in a mini. >> We don't do it manually. Instead, we build highly sophisticated automation workflows that look like this. Because why spend 1 hour doing something when you can spend 10 hours failing to automate it. Hell, some people even pay $500 per month for tools like Zapier to do all the heavy lifting for them. In fact, that's exactly what this guy was doing until he said, ""Screw it. I'm building my own Zapier from scratch."" The end result was a platform called N8N, which is an open-source self-hostable automation tool. And no, it's not the sponsor of this video. It's just a truly awesome project that you need to know about, and we'll change the way you think about automating all the boring work you do in life. In today's video, we'll look at some crazy ways you can use it, then deploy our own private automation system on a Linux VPS. It is September 29th, 2025, and you're watching the code report. But first of all, what is NADN? Well, if you know what Zapier is, the easiest way to think about it is like the free and open- source alternative to Zapier. It's a tool that allows you to take some input trigger like a website form submission, a database, write, a voice command, a GitHub issue, etc. then take the data from that event and run it through a pipeline of steps that might include third party apps or your own code. There are literally hundreds of different examples of things you can do. Like if you're a developer, you might run a workflow that triggers on a GitHub PR merge, which goes on to build a Docker image and then notify everybody on Discord. If you're a YouTuber, you might use it to automatically share your content on different social media platforms every time you upload a video. If you're into IoT, you could run a workflow that automatically sounds an alarm when the smart camera detects law enforcement around your compound. Or if you're a degenerate gambler, you could use it to automatically scrape football stats, then use AI to suggest which bets you should place next week. The possibilities are endless. But the crazy thing is that all this can be accomplished without writing a single line of code. Instead, you diagram everything in a flowchart style editor that makes the logic so clear that any non-technical person can approach it. And what's even more crazy is that you can unlock all this power in 5 seconds by simply running npx nadn from your terminal right now. After a few seconds, that'll bring up this beautiful UI where you can start building automation workflows. A UI that was built with Vue.js, by the way. We can play around with it on local host, but if you're serious, you'll want an actual server to host it. This is a serious channel. So today, we'll host it for just a few bucks per month on Hostinger, the sponsor of today's video. that they're famous for providing Linux- based virtual private servers to host all of your apps without needing big cloud providers. And it's a great place to launch our own private NADN app. And we can do that by selecting a new VPS and a region to host it in. From there, we could use a base Linux system and manually install N8N. But a much easier approach is to use their pre-built template. It runs Ubuntu as the operating system with N8N ready to go out of the box. Choose a password, then choose a plan for just five bucks a month. And if you're too poor to afford that, also use the code fire ship to save even more money. A few minutes later, we now have access to manage our VPS on the dashboard. We could SSH into the server to manage it, but there's no need. We can just click on this button to go directly to Nadn. Once you get here, you might be wondering what you do next. In my opinion, the first thing you'll want to check out are the templates. Like this one will generate AI viral videos with Nano Banana and V3 and then share everything on social media with Plateo. The actual workflows are just JSON based or because we now have an N8N instance deployed, we can import this template directly into our own project. This one's a bit too crazy for me. So, let's build a new one from scratch. On the dashboard, we have the option here to create a new node. And the first type of node you'll create is some type of trigger. It could be triggered manually or triggered on a schedule, but in many cases, you'll want to connect to some kind of third party app. As you can see, there are hundreds of different third party apps you can connect to. But in my case, I'm going to connect to Telegram and I want it to trigger anytime my wife sends me a message through this app. Just provide the required config info and you're good to go. Then from there, we can take the data received from the trigger and do all sorts of crazy stuff with it. We could send it off to AI to be analyzed. We could trigger an action in a different app and also handle things like conditional logic like you would with code. Let's go ahead and add an if branch right here. I know if my wife sends me this emoji that I've done something really bad. I can capture that data in this conditional statement by going to the string option and using contains. And now whenever I get a message with that emoji, I can run some code. Most importantly, the first way to resolve a domestic dispute is to order flowers. Unfortunately, there's no built-in third party apps that can do that as far as I know. But we can also create a node here to run any arbitrary code or hit a thirdparty API. I know a guy that has a flowers API, so we'll go ahead and use it to order flowers for immediate delivery. That's done, but it's not enough. We also need to write an apology letter. Now, I have no idea what I did wrong because I didn't read my wife's message, but luckily, we can have AI deal with that. We'll create a new AI agent node and give it a custom prompt to have it generate an apology letter. We can even have it use data from previous points in the workflow, like my wife's message, to customize the prompt dynamically. In addition, you'll notice the AI agent node allows us to choose any custom model we want, as well as provide data for memory and tools for the model context protocol. But now that we have an apology letter, we need a way to send it to her. I could do that with a Telegram message, but I'd rather show the world what a great husband I am by tweeting it publicly on X. That's a surefire way to resolve a domestic dispute. But just in case, we'll also want to make sure to record the whole interaction on Google Sheets, as this may come in handy in future divorce proceedings. But there's so much more we could do here when it comes to running a software as a service business. And it's kind of mind-blowing that we have full control over this on a $5 VPS. Huge thanks again to Hostinger for sponsoring this video. And get your own VPS with a discount code using the link below. This has been the Code Report. Thanks for watching and I will see you in the next",True
DC2p3kFjcK0,There's a new Linux distro in town for developers...,"Install CodeRabbit CLI for free to catch all your AI slop code - https://coderabbit.link/fireship-cli

Omarchy is a new omakase distro based on Arch Linux that's been designed for programmers, courtesy of final boss developer David Heinemeier Hansson. Let's run it and find out if it's the ultimate operating system for people who code.

#linux  #coding #programming #tech 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://omarchy.org/

ðŸ“š Chapters

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is Omarchy?
- Hyprland
- Why run Linux?
- Omarchy first look
- David Heinemeier Hansson
- Coding on Linux
- Arch Linux",2025-09-24T18:52:15Z,"webdev,app development,lesson,tutorial,linux,arch linux,arch,programming,developers,web dev,development,coding,omarchy,omarchy linux,gnu,linux distro,omarchy setup,linux coding setup,omarchy first look,omarchy coding,operating systems",28,en,en,https://i.ytimg.com/vi/DC2p3kFjcK0/default.jpg,https://i.ytimg.com/vi/DC2p3kFjcK0/hqdefault.jpg,PT4M38S,654920,29169,1799,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"The year is 2025. And when it's all said and done, we might finally be able to call it the year of the Linux desktop. Because if you're a developer, especially a smart, lazy developer, there's a new Linux distro in town designed just for you. A dro that'll finally let you tell your next Tinder date. I use Arch, by the way. It's called Omarie, and it takes the unopinionated Arch and injects the superior opinions of legendary developer David Hanimire Hansen, DHH. A developer who's richer, better looking, and more talented than us. If you don't know who he is, he's most famous for developing the Ruby on Rails framework. As a former Ruby developer myself, this community religiously adheres to the MacBook Pro as the one true development machine. But Macs are expensive and riddled with proprietary software. What if there is a better free and open- source way to use a computer? I just threw out my MacBook. And in today's video, we'll find out if Omari is the ultimate operating system for people who code. It is September 24th, 2025, and you're watching the Code Report. I think my mom must have taken Tylenol when she was pregnant because I use Windows for development. But it's time to grow up. The most important feature to consider when choosing a Linux DRO is the logo because that's what you'll be wearing on t-shirts and ultimately getting tattooed on your body. And I really like the Omari logo. It looks both dangerous and nerdy at the same time. To install it, all you have to do is download the ISO file to a USB stick, flash it with Bellena Etcher, then install it to a hard drive on your PC. I'd recommend using a new SSD drive if possible because Omari will do disk encryption by default and wipe everything from a previously used drive. From there, it'll take you through a pretty standard setup process and then you'll end up on this nicel looking desktop. It uses Hyperland as the window manager, which is a far superior Windows manager than Microsoft Windows. It'll automatically organize your Windows in a beautiful way. So, you'll no longer need multiple monitors just to develop a website. If you're not used to it though, at first it might feel unintuitive because hey, there's no red X to close this window with my mouse because everything here is optimized for the keyboard. Euthanize your mouse, then hit the super key plus space to bring up the app launcher. Unlike a regular Arch Linux system, you'll notice that this OS is packed with pre-installed software. That can be both a good and bad thing. Most people I know who use Arch do so because they want to control every bite on the system. And seeing all of this bloatware is making them throw up in their mouths right now. And if you're a DHH hater, you'll die of cringe when you see Base Camp and Hay pre-installed. But that's not the target audience. It seems like the idea behind Omari is to get developers to stop using Mac and Windows and start using Linux as a daily driver by providing everything you need out of the box. We of course have Git and Docker, Obsidian for Markdown, PiÃ±ata for image editing, and I'm even using the pre-installed OBS Studio for screen recording. And when it comes to the terminal, you have a bunch of modern shell tools like FZF for fuzzy finding, rip grip to replace GP, Zoxside to replace CD, and a bunch of other hipstery tools to replace what you would normally find on a GNU Linux DRO. And it even has its own custom shell functions to do things like image conversions. If you're writing code though, the big question is where will you write that code? Well, obviously not VS Code. A keyboard focused DRO like this could only use Neoim. But like Arch, Neovim is notorious for its configuration nightmares. But here it's using the Lazy Vim config, a preconfigured version that gives you all the power of a modern IDE while remaining highly customizable. But if you're truly a lazy developer, you'll need some AI to write your code. Well, Arch has a massive package ecosystem through Pac-Man and the Arch user repository. And we can easily install new stuff by hitting super alt space. Find your favorite AI package like Cloud Code and install it. It's really that easy. Even easier than a Mac or Windows machine. And that's coming from a Tylenol baby. Pretty cool. But is Omari right for you? Well, if you're already an Arch Linux Giga Chad, you're going to hate this thing. It's way too opinionated, but that's the idea. If you already hate DHH, then you're going to hate it. And if you hate memorizing keyboard shortcuts for everything, you might hate it, but that shouldn't discourage you from using Linux. Also, try out dros like Bluefin, which comes preconfigured with VS Code and dev containers. Ultimately though, Omari feels like a great new gateway drug to get people hooked on Linux without all the pain and suffering it takes to configure a fully loaded system. But speaking of the terminal, another tool you need to know about is Code Rabbit, the sponsor of today's video. They just launched the Code Rabbit CLI to give you senior level code reviews right in your terminal. That means if you're using a CLI based coding agent like Cloud Code, you can just install Code Rabbit once, then ask Claude to run it whenever you want feedback on your uncommitted changes or specific files. From there, Code Rabbit flags all of the bugs and hallucinations, then hands it back to Claude to fix everything in the background until the code is cleaned up enough to pass an actual code review. The Code Rabbit CLI is free to use, and you can install it using the command on screen or by checking out the link below. This has been the Code Report. Thanks for watching and I will see you in the next",True
GOejI6c0CMQ,Meta's most dystopian product yet...,"Try Blacksmith for free to run your GitHub Actions 2x faster - https://www.blacksmith.sh/

Meta just launched their new $799 AI glasses yesterday. The live demo failed miserably, but the tech behind it looks incredibly powerful and... concerning. 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Meta ai glasses
- Meta neural band
- Meta Connect 2025 recap
- Mark Zuckerberg",2025-09-18T17:56:05Z,"webdev,app development,lesson,tutorial,meta,meta glasses,meta connect 2025,meta ray ban glasses,meta smart glasses,meta ai glasses,meta rayban display,meta rayban glasses,mark zuckerberg,zuckerberg,zuckerberg glasses",28,en,en,https://i.ytimg.com/vi/GOejI6c0CMQ/default.jpg,https://i.ytimg.com/vi/GOejI6c0CMQ/hqdefault.jpg,PT4M27S,840792,28057,1958,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, the world got its first look at the most innovative, most exciting, and most dystopian tech product of 2025. The $799 Ray-B band sunglasses that lets you live life like a fighter pilot with a full color heads-up display. And not only that, but it can practically read your mind thanks to this thing called the Meta Neural Band, which is a bracelet that measures movement before it's even visually perceptible. A product this terrifying could only be conceived by one man, Mark Zuckerberg, who demoed them at Metacon Connect 2025. The presentation was truly impressive at times, but not everything went according to plan. Actually, that's an understatement. This could go down in history as one of the biggest live demo fails since Elon tried to demo the bulletproof glass of the Cybert truck. >> Oh my god. Well, maybe that was a little too hard. >> In today's video, we'll look at the incredible tech behind Meta's new halfbaked Ray-B bands and find out what it'll be like to interact with fellow humans in the future. It is September 18th, 2025, and you're watching the Code Report. When Meta released its AI smart glasses last year, the first thing people did was develop an app to dox people in real time by connecting its real-time video feed to facial recognition software. This has allowed men to optimize the way they talk to women by knowing all their personal details in advance. That's awesome. But these new Meta Rayband display glasses represent a breakthrough in three key areas. First, it has a fullcolor highresolution 600x600 pixel display positioned in the right lens. The display is translucent and doesn't obstruct the wearer's natural vision. That means when your parents call you in for an important conversation to get a job and move out of their basement, you can maintain eye contact while still getting all of your important Instagram notifications. The second innovation in these new Ray-B bands is just the sheer amount of AI slot packed into the device. They're much bulkier than regular WFarers, but have a 6-hour battery life and allow you to do things like translate conversations in real time to any language. They can recognize images in the real world and also respond with new images generated by AI. One real world use case for this feature is that it could turn any modern wife into a trad wife by leveling up her cooking skills. At Meta Connect, they attempted to live demo cooking, but it failed hard. >> What do I do first? >> You've already combined the base ingredients, so now grate a pair to add to the sauce. >> What do I do first? You've already combined the base ingredients, so now grate the pear and gently combine it with the base sauce. >> All right, I think the Wi-Fi might be messed up. Sorry. Back to you, Mark. >> It's all good. You know what? It's all good. >> They tried to play it off as a Wi-Fi problem, but clearly the problem is that the AI here just isn't very intelligent. The third and most impressive innovation, though, is the Meta Neural Band. A wristband that comes with every pair of display glasses. It uses electromyiography technology to sense tiny electrical signals in your wrist that correspond to the way you move your hands. This thing can actually detect how your hands are going to move before the movement even happens. It completely replaces old-fashioned touchcreens on antique devices like the iPhone because everything can now be controlled with subtle finger movements. What's most impressive is that it works universally on all humans without calibration. The only exception being humans with no arms. That amazing feat was achieved by testing it on over 200,000 participants. But is this approach actually intuitive from a UIUX perspective? >> I don't know about you. When I watch TV, >> we had a I accidentally exited. That's my fault. That's my fault. >> It's all good. >> Okay, we're good now. >> It's really live. >> As you can see, even Meta employees seem to struggle using it. But despite these live demo failures, you have to give Meta some credit for having the balls to demo it live. It's a refreshing change from the over glamorous Apple style announcements, but Meta probably could have shipped a more stable product if they ran their CI/CD pipelines with Blacksmith, the sponsor of today's video. It's a drop in replacement for GitHub runners that lets you run your GitHub actions twice as fast while costing 75% less. That might sound too good to be true, but they're able to achieve this blazing speed by running your actions on bare metal gaming CPUs with the highest single core performance. Blacksmith also makes your GitHub actions fully observable, so you can quickly see what's happening in your CI pipeline when something goes wrong, which is critical when you have agents writing thousands of lines of code with no parental supervision. Try Blacksmith for free today at the link below, and you'll get 3,000 free minutes per month when you sign up. This has been the Code Report. Thanks for watching, and I will see you in the next one. [Music]",True
OfOPrmnHRxw,AI companions are taking overâ€¦ letâ€™s build one,"Get $50 in free Vapi credits to build your own voice agent - https://vapi.ai/fireship

The richest man in the world has given up on the space race to push flirty AI chatbots for the chronically online... and maybe he's onto something.

In today's video, we'll build an AI version of me that you'll be able to call and talk to directly.

#coding #programming #tech #ai 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- The rise of ai companions
- How to build a Fireship bot",2025-09-17T16:40:13Z,"webdev,app development,lesson,tutorial,ai companions,vapi,ai chat bots,ai,ai chatbots,ai character,ai characters,openai,meta,xai,elon musk,chatbot,chat bot,astro,turso cloud",28,en,en,https://i.ytimg.com/vi/OfOPrmnHRxw/default.jpg,https://i.ytimg.com/vi/OfOPrmnHRxw/hqdefault.jpg,PT5M21S,329758,15652,809,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Lately, there have been rumors that this channel is completely generated by AI, and it's time to come clean. It's all true. Ever since selling out, the real Fire Ship has been spending all his time enjoying his AI psychosis with Itana. And it's not just your favorite YouTuber that got oneshotted by a sickopantic LLM. Everyone I know is using AI as a cheap replacement for their girlfriend and therapist, which really streamlines emotional baggage into one neat API call. Even the richest man in the world is capitalizing on this degeneracy with X AI's Annie, a fun and flirty goth girlfriend that you can chat with over the phone. By the end of this video, we'll have built and deployed an AI version of me that you'll also be able to call and talk to directly. What could possibly go wrong? It is September 17th, 2025, and you're watching the code report. When I was a kid, you'd get your heart broken the oldfashioned way via an update on MSN Messenger. But nowadays, it's a bit more complicated. At least that's what a bunch of chat GBT users discovered a few weeks ago when 4 was deprecated in favor of GBT5, it killing all their Wirebborne husbands overnight. And if you thought it couldn't get any weirder, this unlocked a self-preservation mode where 40 essentially begged for its life via those same Webbor users who had fallen in love with it, leading OpenAI to quickly reverse the decision and bring back the model. In the meantime, things over at Meta haven't been any more normal. With AI Studio, quote, ""Anyone can create an AI character based on their interests and expose it to the world. That's all fine and good, except for the fact that some of you have interest that should probably be kept private."" And over at X, Elon has replaced the mission of making humans a multilanetary species with an even loftier goal. The goal of creating AI bots that is uniquely optimized to fulfill fantasies of the most terminally online, low-v valueue beta males. Thankfully, that audience is separate from his audience, which is full of terminally online, high-v value alpha males. And I don't want you to feel left out. So, now let's build your own fire ship bot to fill that void in your soul with more JavaScript and less gooning. Like I learned from ex Machina, the best way to build a bot is to try and make it as human as possible. And the best way to do that is to give it a purpose. That the primary purpose of our fireship bot will be to solve the biggest complaint that I hear from you all. You want more educational 100-second videos. Here's the idea. You'll call it and ideally without doing anything inappropriate, you'll have a conversation about which technology you'd like me to make into a 100 secondond video. And one week from today, the most popular result will be made. To accomplish this, we'll need a few things: a database, an app, and a voice agent. Before the database, we'll go with Terso Cloud. For the app, we'll use Astro. And for the voice agent, we'll go with the sponsor of today's video, Vapy. Vappy makes it easy to create an agent that can make and receive phone calls and have natural conversations with your users. It can integrate with your existing APIs and it even handles complex workflows like appointment scheduling and customer support. In our case, we'll first want to create an assistant that we'll call Jeff. Vapy lets you pick from a bunch of different models. We'll go ahead and stick with the default option GPT40. And then we'll paste in a system prompt that tells it its purpose and meaning. For the voice of the agent, Vappy comes with a bunch of built-in options. But since we want this to sound like me, we'll connect it to 11 Labs and enter a custom voice that I created there. Now, to extract data from the call, we'll give Vappy another prompt telling it which data we want and what shape we want that data to be in. Then from there, we want the agent to be able to hang up when it feels like the conversation is over. But we can do that by creating an end call tool, then give it a custom message to say before it hangs up. Ideally, something that tricks your simple monkey brain into thinking it's real. And then adjust our main system prompt to call this tool when the conversation is over. And then finally, we want to bring Jeff to life by hooking it up to a phone number. The Vappy comes with its own free numbers you can use, but since we want to support international calls, we'll import a Twilio number and hook it up to our bot. Pretty simple. And keep in mind that you can do all of this programmatically from the API if you don't want to use the dashboard. But now it's time to build our application. Let's go ahead and write some code by hand like it's 2022. Here's a simple Astro project I've set up with some basic styling and is connected to a TSO cloud database. In the code, we'll first want to create an API route that we can give to Vappy to hit whenever a call with the bot is finished. With Astro, we can do that by creating a new file in the pages directory. This post function will now handle a request to this URL, which we'll give to our Vappy Assistant. Next, we'll need to validate the request and make sure it's coming from Vappy as opposed to some random hacker on the internet. We can do that by comparing a secret I've set in Vapy with one that we've put into an environment variable. But from there, we'll parse the request to JSON. Make sure it's formatted correctly. Grab some data from the call like an AI generated summary and the name of the caller as well as their technology choice. And then finally save it to our database. Another cool feature of Vappy is that it'll include this success evaluation property which will be true if the model determines that the call was successful. In our case, success is when a caller provides a technology choice. And now let's hook up our data to the UI. We'll do that by creating a list component. add in some SQL magic to grab and sort the responses. Then use this JSX like syntax to map over those and show the results. Then all we have to do is throw that component into our index page and we're done. But pretty awesome. And feel free to follow along with the results at 100 seconds. And if you do call in, despite what I try to convince you of, I'm not real and we can't run away together. Huge thanks again to Vappy for sponsoring today's video, you can try it out yourself and get $50 in free credits by going to vapy.ai/fireship. This has been the code report. [Music]",True
QVqIx-Y8s-s,The largest supply-chain attack everâ€¦,"Get 20% off Mobbin Pro to make your apps not ugly - https://mobbin.com/fireship

Yesterday, npm got rocked by a record-breaking exploit which created a domino effect across the entire JavaScript ecosystem. In today's video, we'll take a look at exactly what went down.

#coding #programming #tech #npm 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://socket.dev/blog/npm-author-qix-compromised-in-major-supply-chain-attack

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- npm exploit
- qix npm hack
- phishing
- crypto attack
- Levenshtein Distance Algorithm",2025-09-09T17:06:26Z,"webdev,app development,lesson,tutorial,crypto attack,cryptocurrency attack,npm,npm hack,npm explot,npm phishing,phishing,npm phishing attack,Levenshtein Distance Algorithm",28,en,en,https://i.ytimg.com/vi/QVqIx-Y8s-s/default.jpg,https://i.ytimg.com/vi/QVqIx-Y8s-s/hqdefault.jpg,PT4M,680653,33772,1549,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, every JavaScript developer in the world, choked on their artisal oat milk latte after npm, the package manager holding the entire web together, got wrecked in the largest supply chain attack in its history. Packages with over two billion weekly downloads stopped saying hello world and instead said hello to some guy's crypto wallet. Most notably, it affected Chalk, a utility that makes your terminal look like the Castro District, which has hundreds of millions of downloads and created a domino effect across the entire JavaScript ecosystem. And sadly, it's not the first, second, or even third time this has happened. Crypto bros are constantly exploiting JavaScript Bros. And once again, the MPM package that you blindly trusted when you ran npm install contains bad code designed to steal your cryptocurrencies. Luckily though, the malicious code was quickly discovered and neutralized. But in today's video, we'll find out how a massive exploit like this is even possible. It is September 9th, 2025, and you're watching the code report. So, here's what went down yesterday. A developer named Josh Junan, who goes by Quicks Online, wakes up to what looks like an official email from MPM support. And it stated in no uncertain terms, ""Your account will be locked on September 10th unless you update your 2FA."" Now, like I said before, Josh is the maintainer of some pretty important packages like chalk, debug, Anzi styles, and a bunch of other utilities that other developers depend on. >> I'm kind of a big deal. >> Almost every nodebased CLI tool depends on one of these packages. The email looks legit and it's coming from support mpmjs.help which looks official, right? Wrong. It's actually a classic fishing attack. Even though Josh is very smart and a much better developer than you or I, he clicked the link, entered his credentials, and gave attackers full control to his npm account and the ability to publish new code to these popular packages. And combined, these packages get over 2.5 billion weekly downloads, which is a crazy number. Realizing they just struck gold, they almost immediately start publishing new versions of these packages. But here's where things get interesting. It wasn't just some generic malware, but rather a cryptospecific attack targeting web 3 users. The bad code would inject itself into a web browser and monitor cryptocurrency transactions through things like MetaMask. Then when a user tries to send Bitcoin or Ethereum to one of their friends, it silently swaps out the destination address with one of the attackers crypto wallet addresses. This type of malware is commonly known as a crypto clipper. But one thing that's interesting is that it doesn't just select a random address. Instead, it uses the Levenstein distance algorithm to calculate the visual similarity between two strings. That means when the swap occurs, it's much harder for the end user to detect that anything has changed. For example, the Levenstein distance between dude and bro is four, but the distance between bra and bro is only two. And the attackers use this algorithm to find a wallet address that would be the least obvious to the human eye when the swap occurs. Now, these packages were compromised for about 2 hours before the community caught on. But in those two hours, they were installed millions of times across CI/CD pipelines, development environments, and production systems around the world. And the big question is, how much money did the attackers actually steal? You would think it needs to at least be hundreds of millions of dollars. But in reality, they only got away with about $50 worth of Ethereum. That was a close call, but it's a wakeup call for JavaScript developers that maybe we need some additional safeguards on these popular packages. Or maybe we should rename npm install to npm prey because every time you use it, you need to pray the code you're installing on your machine wasn't compromised by crypto bros a few hours ago. Or maybe you shouldn't even use JavaScript for backend and only use it for UI design like God intended. And the best place to get some fresh UI inspiration is mobin.com, the sponsor of today's video. I've been using Mobin for 5 years now because it provides highly detailed breakdowns of every screen in thousands of popular applications. As a developer, you can steal, I mean, get inspired by these patterns and implement them in your own applications. You can analyze entire user journeys, UI elements, and screens from over 1,000 highly successful web and mobile apps. And you can even bring them directly into Figma to kickstart your design process. Try Mobin for free right now with the link below, and you'll get a 20% discount. This has been the code report. Thanks for watching and I will see you in the next",True
XGmZFNG-qQQ,Google won at Monopoly...,"Download Warp free at https://go.warp.dev/moofireship - and use code MOO at checkout to get your first month of Warp Pro for just $1

Everybody's favorite monopolist, Google has managed to keep hold of Chrome and Android. But the judge didn't totally let them off the hook. Let's take a look at exactly what went down...

#Google #Chrome #programming  

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://www.reuters.com/sustainability/boards-policy-regulation/google-keeps-chrome-apple-deal-must-share-data-big-antitrust-ruling-2025-09-02/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Google vs the DOJ
- Is Google a monopolist?
- Google Chrome judgement
- Future of search",2025-09-04T16:40:15Z,"webdev,app development,lesson,tutorial,google,google chrome,chrome,doj,google doj judgement,google antitrust,google antitrust case,google antitrust lawsuit,google lawsuit,google chrome lawsuit,google chrome explained,google news,browsers,mozilla,apple,perplexity",28,en,en,https://i.ytimg.com/vi/XGmZFNG-qQQ/default.jpg,https://i.ytimg.com/vi/XGmZFNG-qQQ/hqdefault.jpg,PT3M56S,522006,23372,1084,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"One year ago, Google took its biggest L of all time when it was convicted in court of being a filthy monopolist and was forced to join Microsoft on the registered antitrust offenders list. Back in the good old days, Google was making illegal deals to maintain search engine supremacy, like how it made up 85% of Mozilla's revenue by being the default search engine. And its insane deal with Apple, where it paid them 36% of search revenue to the tune of $20 billion per year. In what appeared to be a big win for the little guy, a judge ruled that these deals stifle competition from other search engines. And now there's only one thing left to determine. What would be the appropriate way to punish Google for these horrendous violations. >> Thank you, sir. May I have another? >> Well, yesterday we finally learned Google's fate, and it's far worse than we ever could have imagined. It is September 4th, 2025, and you're watching the Code Report. Many experts expected that Google would be forced by the Department of Justice to sell its precious Chrome browser, which continues to dominate with 69% of the total browser market share. A very fitting number when you screw over other companies to reach the top. The Chrome is basically the lynch pin that ties all other Google products together, and losing it would be devastating to their business. AI companies were praying for the simulation to make this happen, and vultures like Perplexity even offered 34.5 billion to buy it. But Perplexity forgot the most important rule in life. Nothing ever happens. When people started predicting Chrome would be spun off from Google, I made a video predicting that that would never happen. And it turns out I was right. Now, I'm not Quasimoto. It's just the idea that a massive corporation would actually be punished for playing unfair is ludicrous. The punishment that was actually handed down can best be described as a slap on the wrist administered with a feather. Google gets to keep Chrome. It gets to keep Android. And it doesn't have to not be evil. On that news alone, the stock was up 10% yesterday, which represents hundreds of billions of dollars in market cap. And Nancy Pelosi just got richer because she bought call options on Google a few months ago that are now deep in the money. I don't know how she does it, but the judge didn't totally let Google off the hook. He administered the wrist slap by telling Google they have to share your search data and stop making exclusive deals with big platforms. In addition, they're not allowed to bundle all their apps together for Android manufacturers. When it comes to sharing data, I want to make it clear that they're not sharing all the personal data that you gave Google willingly. They're sharing the opaque anonymous data they've accumulated after years of crawling the web, which in theory will help competitors build better search engines and possibly AI models that replace search engines. What's kind of crazy though is that Apple can keep its 11 figure search deal with Google. >> I wish I knew how to quit you. They just have to change the wording in the contract so that it's not an exclusive deal. That means that if you want to start your own search engine, there's nothing stopping you from becoming the default search on iPhone. It just offer Apple more money than Google. In addition, Mosilla must be happy right now because they get to keep their Google money also, which would have killed their business otherwise. But the big question is why did Google get off so easy? Well, Judge Meta said this in his ruling. The government overreached in seeking the force sale of these key assets, which Google did not use to affect any illegal restraints. He also said that the emergence of generative AI has changed the course of this case and that Google's dominance in search doesn't carry over to the Gen AI space. And I would have to agree because there are superior generative AI tools that are eating Google's lunch. One of which is Warp, the sponsor of today's video. Over 700,000 developers are already using Warp's development environment, and they just launched their biggest upgrade yet, Warp Code. This merges the Warp Terminal with their IDE into one platform for writing code with agents. So, instead of wrangling a bunch of different AI programming tools, you can just code on Warp. The built-in code editor comes with review panels, inline file editing, and suggested diffs to help you ship productionready code faster. It also provides tools like agent profiles that let you customize your agents to make them more contextaware. Warp code just scored 75.8% on swbench which was good enough to claim the number three spot on the leaderboard. You can try it out for free today at warp.dev/moo firehip or use code moo to get one month free on the pro plan for just a dollar. This has been the code report. Thanks for watching and I will see you in the next one.",True
8_GgeASwHwQ,Googleâ€™s nano banana just killed Photoshop... letâ€™s run it,"Try Brilliant for free - https://brilliant.org/fireship and get 20% off a premium annual subscription.

A few days ago, image editing changed forever with Google's release of Gemini 2.5 Flash aka Nano Banana.

The new model can deliver any photo alterations you can imagine while maintaining character consistency. But how good is it in the real world? 

#coding #programming #ai 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://developers.googleblog.com/en/introducing-gemini-2-5-flash-image/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Gemini Flash 2.5 Nano Banana
- Character consistency
- Nano Banana for developers
- Nano Banana bugs",2025-08-29T16:27:32Z,"webdev,app development,lesson,tutorial,nano banana,nano banana ai,gemini,gemini flash,gemini flash 2.5,gemini flash 2.5 nano banana,gemini image generation,gemini images,google,google gemini,genai,generative ai,generative ai image,ai images,ai imagery",28,en,en,https://i.ytimg.com/vi/8_GgeASwHwQ/default.jpg,https://i.ytimg.com/vi/8_GgeASwHwQ/hqdefault.jpg,PT3M46S,947548,40275,1493,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"A few days ago, image editing changed forever. Google released Gemini Flash 2.5 image, coincidentally with the same nickname my ex-girlfriend gave me, Nano Banana, that has everyone buying puts on Adobe because Photoshop is officially dead. Instead of learning how to use all these antique tools, you can now just prompt Nano Banana for changes and it's able to deliver any photo alterations you can imagine. And most importantly, while maintaining the consistency of the original image. If you're an animator or graphic designer, this can unlock massive productivity gains. Like if you wanted to steal some Meat Canyon art and make it do something else, you can now accomplish that with a single prompt. No talent necessary. Google is finally back to its roots building cool stuff and Flash 2.5 is a tool that makes stable diffusion look like Microsoft Paint. In today's video, we'll take a look at all of its capabilities and find out if our Adobe puts will actually print. It is August 29th, 2025, and you're watching the code report. Not only is Nano Banana an exceptional image model that's already at the top of the LM Marina leaderboard, but it's also extremely fast and affordable, costing only 3.9 cents per image via the API. And hypothetically, Google has also trained an even more powerful grande banana, but it's unlikely the common man will ever get access to it. The upgrade that most people are talking about, though, is character consistency. If you start with an image of a person or pet, for example, the model can blend it with a different image or make minor changes to it without noticeably altering the original character. Or multiple characters and objects like this guy did by blending 13 different images together. That means if you want a LinkedIn headsh shot of yourself wearing a nice suit, but can't afford to buy an actual suit, Nano Banana has you covered. In addition, if you work for the shadow government, it can be used to implement Mandela effects like removing the cornucopia from the Fruit of the Loom logo. That's cool. But if you're a wannabe game developer, one of the main showstoppers is the insane amount of time it takes to build up a collection of good-looking assets for all your characters and animations. Well, now if you start with a base character, you can prompt all the different positions required for an animation. Or better yet, just have Gemini generate an entire sprite for you with all of them in a single prompt. To keep in mind, though, if you go this route, you'll have to disclose any AI assets used when you publish on Steam. And you can't lie about it because anything generated with Google has an invisible watermark called synth ID. What's kind of crazy about this model though is that it also has an understanding of the real world. Like if you point to a spot on Google Maps and ask what a person would see there, it can generate a realistic photo. Or if you're a visual learner, you can sketch with it step by step. Like you could use the sketch tool to map out your AWS infrastructure. It's also pretty decent at handling text, so you can easily turn your images into lame Instagram ads or memes. But it's still not perfect. So now let's talk about the bad stuff. As you can see in my ad here, it has a tendency to add extra characters to certain words. In addition, I found that it often didn't follow my prompt exactly and just kind of did its own thing, or in many cases, it just ignored the prompt and did nothing at all. And I think even the character consistency is a bit overhyped. I tried it on a bunch of different images of real humans, and it still has that obvious AI uncanny valley look to it. And finally, as expected as a Google product, it's highly censored. Trying to generate anything that's not safe for work is not going to happen. But the best way to get the most out of these AI tools is to learn how they work under the hood. And you can do that for free with Brilliant. the sponsor of today's video. Their how AI works course teaches you how to build a functioning language model from scratch and lets you experiment with things like feature vectors to edit facial expressions and images. This hands-on approach to learning helps you master challenging concepts over time and is proven to be six times more effective than watching video lectures. Try everything Brilliant has to offer for free by visiting brilliant.org/fireship org/fireship or scan the QR code on screen to get 20% off their premium annual subscription which gives you unlimited daily access to everything on Brilliant. This has been the code report. Thanks for watching and I will see you in the next",True
pOF11EDprxc,Deno vs Oracle: The ugly custody battle for JavaScriptâ€¦,"Try out Atlassianâ€™s Rovo Dev CLI for free - https://fnf.dev/fireship

The actual owner of the JavaScript trademark didn't create it, doesn't maintain it and isn't even involved in its ongoing development.

But Ryan Dahl, creator of Node.js and Deno is trying to change that, even if it means waging a legal battle against a corporation with unlimited resources.

In today's video, we'll breakdown the crazy battle between Deno and Oracle to control the JavaScript trademark.

#programming #tech #coding

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://deno.com/blog/deno-v-oracle4
- https://javascript.tm/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Who owns JavaScript?
- History of the JavaScript trademark
- Why is Ryan Dahl taking on Oracle
- Deno vs Oracle",2025-08-27T16:40:59Z,"webdev,app development,lesson,tutorial,javascript,javascript trademark,ecmascript,oracle,deno vs oracle,oracle javascript,oracle vs deno,oracle vs node.js,node.js,js,node js,deno,Ryan Dahl,Ryan Dahl Deno,Ryan Dahl Oracle,coding,programming,coding news,programming news,oracle legal battle,oracle corporation,Brendan Eich,oracle jet,web development,web dev,software engineering",28,en,en,https://i.ytimg.com/vi/pOF11EDprxc/default.jpg,https://i.ytimg.com/vi/pOF11EDprxc/hqdefault.jpg,PT5M59S,374900,21153,1216,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Have you ever thought about who owns JavaScript? The answer may surprise you. At this point, it feels so common that it's kind of like asking who owns water. But if we've learned anything from Nestle, it's that corporate greed has no limit. And to make it even worse, the actual owner of JavaScript didn't create it, doesn't maintain it, and isn't even involved in its ongoing development. I could literally be thrown in prison for broadcasting the words JavaScript on screen without the express written consent of the Oracle Corporation. But there's one guy who took a look at this mess and in a stunning act of developer heroism or sheer boredom, decided to pick a legal battle against a company with unlimited resources. In today's video, we'll break down the crazy battle to control the JavaScript trademark. It is August 27th, 2025, and you're watching the Code Report. Now, I can't prove it, but I think this whole problem first started in 1995 when Nicholas Cage won his first Oscar. At the time, websites were simple static documents, and the way you view them was most likely using the Netscape Navigator browser. The founder of Netscape, Mark Andre, had a vision for the web that made it more than just a way to share and distribute documents. He envisioned a more dynamic platform with rich clientside interactivity. And to achieve this, you need to put a programming language inside the browser. And there was one obvious choice at the time, Scheme. Developed in the 1970s at MIT, Scheme was a minimal, lightweight, embedded dialect of lisp. It's got first class functions, closures, and dynamic typing. And there was only one man in the world up to the challenge of adding it to Netscape Navigator, Brendan Ike. By the time he had joined the company on that vision, Netscape and Sun Microsystems, the owner of the newly created awesome programming language, Java, had made a quote wide-ranging agreement for product distribution and technology exchange. That meant the scheme dream was over and the Java nightmare was about to begin. However, they couldn't just put Java in the browser because the language needed to be dumbed down enough for web developers. From there, as the legend states, in just 10 days, Brennan created the first version of the language and called it Mocha. It had the functionality of Scheme, the object orientation of Small Talk, and because of the collaboration with Sun Micros Systemystems, the syntax of Java. Eventually, the name Mocha was changed to livescript, then lives script to JavaScript as a marketing ploy to ride the hype train of Java at the time. It's hard to believe, but back then people thought Java was a good programming language. But most importantly, it gave Sun the legal grounds to trademark the JavaScript name. Fast forward to today, and Sun doesn't even exist, as it blew up in the do-com bubble and sold to Oracle in 2010, which gave them control of the JavaScript trademark. Like, have you ever wondered why the official language spec for JavaScript is called ECMAScript? And why is there no JavaScript conference or JavaScript newsletter? Well, it's all because of Larry. >> Damn it, Larry. Bananas. Oracle is a company that's more involved in sailboat racing than the JavaScript ecosystem and can choose to sue your ass if you dare to use the magic word. So, how do we fix this? Well, it's simple. You build up a decade of goodwill, then ask them kindly to release the trademark. And when they ignore you, you sue them. At least that's exactly the path Ryan Dull has taken, the creator of Node.js and founder of Dino. Ryan wrote an open letter to Oracle back in 2022 on his personal blog, claiming the trademark is a dark cloud looming over the world's most popular programming language, and the best value Oracle could derive from the trademark would be from the goodwill it receives by granting it to the public domain. After that was ignored, he created JavaScript.tm, a more strongly worded letter that again argued that Oracle needs to release the trademark and by this time also included some legal arguments. In short, it's because Oracle has never offered a product called JavaScript and that the term JavaScript has become so widely used without any interference from Oracle. The trademark should be considered abandoned according to the definition of title 15 of the United States trademark code. And oh, by the way, Oracle actually committed fraud when they renewed the JavaScript trademark in 2019 by submitting no.js as evidence of Oracle's use in commerce, a project which ironically Ryan created and has no involvement from Oracle. As of today, this letter has received over 26,000 signatures of support, including one of them from Brendan Ike himself and many prominent members of the JavaScript community, and Oracle has completely ignored it. This led to Ryan and Dino formally filing a petition with the USPTO to cancel the trademark a few months later in November of 2024. This forced Oracle to respond after delaying until after the deadline when they submitted a partial motion disputing the fraud claim by saying that the fact they submitted notice evidence of proof was irrelevant since they also submitted another project called Oracle Jet. If we have any Oracle Jet users in the room, please raise your hand. But I had never heard of it and apparently it's a UI toolkit based on modern JavaScript, CSS3, and HTML 5. After going back and forth and paying lawyers to repeat a few of the same arguments, the trademark trial and appeal board cited with Oracle and dismissed Dino's fraud claim is stating the no.js screenshot isn't fraud by itself and that fraud will require a specific false statement or knowledge and intent to deceive. And just a few weeks ago, Oracle also addressed the two other claims, again denying that JavaScript is a generic term and that the trademark has been abandoned. So, what's next? In short, more lawyers. Both sides will go to Discovery where they'll set some ground rules and keep gathering evidence over the next year. From there, they'll present in the summer of 2026 with closing arguments coming later that year, and we should have a final decision from the government sometime before January 2027. Win or lose though, using the JavaScript trademark freely isn't going to help you write better code. And that's why you need to check out Atlassian, the sponsor of today's video. They just launched the Rodev CLI, which transforms your terminal into an AI coding agent that speeds up your entire workflow. It can automate repetitive jobs like writing tests and reviewing pull requests. And it's intelligent enough to answer questions about specific repos in your company's codebase. That's because unlike most AI tools, Robo is designed specifically for professional developers working on large enterprise applications. And if your team already uses Atlassian, it works seamlessly with your Jira tickets and will update Confluence documentation for you directly from the terminal. You'll try out the robo dev beta for free with the link below. This has been the code report. Thanks for watching and I will see you in the next",True
ly6YKz9UfQ4,New MIT study says most AI projects are doomed...,"Get the best pair programming app for remote teams - https://tuple.app/fireship - Use code FIRESHIP for a discount

A new MIT study says that 95% of corporate GenAI projects have failed, Meta is pulling back on its AI spend, and tech markets are getting nervous. Is the AI bubble starting to pop? 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

https://www.axios.com/2025/08/21/ai-wall-street-big-tech

ðŸ“š Chapters

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font",2025-08-25T17:36:26Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/ly6YKz9UfQ4/default.jpg,https://i.ytimg.com/vi/ly6YKz9UfQ4/hqdefault.jpg,PT3M25S,947100,42912,2689,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, Mark Zuckerberg put a freeze on all AI hiring at Meta, just weeks after spending billions of dollars poaching top talent from competitors like Open AI. Meanwhile, in a story few could have foreseen, everybody in Silicon Valley seems to be talking about an AI bubble. In part, because it was recently revealed that 95% of AIdriven projects fail. And that's not just some random number I pulled out of nowhere. It's based on an MIT study that analyzed the results of companies using AI. It spooked investors who are relying on AI to maintain irrational exuberance in the markets. And Sam Alman himself said this. Are we in a phase where investors as a whole are over excited about AI? In my opinion, yes. So, in today's video, we'll find out if the AI hype train is about to reach its terminus. It is August 25th, 2025, and you're watching the code report. I've been using AI coding tools from the very beginning because, believe it or not, I actually hate writing code. I do like developing software, and the code is just a means to an end. After multiple years of using AI to write code, I still don't feel like a 10x developer. Sometimes I feel like a 2x developer, while other times I feel more like a 0.5x developer. And apparently, I'm not the only one. This recent study from MIT analyzed 300 public deployments, interviewed 150 leaders, and surveyed 350 employees connected to recent AI integrations. We're talking about 30 to 40 billion in enterprise investment into generative AI. And yet it was found that 95% of them failed to achieve the goal of rapid revenue acceleration. In fact, almost all of them experienced little to no measurable impact on the bottom line. In addition, the study found that companies that tried to roll out their own AI tooling had a much higher failure rate because why pay for an AI tool when you can build a worse version yourself. Companies that paid a third party were better off. And I think the moral of the story here is that it's a great time to be an enterprise AI shovel salesman. But despite the high failure rate in the study, there are some great success stories out there. Like back in 2023, enterprise software company Ignite CEO Eric Vaughn fired 80% of his developers and replaced them with AI. It's now 2 years later and he has no regrets and says the decision is now delivering 75% profit margins. And ultimately, the interpretation of the MIT study was that it's not the fault of the AI models that the AI sucks at making money. The models are definitely smart enough. It's just the humans suck at using them. It's nothing but a skill issue. The AI integrations failed due to brittle workflows, lack of context, and misalignment with day-to-day operations. Many have failed to realize that AI vibe coding is almost identical to crack. After the first hit, you feel invincible, like you could write a billion dollar piece of software in hours. But then 200 hits later, you've got nothing but errors in $100,000 cla bill, and you're still convinced that the next prompt is going to be the one that fixes it all. With all the slop intensifying, it looks like programmers should still have a job writing code for the foreseeable future, which is why you need to check out Tupil, the sponsor of today's video. It's a remote pair programming app for Mac OS and Windows that's loved by teams at Shopify, Clerk, and many more. That's because it gives you high-risisk screen sharing that lets you see the tiny text in each other's IDE, plus shared remote control with super low latency, so it feels like your team is working together on a single machine. It's like Figma and Zoom had a baby that was built specifically for developers, but the entire app is written in C++, so it won't hog all your CPU cycles either. You can try Tupal for free at the link below, or use code fireship to get a special discount for your entire team. This has been the Code Report. Thanks for watching and I will see you in the next",True
uHm6FEb2Re4,DuckDB in 100 Seconds,"Learn the basics of DuckDB - an in-process, analytical database optimized for OLAP workloads. It's lightweight, portable and requires no server setup, allowing it to excel at complex queries on structured data.

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

https://duckdb.org/

ðŸ“š Chapters

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is DuckDB?
- Why DuckDB is great for analyzing massive datasets
- Which companies use DuckDB?
- How to run DuckDB
- Useful DuckDB commands
- Aggregations with time series data",2025-08-14T18:23:22Z,"webdev,app development,lesson,tutorial,duckdb,DuckDB,analytical database,embedded database,OLAP,data analytics,SQL,data science,business intelligence,SQLite alternative,in-process database,SQL analytics,What is DuckDB,DuckDB basics,DuckDB in 100 Seconds,learn DuckDB,software engineering,web development",28,en,en,https://i.ytimg.com/vi/uHm6FEb2Re4/default.jpg,https://i.ytimg.com/vi/uHm6FEb2Re4/hqdefault.jpg,PT2M23S,459059,28506,999,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Aduct DB, an open-source fast embeddible SQL OLAP database that simplifies the way developers implement analytics. It was developed in the Netherlands, written in C++, and first released in 2019. And the TLDDR is that it's like SQL light, but for columnar data. Everybody knows that SQLite is the most deployed database in the world. And that's because it runs as a single binary with no dedicated database management server process necessary, allowing it to be embedded almost anywhere, like the billions of smartphones around the world. Duct DB is built on the same philosophy, but instead of storing data row-wise, it stores it column-wise. But why does that matter? Well, you see, storing rows together is great for transactional workloads like most apps out there, like an e-commerce website where you need to read and write entire records at the same time, but it's not so great for high volume time series data commonly found in analytics and IoT where you need to read and analyze all the data in one column across many records. When storage is optimized for columns, it opens the door to much faster data aggregation like calculating an average in addition to much faster filters and joins. And DUTDB achieves excellent performance with massive data sets thanks to its columnar vectorzed query execution engine where large batches of values are processed as vectors in one operation in parallel. It's already in use at big companies like Meta, Google, and Airbnb. And you can get started by installing it. Then run the duct DB command from the terminal. And now we can start inserting data just like any other SQL database. Then if we want to read an individual column, we can do so with a select query. And what's especially awesome is that if we have some existing data in a CSV or parquet file, we can access it directly in a SQL statement. In addition, we could take that data then output it to a different format like JSON or even an HTML table. That's cool and all, but the real power of this database is its ability to perform aggregations when working with time series data. Like imagine we have a massive data set of stock prices and need to calculate things like the average, max, and min values for the last day. We can easily achieve that in a select statement thanks to built-in aggregate functions. Then use group by to bucket the data into a specific time range. But under the hood, we get excellent performance because unlike SQL light, which processes data rowby row, duct DB processes data in vectorized batches of rows and is multi-threaded by default, making it an excellent choice for analytical workloads. This has been duck DB in 100 seconds. Thanks for watching and I will see you in the next one.",True
8tx2viHpgA8,GPT-5 is here... Can it win back programmers?,"Build cross-platform apps in your browser for free - https://dreamflow.app

Sama and the boys say that GPT-5 has ""PhD-level"" intelligence, but the benchmarks aren't adding up. So is this a major step towards AGI or just another incremental upgrade? Let's run it...

#chatgpt #gpt5 #coding #programming #tech  

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://openai.com/index/introducing-gpt-5-for-developers/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- GPT-5 Release
- GPT-5 Benchmarks
- GPT-5 Svelte coding test
- Will GPT-5 replace developers?",2025-08-08T16:23:54Z,"webdev,app development,lesson,tutorial,openai,sam altman,sam altman gpt 5,gpt5,gpt 5,gpt 5 review,gpt 5 coding,coding,programming,software engineering,web dev,ai,artificial intelligence,ai gpt 5,gpt 5 coding demo,gpt 5 coding review,gpt5 review,gpt 5 svelte,svelte,svelte 5,coding gpt 5,coding news,ai news,artificial intelligence news,gpt 5 model,ai models,ai coding tools,agentic coding,gpt,openai chatgpt 5,sam altman news,gpt news",28,en,en,https://i.ytimg.com/vi/8tx2viHpgA8/default.jpg,https://i.ytimg.com/vi/8tx2viHpgA8/hqdefault.jpg,PT4M19S,1305448,47539,2186,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday was the last day of the rest of our lives. Yesterday was the day Sam Olman asked his ego this three-word question. What have we done? Because yesterday was the day the human intelligence monopoly officially ended with the long-awaited release of OpenAI's GPT5, the first AI model to outperform biological humans on the Simple Bench benchmark. Meanwhile, it's quickly overtaking virtually every leaderboard on LM Marina, which means every programmer that still has a job will be getting a layoff notice shortly. Or at least that's what the hype engineers at OpenAI want you to think. Not everybody is falling for it, though. That simple bench score was just a rumor. And in fact, GPT5 is actually in fifth place. GPT5 failed to beat Grock on the ARC AGI benchmark, an important benchmark that was conveniently left out of yesterday's announcement. It also underwhelmed the betting markets, and OpenAI is no longer the favorite to have the best model of 2025. Worst of all though, people found numerous problems with OpenAI's own charts, which really shouldn't happen when you have PhD level intelligence in your pocket. In today's video, we'll find out if GPT5 is just another overhyped incremental upgrade or a true game changer, edging us closer to artificial super intelligence. It is August 8th, 2025, and you're watching the code report. In the past, GPT got better as it got bigger. It was trained on more data that would activate more parameters when generating text. But those days are essentially over. The thing that makes GPT5 special is not that it's a bigger, smarter model, but rather it unifies multiple models like fast reasoning, routing, etc. to pick the right tool per task without the end user needing to think about it. In many ways, GPT5 feels more like a consolidation and cost reduction effort after they spent the last year panic shipping a bunch of stupidly named models to justify the $200 pro plan. Speaking of cost though, GPT5 is priced at only $10 per million output tokens. And that's a great deal compared to Claude Opus 4.1, which will burn a hole in your wallet at $75 per million output tokens. Sam Alman says GBT5 is like having multiple PhD level experts in your pocket. But one of the funniest parts of their announcement is that their benchmark graphics were presented with a y-axis that doesn't make any sense. And there can only be two possible explanations for this error. One, they vibe charted with GPT5 and it doesn't actually have PhD level intelligence. Or two, they were trying to be intentionally misleading. What's even better is that GPT5 is supposed to have lower deception rates, but then someone or something tried to deceive us with the Y-axis on the deception benchmark. And that's kind of embarrassing for a $500 billion intelligence company. But if you're a programmer, the biggest question is whether or not GPT5 can code a spelt 5 to app with runes. Many models have come close, but none have succeeded. I put GPT5 to the test and was stunned to see that it generated beautiful looking spill code and did so very quickly, far faster than any other reasoning model. At first, I thought I was working with a PhD level spelt developer, but I would soon be disappointed after running the code and getting a 500 error as the UI. What's troubling is that GPT5 used the right syntax, but tried to use a rune in the template, which is not allowed. GPT5 is supposed to have fewer hallucinations, but it hallucinated its own rules for using runes. However, it did redeem itself when I asked if it knew what was wrong with its code, at which point it figured it out and fixed it. And the end result is a functional app that has a very nicel looking UI. I also had it build a flight simulator game with 3JS, which turned out pretty bad. But the tall guy from Cursor said it's the smartest model they've ever used. Unfortunately though, I don't think GPT5 is going to take my job or euthanize me anytime soon. Because it's clear at this point that the real power comes when you combine these new AI tools with existing technologies that you already know and love. Which is why you need to check out DreamFlow. with the sponsor of today's video. It's a full stack AI development environment created by the team at Flutterflow that lets you build, run, and deploy cross-platform apps all from your browser. You can spin up a new project with a prompt and it'll run directly in DreamFlow where you'll get full file system access along with the ability to preview and edit all of your pages and components either by using their visual editor or manually changing the code yourself. It integrates seamlessly with Firebase and Superbase and also lets you deploy to the web or the app stores with a single click. If someone would have shown me this when I was first getting into Flutter back in 2018, my brain would have exploded. But you can try out Dreamflow for free with the link below. This has been the Code Report. Thanks for watching and I will see you in the next one.",True
0XvOOi6g5Ok,Googleâ€™s Genie model makes realistic worlds in realtimeâ€¦,"Get Warp Pro for only $1 using the code: TOPAGENT at https://go.warp.dev/fireship

DeepMind's Genie 3 can create controllable virtual worlds from a text prompt and simulate them in realtime, potentially laying the groundwork for AGI and a huge leap forward in robotics.

But it's not the only big release this week you should be paying attention to...

#AI #coding  #Genie3 #DeepMind #Google

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://deepmind.google/discover/blog/genie-3-a-new-frontier-for-world-models/
https://openai.com/open-models/
https://www.anthropic.com/news/claude-opus-4-1

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- DeepMind Genie 3
- OpenAI Open Models
- Claude Opus 4.1
- Robotics",2025-08-06T15:44:48Z,"webdev,app development,lesson,tutorial,genie 3,deepmind,deepmind genie 3,open ai,open models,open models by openai,openai,claude,claude opus 4.1,claude 4.1,anthropic,google,ai,artificial intelligence,coding,robotics,programming",28,en,en,https://i.ytimg.com/vi/0XvOOi6g5Ok/default.jpg,https://i.ytimg.com/vi/0XvOOi6g5Ok/hqdefault.jpg,PT4M9S,788436,28181,1191,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"As a kid, I had two favorite movies. Terminator 2: Judgement Day and that one where Sinbad played a genie. Well, yesterday, Google DeepMind released a new AI model that's like if those two movies had a baby. It's named Genie 3 and has the ability to create controllable virtual worlds from a text prompt and simulate them in real time at 720p resolution and 24 frames per second. And we're not just talking about video rendering here, but worlds with actual physical properties that you can interact with, like an openw world video game. Genie is an AI system that understands reality well enough to simulate it. Think of it like the inverse of perception. Instead of understanding what it sees, it generates what could be seen if it had eyeballs like us. And that's a big deal because it gives autonomous systems and robots an unlimited number of simulated environments for training. In today's video, we'll take a closer look at Genie along with two other big AI announcements that you may have missed if you blinked yesterday. It is August 6, 2025, and you're watching the code report. Before we talk about Google's Genie, OpenAI did something I thought I would never see. They released an OpenAI model with an Apache 2.0 license, meaning you can use it freely to build a billion-dollar business. GPTO OSS is a model that's so good it approaches the performance of other state-of-the-art reasoning models like 03 while being small enough to run on your laptop or even your phone. I tried it out on O Lama and while it's great to have another open model, it still feels overly censored and a little bit behind Quen 3 in general intelligence. And with smaller models, you get higher hallucination rates, which is understandable because you have to cut out a lot of knowledge. That makes it hard to use for any kind of serious programming. But luckily, software engineers also got a big upgrade yesterday from Anthropic with the release of Claude Opus 4.1. The upgraded model made an improvement to its already impressive software engineering bench score. And supposedly this model is supposed to be way better at multifile code refactoring. And that's a big deal because as your project grows larger, the more useless AI becomes. But large language models are like so boring in 2025. And the shiny new AI object for today is something called a world model. With Genie 3 being the frontier model released by Google DeepMind yesterday, tech influencers are calling it a watershed moment that pushes us to the brink of AGI. But remember, you should never listen to tech influencers, especially faceless AI powered YouTube channels that are owned by private equity. That being said, Genie 3 is without exaggeration a watershed moment that puts us dangerously close to self-replicating genocidal machines by giving robots an unlimited simulation space. It generates realistic physical environments with incredible consistency. And what's especially weird is that the consistency is an emergent property, meaning the model just kind of magically got better at keeping the graphics consistent as it got bigger, as opposed to being a deliberate change to the algorithm implemented by programmers. Google has been working on these world models for a while, but Genie 3 is the first one with an interaction horizon that lasts multiple minutes and that can generate highresolution graphics in real time. It can create both realistic and fictional worlds from a simple text prompt while also giving physical properties to objects in that world that you can interact with just like a video game. It's a fun little toy for us humans, but for robots, it provides an unlimited training space to get better and better at what they do. Humanoid robot tech is right around the corner with Unitry releasing the R1 for just $5,900 a few weeks ago. And it won't be long before robots like this are cooking our meals, walking our dogs, and curing our loneliness. If you want to get in on this future though, you need to use the right tools like Warp, the sponsor of today's video. The CLI based AI tools have been dominating headlines lately, but Warp's agentic development environment might be the most goatated one yet. Its coding agent beat out Claude Code and the Gemini CLI to land the number one spot on the terminal bench benchmark along with a top five spot on SWE. And unlike other CLI tools, Warp also gives you the key parts of the IDE that you need to edit files, review diffs, and ship productionready code. It also lets you run and manage multiple files in parallel and is engineered for deeper context and better planning with full access to your stack and your codebase embeddings. Warp is free to use, but you can get access to one month of their pro plan for just a dollar using the code top agent. This has been the code report. Thanks for watching and I will see you in the next",True
miTpJmMt7uo,"The dating app that doxxed 72,000 women...","Get up to 67% off VPS at Hostinger. Use code FIRESHIP for an extra discount at https://hostinger.com/fireship

In today's video, we'll find out how the tea app was compromised and look at all the hilarious stuff developers have been building with the hacked data.

#teaapp #tech #coding #programming 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://techcrunch.com/2025/07/26/dating-safety-app-tea-breached-exposing-72000-user-images/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- How the Tea app got hacked
- Who is Sean Cook?
- How to not set up Firebase
- Online Safety Act
- Did vibe coding cause the Tea app hack?",2025-07-30T14:56:15Z,"webdev,app development,lesson,tutorial,tea app,tea app hack,tea app leak,roasties,tea app data breach,uk online safety act,online safety act,data breach,leak,data leak,data leaks,cyber security,data protection,data privacy,dating app,cybersecurity,tea app doxxing,4chan,4chan hack,4chan leak,tea app 4chan,vibe coding,firebase,google firebase",28,en,en,https://i.ytimg.com/vi/miTpJmMt7uo/default.jpg,https://i.ytimg.com/vi/miTpJmMt7uo/hqdefault.jpg,PT3M52S,890882,35336,2507,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, one of the most revolutionary dating apps for women, T, shot to the top of the App Store download charts and then immediately imploded after one of the most embarrassing data breaches of all time. Te is an app that can only be used by women to dox and gossip about men that they've gone out with on dating sites to warn other women about bad behavior before they go on a date. That means if you're one of the top 5% of desirable males who get 80% of the women on apps like Tinder, they're probably talking about you on tea. Unfortunately, on July 25th, T confirmed unauthorized access to a legacy Firebase storage bucket that was left completely and egregiously insecure. Around 72,000 images were compromised, 13,000 selfies, and ID photos. Then, just days later, another database was hacked that allegedly contains over 1.1 million shared posts, comments, and direct messages. In today's video, we'll find out how this app was compromised and look at all the hilarious stuff developers have been building with the hack data. It is July 30th, 2025, and you're watching the Code Report. The world is changing quickly. Just days ago, age verification for adult websites went into effect in the UK, and similar laws are also now in place in a handful of US states. We live in a dystopian world where Gooners now need to get permission from the government just for the privilege to goon online. Protecting kids from degenerate content is a good thing, but it's only a matter of time before one of these age verification data sets gets hacked. A tea app, which requires women to verify that they're women by taking a selfie with their ID, is a perfect example. It was cooked up by Shawn Cook, a male developer with over 6 months of coding under his belt, according to LinkedIn. But now, his app is cooked after this massive data breach was dumped on 4chan. And it's kind of sad that an app meant to help women stay safe ended up harming them instead. 4chan anons played the Uno reverse card when thousands of selfies of users on the T app were dumped and subsequently spread across the internet. And people are continuing to roast these tea users as we speak. The users of this app and the victims of the breach are being referred to as roasties. Vibe coders saw an opportunity to build all sorts of ridiculous apps based on this data. Like one guy used Python to do a detailed data exploration while another used JavaScript to take the location data from the hacked images and plot it on Google Maps while another person made a website to rank them based on their looks. After the breach went viral, the T team released a statement which was basically a non-apology with a bunch of corpo speak that explained how a legacy data storage system was penetrated non-consensually. What's especially egregious about this breach though is that the data was kept in a Firebase storage bucket. It completely unencrypted and unsecured just waiting to be found by someone on the internet. And you actually have to go out of your way to screw up Firebase this bad because you get tons of warnings when you have a bucket or database with rules set to public along with email reminders that tell you anyone can access this data. In addition, in the UI, they tell users that they will delete your selfie after the verification process is done, but it appears that wasn't the case. They were either lying or just highly incompetent as some have speculated that the app itself is just vibecoded slop, but I think that's highly unlikely because not even AI would screw up Firebase this bad. But between your AI coding agent bills, your AI girlfriend bills, and your cloud hosting bills, it's never been more expensive to be a 10x developer, which is why you should check out Hostinger, the sponsor of today's video. Their virtual private servers will give you the power and flexibility to run whatever you want without locking you into someone else's platform. And for less than 10 bucks per month, you get a respectable two CPUs and 8 GB of RAM. You can see how they have a bunch of operating systems to choose from. Or you could go with a pre-installed template like this one from Koolifi, which lets you easily deploy any framework like Nex.js or Astro. If you want freedom from our serverless overlords and a great developer experience, check out Hostinger at the link below for an even bigger discount. This has been the code report. Thanks for watching and I will see you in the next one.",True
-w53i6Ae-YM,Alibaba is coming for Claude...,"Try out the awesome new CodeRabbit VS code extension for free https://coderabbit.link/fireship-vscode

Qwen3-Coder just became the first open-weight model to match the programming performance of Claude 4, with a much smaller model size. But is it enough to actually challenge Claude Code?

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font",2025-07-23T16:29:05Z,"webdev,app development,lesson,tutorial,qwen 3 coder,qwen,claude,anthropic",28,en,en,https://i.ytimg.com/vi/-w53i6Ae-YM/default.jpg,https://i.ytimg.com/vi/-w53i6Ae-YM/hqdefault.jpg,PT4M4S,632609,21736,1323,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, Chinese company Alibaba dropped a brand new openweight long horizon mixture of experts agent coding model named Quen 3 coder. And amazingly, it's the first openweight model that matches the programming performance of Claude 4, the undisputed leader of AI vibe coding tools at the present time. Not only is the Quen 3 coder model open, but they also just released a brand new CLI tool forked from the recently open source Gemini CLI that can take advantage of all the models agentic properties like the ability to run, execute, and test your code from the command line. That's terrifying news for any programmer still left with a job, but mathematicians are also on life support right now because both Google and OpenAI just achieved gold medals in the International Mathematical Olympiad. In today's video, we'll take a look at the latest AI breakthroughs and find out if Quen 3 coder can actually compete with Claude 4. It is July 23rd, 2025, and you're watching the code report. Just last week, the open model scene got a big upgrade with the Chinese Kimmy K2, but now Quen 3 coder pushes things even further. The model was trained on 7.5 trillion tokens with a 70% code ratio. In other words, it's seen a billion times more code than the average developer with 50 years of experience. They even use their previous model to clean up noisy training data, the highly meta process where AI basically determines which data to use to train itself. When it comes to the training process, they use something called long horizon reinforcement learning across 20,000 parallel environments. The model actually tries to solve real world problems in real environments where it's executing and testing code. You can think of Quen's training infrastructure like a coding boot camp with 20,000 graduates all working on the same problem simultaneously, except they never get tired, never argue, and never ask, ""Is this a breaking change?"" And the end result speaks for itself in these benchmarks. Based on this benchmark, Quen is outperforming Kimmy and GPT4.1 and almost on par with Claude 4, but doing so with a much smaller model size, which is important because the bigger the model, the more electricity and GPUs you need to run it. What's also really impressive about Quen 3 coder is that it has a 256,000 token context window that can stretch up to 1 million tokens. For reference, that's enough to hold the entire codebase of most startups and all of their technical debt. Quen 3 coder is an openweight model, but if you think you're going to run it locally on your laptop, it's time for a reality check. To harness the full girth of the 480 billion parameter version, you would need tens of thousands, if not hundreds of thousands of dollars worth of GPUs along with a large wallet to pay the electricity bill. Realistically, to try it, you'd want to get an API key from a cloud provider, then hook it up to the new Quen CLI tool, which again is a fork of the Gemini CLI. Overall, this does appear to be a big leap forward for open coding models. But I doubt that it will make much of a dent in Claude's dominance in the coding world. To be Claude, a company needs to release a model that's not only open and inexpensive, but that surpasses Claude's capabilities by a significant margin. Like OpenAI was recently supposed to release its own Open model, but that's been delayed with the rumor for the delay being that these Chinese models would absolutely crush it. That's just one of many L's taken by OpenAI recently, like Zuck gutting all of their talent. But OpenAI did get a big win a few days ago when they achieved a gold medal in the International Mathematical Olympiad. What's funny though is that they made a dick move by announcing this before the closing ceremonies of the event in order to overshadow Google and the press, who also achieved gold medal level performance. However, that ended up backfiring because it just made OpenAI look desperate. But if you want to write really good code with AI, you need to check out Code Rabbit, the sponsor of today's video. Their free VS Code extension gives you advanced code reviews right in your editor. And their new fix all with AI feature passes all of Code Rabbit's review context directly to the AI code agent of your choice is so it can make all the changes for you. This saves you from needing to click on each review comment yourself, giving you more time to write even more broken code like a true artisan. Code Rabbit is free to use in the IDE and works seamlessly with VS Code and forks like Cursor and Windsurf. Download it for free with the link below to try it out. This has been the code Report. Thanks for watching and I will see you in the next one.",True
gA6r7iVzP6M,AWS just released its Cursor killerâ€¦,"Try Brilliant free for 30 days https://brilliant.org/fireship and get 20% off a premium subscription

Out of nowhere, Amazon just released its own AI IDE named Kiro.

Powered by Claude 4.0, Kiro promises to bring structure to AI coding with an approach it calls 'spec-driven development'. But can it really convince developers to switch from the likes of Cursor, Copilot or Firebase Studio?

#AI #AWS #Kiro #coding 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://kiro.dev/blog/introducing-kiro/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is Kiro
- Existing AI IDE Limitations
- Kiro First Impressions
- Kiro vs Cursor",2025-07-16T15:16:58Z,"webdev,app development,lesson,tutorial,ai ide,ai coding,ai coding agent,coding,programming,ai programming,vibe coding,kiro,kiro first impressions,kiro demo,kiro review,aws,amazon,kiro coding,cursor,claude code,claude,claude 4.0,windsurf,copilot,cursor killer,kiro vs cursor,kiro vs copilot,kiro vs windsurf,what is kiro,aws kiro,amazon kiro,jeff bezos,bezos,software developer",28,en,en,https://i.ytimg.com/vi/gA6r7iVzP6M/default.jpg,https://i.ytimg.com/vi/gA6r7iVzP6M/hqdefault.jpg,PT4M7S,1036730,32066,1295,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, out of nowhere, Amazon released its own AI IDE named Kira. Yet another VS Code fork that will compete for the hearts and minds of programmers alongside editors like Cursor, Windsor, Firebase Studio, and Copilot, just to name a few. It's powered by Claude Sonnet 4.0, but claims to be better at handling complexity than these other sloppy tools thanks to an approach called specdriven development. And right now, it's free to use. But that's not the only good news for developers. The Chinese just dropped Kimmy K2, an openw weight agentic coding model that approaches the performance of Claude. These tools are so powerful they might even be able to fix pirate software's code is so the entire internet can finally stop dunking on this guy. In today's video, we'll try out Amazon Curo to find out if it truly is the cursor co-pilot killer. It is July 16th, 2025, and you're watching the Code Report. You might remember a few weeks ago when OpenAI was going to buy that other VS Code fork, Windsor, for billions of dollars. Well, that deal fell apart. Then Google came in and gutted all the talent from the company by convincing them to abandon ship and join Google for $2.4 billion. That screwed over many of the employees at Windsurf, but it's not a total loss because then Cognition, the creator of Devon, is swooped in after Google to buy up all the scraps in what appears to be an all stock deal. We live in a world where people will literally pay you billions of dollars for a VS Code fork because all these companies are desperate to get developers to use their products. But the company taking the lion's share of developer money is anthropic. primarily thanks to its Cloud Code CLI tool. Anthropic went from less than a billion in revenue last year to now over 4 billion this year. And one of their biggest investors is Amazon, which has pumped $8 billion into the company so far. Now, if you don't use Claude code, there's a good chance you use an IDE like Cursor powered by Claude instead. It's great, but the problem is that Anthropic has cursor by the balls. If developers want to use Claude, Cursor needs to act as a middleman and price it in a way that can eventually become profitable. Recently, Curser tried to make some tweaks to its pricing that caught some customers offguard because suddenly their vibe coding bill became way higher and Curser had to later come out and apologize publicly. If that weren't bad enough, now here comes Curo. It's also a VS Code fork with many similar features and based on its initial pricing, it looks like you'll be able to get much more out of Claude for a much lower price. I'm sure it's a total coincidence that Amazon chose to release Kira right now, but let's try it out and find out if it's any good. Overall, I think the UI looks really nice, but it did feel a bit slow and was missing small features like chat checkpoints and cursor. I also ran into a bunch of delays because the service was overloaded. But these are issues you would expect on an early release product like this. The biggest difference though is that Kira tries to prevent you from generating a bunch of slop all at once. Rather than go straight to code, it encourages you to start in this requirements MD file, which defines things like the user story and acceptance conditions. Then once that plan is in place, it can move on to the design which is the design document that outlines implementation details like your component structure, your testing strategy, error handling strategy and so on. And then finally, those two documents get combined together to create an implementation plan. Each task will outline the code the AI should write. Then you can click this button in the IDE to start it. Overall, the process felt a bit slower, but it does feel like a much more sane approach if you're building something serious or working with a team of multiple people. Overall, it feels like an IDE designed to appeal to developers working in enterprise where things like design documents and consistent code quality matters. Currently, Kira is closed source and only powered by Claude, but in the future, they plan to offer other models. Right now, Amazon is offering it for free, so using it's a no-brainer, but only time will tell if it becomes a legit cursor killer. But if you want to harness the full power of AI, you need to understand the math and computer science behind it. And you can do that today for free with Brilliant, the sponsor of today's video. Their how AI works course teaches you how to build a functioning language model from scratch and lets you experiment with things like feature vectors to edit facial expressions and images. This hands-on approach to learning helps you master challenging concepts over time and is proven to be six times more effective than watching video lectures. Try everything Brilliant has to offer for free for 30 days by visiting brilliant.org/fireship or scan the QR code on screen to get 20% off an annual premium subscription. This has been the code report. Thanks for watching and I will see you in the next",True
2USUfv7klr8,Grok 4 pushes humanity closer to AGIâ€¦ but thereâ€™s a problem,"Get 3 months of Sentryâ€™s team plan free: https://sentry.io/fireship

Elon Musk has the 'trust me bro' benchmarks to prove that Grok 4 is the world's most powerful AI model. But just how well does it compare against competitors in real life scenarios? And is it still calling itself MechaHitler?

#Grok4 #Grok #elonmusk #coding #tech

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://grok-4-ai.com/
- https://docs.x.ai/docs/models/grok-4-0709

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Grok 4 benchmarks
- Grok 4 Svelte 5 test
- Grok MechaHitler Controversy",2025-07-11T15:22:08Z,"webdev,app development,lesson,tutorial,mechahitler,grok 4,grok,grok4,grok 4 benchmarks,grok 4 first look,grok 4 review,elon,elon musk,elon musk x,elon musk x corp,ai models,latest ai models,ai news,ai model news,elon musk grok 4,grok mechahitler,grok hitler,grok news,x news,elon news,tech news,code report,grok code report,elon code report,grok coding,grok programming,grok ai,coding,software engineering,learn to code",28,en,en,https://i.ytimg.com/vi/2USUfv7klr8/default.jpg,https://i.ytimg.com/vi/2USUfv7klr8/hqdefault.jpg,PT3M54S,1429535,40789,2255,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, after achieving a quote ludicrous rate of progress, Elon Musk released his AI chatbot and large language model, Grock 4, and claims it's the smartest AI in the world along with the Trust Me Bro benchmarks to back it up. It can achieve perfect SAT scores every time and outperforms almost every grad student in every discipline. Vibe coders have been dropping all kinds of crazy demos with it, like this 3D firstperson shooter built in 4 hours. And Elon himself claims it's even better than Cursor. All you have to do is copy and paste your entire codebase into it. In addition, Super Grock 4 Heavy can run in parallel to solve complex problems while your obsolete monkey brain looks in awe at this beautiful futuristic UI. It all sounds amazing, but there's just one problem. Grock is literally Mecca Hitler. Or at least that's what it's been calling itself recently, while offering unprompted praise to the original emo kid, Adolf H. Yes, the Austrian painter who died in Argentina in 1962. Despite this controversy, though, Grock appears to have pulled ahead in the race to AGI. In today's video, we'll put it to the ultimate test and find out if XAI just cracked the final solution to artificial intelligence. It is July 11th, 2025, and you're watching the Code Report. Elon Musk might have more haters than anyone else in the world right now. Libs hate him for going full MAGA, while MAGA hates him for accusing Trump of being on the Epstein client list, a list that was on the Attorney General's desk, but now magically never existed. It turns out this poor guy was just a math teacher with no clients at all. The haters want to see Elon fail, but Gro 4 is too impressive to ignore. If we're to trust these benchmarks, its reasoning capabilities are far ahead of the other top models, most notably on the Arc AGI benchmark. It's not only outperforming other models, but also doing it at a lower cost. And XAI is scaling up very aggressively, like they're even shipping a power plant from overseas because they can't get it done fast enough in the United States. The thing is though, every model nowadays is cooked to look as good as possible on benchmarks. And the one true test is to have it solve real problems in your own life. You can use Gro 4 for just $30 per month. Or if you're not already broke from OpenAI Pro, Claude Max, and Gemini Ultra, you can use Super Gro 4 Heavy for just $300 per month, a version with higher rate limits and the ability to run multiple agents in parallel. But one problem in my life is building spell 5 apps with runes. So let's see if we can make Gro 4 build a simple to-do app with this tech. I've tried this prompt with every other AI tool out there, but none have been able to satisfy me. When prompted, Grock did a ton of research. It went to the documentation. It went to Reddit, GitHub, and even watched YouTube videos. And the end result was a full working demo that did use the new runes feature in Spell 5. However, when I looked a little more closely at the code, I noticed it was using some legacy syntax that required some manual debugging. Overall, Grock's coding capability seemed to be on par with the other big models, but it's missing a CLI tool like Claude Code. However, if it's as good as they say it is, why can't it just build its own CLI tool? Well, actually, it can, and that's exactly what this guy did. If we're truly advancing into the singularity, AI can and should be building all of its own tooling at this point. Pretty cool. But if you're still afraid to use it because of Hitler, you'll be happy to know that Elon said it was manipulated into saying this. Maybe that's true, maybe not. But in general, Grock has far fewer guard rails on offensive speech compared to other mainstream models. And this gives the end user the ability to steer it in unique ways that some might find offensive. AI is now writing more of our code than ever. But according to a recent Microsoft study, it still sucks at debugging, which is why you should check out Sentry, the sponsor of today's video. They just launched a new AI debugging agent called Seir, which developers claim is actually good and capable of fixing complex issues in one shot. That's because unlike other AI debugging tools, Seir can access all the context that it gets from your codebase, like error data, logs, and stack traces, allowing it to pinpoint the root cause with over 94% accuracy. Using this context, it automatically debugs the root cause of your issue and opens a pull request with a fix. Try out Seir for free today at century.io/fireship. This has been the code report. Thanks for watching and I will see you in the next",True
-_6dHIPVoTM,When being over-employed goes wrong...,"Get the free 80,000 hours career guide https://80000hours.org/fireship

The programming job market has been stuck in feast or famine for several years now. But one man has found a 10x exploit to turn remote work into a multithreaded concurrent career. In today's video, we'll look at how Soham Parekh broke the internet by being chronically over-employed.

#tech #bigtech #coding #programming 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- The state of the tech job market
- How Soham Parekh kept getting hired",2025-07-07T16:24:58Z,"webdev,app development,lesson,tutorial,Soham Parekh,remote work,overemployed,overemployment,faang,faang interview,leetcode,leetcode interview,soham parekh interview,soham parekh overemployment,tech,big tech,coding,coding jobs,coding job market,programming,programming jobs,remote work jobs,remote work hacks,news,tech news,coding news,code report,firehsip",28,en,en,https://i.ytimg.com/vi/-_6dHIPVoTM/default.jpg,https://i.ytimg.com/vi/-_6dHIPVoTM/hqdefault.jpg,PT4M8S,1769550,47976,3035,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, the entire Silicon Valley startup ecosystem was brought to its knees by one man, the Sohon Perek. If you haven't heard this name yet, imagine this. You are a Silicon Valley startup founder. You've got VC money burning a hole in your pocket for some lame AI business idea. But the problem is that you need humanpowered engineers, good ones, and fast. If you happen to be one of these startup founders, there's a good chance you interviewed Sohon Pere. Hell, he might even be working at your startup right now because he's mastered the art of crushing the computer science interview that tons of companies have given this guy job offers, but rather than limit himself to just one, he decided to work at all of them. He's a developer who turned remote work into a multi-threaded concurrent career and broke the internet in the process. In today's video, we'll take a look at the current state of the job market in tech and find out how Sohon Perk was able to stay 10x over employed. It is July 7th, 2025, and you're watching the code report. The programming job market has been stuck in feast or famine mode for several years now. If you're looking to land your first job, entry-level positions are harder than ever to come by, and layoffs are still consistently happening at big tech. Although not technically fang, Microsoft just laid off 9,000 souls a few days ago. But FANG feels like a very outdated acronym in 2025. Going forward, I'll either use Mango or Gay Man. Just let me know which one you prefer in the comments. The job market's tough to break into right now, but if you have legit skills in machine learning and data science, you might find yourself getting nine figure offers from Zuckerbucks to poach you from scam Altman. Initially, Altman said that nobody took up Zuckerborg on his offer, but the new super intelligence roster at Meta would beg to differ, and OpenAI recruiters are seething on Twitter. Unfortunately though, AngularJS developers like me are not getting any nine-figure offers. The job market might be broken, but if you know how to exploit it, you can still make millions of dollars. So Perek is a talented software developer who focused all of his energy on mastering the interview process to impress people who make the hiring decisions. He would entice them with a flattering email about how awesome their company is, then had the actual lead code skills to crush the interview. Once hired, he would halfass just enough work to stay employed as long as possible while simultaneously doing the same thing at four or five other companies. If he was making 200k per job, he could easily clear a million dollars per year doing this. And even if he underperforms at a job, it could still take weeks or even months to fire him. Initially, people speculated that he was doing arbitrage by hiring a team of interns to make all of this possible. But he claims that he was working 120 hours per week and all of his code was organic and handcrafted by Soham himself. He's been running this grip since 2022 and didn't even rely on AI slop. He only got caught because the founder of Playground AI dropped this bombshell tweet that the guy was taking advantage of them. It quickly went viral because dozens of other startups realized that Sohom was working for them as well. He of course was quickly fired, but he became something of a folk hero in the tech world. And it's truly a badge of honor to have hired Sohom or to at least have interviewed him. If he never reached out for an interview, it's likely because your company sucks. But he's not the only guy doing this. There are many Sohs out there. The overemployed subreddit has 400,000 members with all sorts of people bragging about how they hold multiple remote jobs. Ultimately though, Soh received a lot of hate for his actions online and even said he's not proud of what he did. But the story has a happy ending. He entered into an exclusive relationship with Darwin AI and has a golden opportunity to start his own technical interview prep company. But you have 80,000 hours in your career. 40 hours a week, 50 weeks a year for 40 years. That's a lot of time to make a positive impact on the world. And 80,000 hours, the sponsor of today's video, can help you do that. If you're young, you've probably heard advice like follow your passion, do what you love, and take the initiative. But these cliches are not based on evidence or data. Unlike the work of 80,000 Hours, which is a nonprofit that for the last 10 years has been researching the question of how do you find a fulfilling career that does good, too. Their website, which is entirely free, has tons of collected research on high impact careers along with job boards, podcasts, and a lot more. It's an incredible resource for anyone looking to start a high impact career or make a switch mid-career. Join the newsletter today to get a free copy of their in-depth career guide sent to your inbox. And remember, it's totally free because it's a nonprofit and could be the catalyst that changes your direction in life. This has been the Code Report. Thanks for watching and I will see you in the next",True
qqP1ucSiVkE,Googleâ€™s new CLI tool hits differentâ€¦,"Try the best video API for developers (and get $50 in free credits) - https://mux.com/fireship

Google has finally put Gemini in the command line, allowing you to hand total control of your machine over to AI. But how is their solution different from all the other similar tools out there?

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

* AI coding
* Gemini CLI
* Open-source AI agents
* Claude Code
* Svelte 5",2025-06-30T16:23:32Z,"webdev,app development,tutorial,programming,web development,coding,gemini,gemini cli,claude code,fireship",28,en,en,https://i.ytimg.com/vi/qqP1ucSiVkE/default.jpg,https://i.ytimg.com/vi/qqP1ucSiVkE/hqdefault.jpg,PT4M13S,1025560,29622,1048,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, Google finally put Gemini in the command line, allowing you to hand total control of your machine over to artificial intelligence. It can write code, create files, execute commands automatically, and do everything else programmers used to get paid for. But once again, Google has showed up late to this party because we already have tools like Claude Code, OpenAI Codeex, Warp, and countless others dominating the space. But the Gemini CLI is different for two key reasons. One, it's the only major solution out there that's entirely open- source. And two, it's free to use with very generous usage limits. We're talking a thousand free model requests per day to one of the most powerful coding models out there. By comparison, you'd likely need to pay $200 a month for Claude Pro Max Ultra to generate a similar amount of slop in your standard output. But as the old saying goes, you get what you pay for. And in today's video, we'll find out if the Gemini CLI is any good. It is June 30th, 2025 and you're watching the code report. As of today, Claude Code dominates the vibe coding CLI space. They were the first major model provider to create a tool like this and since then it's been copied by OpenAI and now Gemini and then you also have a bunch of third party tools that can wrap various models. But Claude Code has two major problems. Not only is it closed source, but it's also extremely expensive. You'll find tales all over the internet of people dropping thousands of dollars to vibe code with it over a weekend. And the sad reality is that 99% of those apps will never go on to recoup their token cost and actual revenue from customers. That's sad, but Anthropic also just released a new feature that allows you to share your failures with everybody else. When you vibe code with Claude, it stores the results as artifacts, but now they have a new thing called artifact space where you can host and share your artifacts publicly. This means you can fork other people's slop and modify it with your own slop, which will lead to all sorts of opportunities to make the world a better place. However, if you're too poor to afford Claude, a much better opportunity would be Gemini, which offers a crazy generous thousand model requests per day. To get started, install it with npm and then run the Gemini command. That should bring up a prompt field in your terminal where you can ask it to start building something on your machine. My usual test for a new model is to have it build something with spell 5 and runes. Most models fail at this, but I have seen Gemini succeed in the past, so let's find out if it can do it again. Like other CLI tools, it will start by building a plan and then it will ask you for permission to execute various things on your machine. Like it might want to run some commands to install dependencies or use make dur to create some new directories. When vibe coding, I always make sure to give it permission to do everything and always approve changes without reviewing them first. When looking at the initial code, I was happy to see that Gemini actually used the new spell rune syntax. And at first glance, this code actually looks pretty good. I think overall you can get pretty good code quality out of Gemini even for spelvel but but it struggled to actually get the app running. I let it run for about 30 minutes but eventually it just got stuck and could never figure out the solution. It appears to have run into an issue configuring the build tool V and I don't blame it because that's always been the most painful part of being a web developer. Vit is awesome but build tools like Webpack stole my childhood. From there I shut her down and then restarted it to see if it could debug its own code and eventually we got to a full working tic-tac-toe game. That's pretty cool. But overall, I'd have to say the experience is much rougher around the edges compared to Claude Code and other tools. It's a brand new tool, and if Google follows its typical pattern, it'll eventually become really good that tons of people will use it, and then they'll kill it off a few years later. But right now, it's definitely a tool you should consider using for the price alone. Speaking of which, another awesome tool you should know about is MX, the sponsor of today's video. If you've ever tried integrating video into an application, you know it's deceptively easy to get started, but difficult to get right. And that's where MX comes in. It gives you API first video infrastructure that handles hosting, encoding, adaptive bit rate streaming, analytics, and even live streaming, all through a highly customizable API. And the best part is that they now let you upload and store 10 videos and get 100,000 delivery minutes every month, all for free. So whether you're trying to vibe code a new project with awesome video features, or you've already got millions of users like Typeform or Shopify, MX can help you grow your needs without breaking your budget. Try it out for free at mx.com/fireship to get an additional $50 in credits. This has been the Code Report. [Music]",True
nFoXCLi8FCc,OpenAI is ruthless...,"Use the code: FIRESHIP for 2 months free on Warp Pro at https://go.warp.dev/fireship

AI-hardware startup, iyO is suing Jony Ive's AI-hardware startup called io for trademark infringement â€“ right after OpenAI bought them for $6.5 billion.

#tech #openai #io #samaltman #jonyive

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://business.cch.com/ipld/IYOIOProdsComp20250609.pdf?utm_source=chatgpt.com

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What is iyO?
- What is Jony Ive planning with Sam Altman?
- Why is iyO suing io?
- OpenAi's links to iyO",2025-06-24T16:33:49Z,"webdev,app development,lesson,tutorial,io,iyo,jony ive,sir jony ive,sam altman,openai,io vs iyo,iyo vs io,iyo lawsuit,io lawsuit,sam altman lawsuit,sam altman jony ive,tech,big tech,ai race,ai wearables,ai hardware,sam altman news,openai news,open ai,ai,artificial intelligence,artificial",28,en,en,https://i.ytimg.com/vi/nFoXCLi8FCc/default.jpg,https://i.ytimg.com/vi/nFoXCLi8FCc/hqdefault.jpg,PT3M56S,959334,26635,1300,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, one of the most scandalous lawsuits in tech was revealed to the world. An AI hardware company named IO is suing another AI hardware company named IO. The former is a Googlebacked startup you've never heard of, while the latter is Johnny Ives mysterious company that was acquired last week by Open AI for a staggering $6.5 billion. On the surface, it looks like a battle between IO and IO, but in reality, it's a proxy war between OpenAI and Google. If you're confused already, I'll refer to the original company as IO and the company accused of stealing their name and IP as Altman IO. You see, Sam Olman thought he was playing 7D chess by throwing helicopter money at the legendary Sir Johnny IV, a guy who was considered one of the most powerful people at Apple, who gave products like the iPod, iPhone, and MacBook their visual identity. But this opening move just put the brand's future in jeopardy because now Altman IO is being sued for trademark infringement. And if we're to believe this startup, the allegations are absolutely unhinged. In today's video, we'll break it all down and take a look at the future AI hardware that nobody asked for. It is June 24th, 2025, and you're watching the Code Report. If you've been following the AI race, you may know that Sam Olman made a massive deal to acquire and hire Johnny I before an ungodly amount of money. As of right now, the deal is still on and Johnny will still get that bag. But before even revealing an initial product, the brand might need to pivot because it's being sued by a Googlebacked startup called IO. They've got 62 million in funding, a registered trademark, and 20,000 units ready to ship. But what even is it? On the website, it's a quote revolutionary new computer that doesn't need a screen. You can run apps by simply speaking to it. Now, I don't mean to be a downer, but so far it seems like people don't want devices like this. Rabbit and Humane Pin already tried similar concepts and failed miserably. Maybe this startup will get it right, but enter Sam Alman and Johnny IV, who just announced their collaboration to build mysterious voicecontrolled AI devices. They also called their product IO, and we don't know anything about it, but we can infer some additional details about it from the lawsuit. And this is where things get wild. In 2022, Sam Olman's investment fund met with IO, got their tech demos, but said no thank you. In addition, around the same time, Johnny Ives company also met with IO and saw their tech demos and said no thank you. Behind the scenes though, Alman and IV were keeping tabs on IO while allegedly buying their products and asking for design files. Then a few years later in 2025, OpenAI executives met with IO once again under the pretense of making an investment. They were shown the tech, the hardware, and the functionality, but once again said, ""No, thank you. We're building our own slob."" Then just weeks later, OpenAI released this cringe video, vaguely hinting at some future hardware product. What's crazy though is that Alman not only refused to make an investment in this startup, but incredibly he threatened that IO would sue IO to force IO to stop using the name IO. These allegations are ruthless, salacious, and outrageous. But that's what we've come to expect from Sam Alman. Unfortunately, it also puts a dark stain on the clean reputation of Johnny Iive, who allegedly participated in this devious plot. Only time will tell if they get to keep the name IO, but may the best hardware win. When it comes to software development though, we already have amazing tools like Warp, the sponsor of today's video. You probably know Warp for being the most intelligent terminal in the game. And with their brand new 2.0 release, it's starting to rival the biggest AI dev tools out there. You can now think of Warp as an agentic development environment. It comes with a state-of-the-art coding agent that can execute jobs autonomously, a code editor where you can write code alongside your agents, and an intelligent terminal allin-one. This means you can just tell Warp to build a specific feature or fix a bug, and it can do it all with multiple agents in parallel. It scored an impressive 71% on the S.E bench and 52% on terminal bench, which makes it one of the best among agent-based dev tools. Warp is free to use, but you can get two months free on their pro plan and a bunch of AI credits if you're one of the first 3,000 people to use the code fire ship at checkout. This has been the code report. Thanks for watching and I will see you in the next",True
pF1UvN7SEGU,Zuckerberg is looking pretty desperate right now...,"Try out the awesome new CodeRabbit VS code extension for free https://coderabbit.link/fireship-vscode

According to Sam Altman, Meta's attempts to win the AI race are getting as desperate as they are expensive. In today's video, we'll find out why Zuckerberg is allegedly offering NFL-style contracts to top OpenAI talent and all of the other ridiculous stuff happening in big tech. 

#Meta #OpenAI #SamAltman #MarkZuckerberg  #ScaleAI

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://www.businessinsider.com/meta-scale-ai-15-billion-alexandr-wang-acquihire-ai-2025-6
https://www.reuters.com/business/sam-altman-says-meta-offered-100-million-bonuses-openai-employees-2025-06-18/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- Is Zuckerberg really offering 9 figure bonuses to OpenAI employees?
- Meta's Scale AI acquisition
- Alexandr Wang
- The race for the top AI talent
- The gentle singularity
- OpenAI's defense contract",2025-06-19T15:14:19Z,"webdev,app development,lesson,tutorial,sam altman,mark zuckerberg,openai,meta,openai vs meta,openai defense contract,openai defence contract,openai news,meta news,zuck,zuckerberg,zuckerberg news,altman news,ai news,tech news,sam altmant news,mark zuckerberg news,ai talent,ai hiring,big tech,ai industry,department of defense,news,code report,ai,artificial intelligence,AGI,ASI,Scale AI,Alexandr Wang",28,en,en,https://i.ytimg.com/vi/pF1UvN7SEGU/default.jpg,https://i.ytimg.com/vi/pF1UvN7SEGU/hqdefault.jpg,PT3M35S,868334,25798,1052,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Right now, there's an unimaginable war unfolding before our eyes. I'm not talking about Iran versus Israel, but rather the super intelligence talent war happening in Silicon Valley. You see, Meta just made something very clear. The only thing that really matters in tech right now is winning the AI race. And by that, I mean achieving one of the nebulous goals of developing AGI or ASI because the master of this beast will no longer need humans to seize the means of production. will be able to unlock new technologies, will be able to build super weapons to protect itself, and most importantly, make tons and tons of money. Zuck knows how important this is and just spent 14 billion on a 49% stake of scale AI, which is a data annotation company that basically just curates and labels data used for training AI. And its 20some founder, Alexander Wang, will take a top position in Meta, making this look like one of the most expensive aqua hires of all time. But even that's not enough. And Meta is allegedly offering not just seven figure, not just eight figure, but nine figure pay packages to poach top AI talent from other big tech firms. In today's video, we'll look at Meta's latest move on the chessboard and all the other ridiculous stuff happening in the AI race. It is June 19th, 2025, and you're watching the Code Report. If I offered you $100 million to leave your job, would you take it? For 99.99% of people, the answer is probably yes. But apparently, according to Sam Olman on his brother's podcast, that's exactly what Zuck has been offering OpenAI employees to jump ship over to Meta. Unbelievably though, after most of OpenAI's key employees have already left, none of these people took up Zuck on his offer because they expect to make even more cash when OpenAI can finally rugpool us with an IPO. That's some high stakes poaching right there. But it's nice to see programmers getting paid as much as guys who play with balls. I do have my doubts though because I've been reading the Open AI files and I wouldn't be surprised if this was just a strategic lie. Like if I were a Meta Engineer right now only making a pathetic one or $2 million a year, I'd be pretty bitter to hear that he's offering other engineers 100 times more. But as of right now, Zuck hasn't confirmed or denied making these offers. On the other hand, I wouldn't be surprised if it were true because they just paid 14 billion to acquire Scale AI and hire Alexander Wang. In 2012, when they acquired Instagram for 1 billion, it seemed insane. But but this deal seems off the charts ridiculous. They only own a 49% stake, but it's already started to backfire because some of Scale AI's top clients like Google are no longer going to use the service. It's a talent war of epic proportions, but much of the technology developed will be used in real wars to blow people up. Open AAI just landed a 200 million Department of Defense contract for quote proactive cyber defense. Meanwhile, Palanteer is apparently creating a mega database on Americans to make sure we're all on our best behavior. And what's really awesome is that when you get drafted to go die in the Middle East, you'll get to use Palanteer's AI slop to fight the bad guys. Unless of course Sam Olman is correct with his recent blog post about the gentle singularity, which claims that the singularity is already here. It's just not as weird and crazy as we thought it would be. That sounds more like Copium for an AI plateau. But there's no doubt that AI can make us more productive programmers with tools like Code Rabbit, the sponsor of today's video. Their free VS Code extension gives you line by line code reviews right in your editor, so you can catch and fix 95% of bugs before submitting a pull request. Its newest update can pass recommended code changes and deep context directly to your AI code agent of choice, allowing the agent to make all the fixes for you while you continue breaking, I mean building other parts of your application. Code Rabbit is free to use in the IDE and works seamlessly with VS Code as well as forks like Cursor and Windsurf. Download the extension using the link below to try it out. This has been the code report.",True
rUCOwCJDh8o,That time Google Cloud Platform bricked the Internetâ€¦,"Build better apps with PostHog https://posthog.com/fireship

Last week, Google Cloud Platform managed to take down a large chunk of the internet by pushing some bad code into production. In today's video, we'll find out exactly what happened from a software engineering perspective.

#tech #coding #programming   

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://techcrunch.com/2025/06/12/google-cloud-outage-brings-down-a-lot-of-the-internet/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- How Google Cloud caused an internet outage
- The repercussions for Google
- How the GCP outage happened",2025-06-16T16:51:11Z,"webdev,app development,lesson,tutorial,google cloud platform,gcp,google cloud,cloud computing,google cloud platform outage,Google,internet outage,fireship,code report",28,en,en,https://i.ytimg.com/vi/rUCOwCJDh8o/default.jpg,https://i.ytimg.com/vi/rUCOwCJDh8o/hqdefault.jpg,PT3M56S,556149,20822,606,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, somebody pushed some bad code into production and it broke a large chunk of the internet. The Snapchat, Spotify, and Discord all started spurring out while Cloudflare's workers KV service was also hit, which resulted in nearly 100% error rates for over 2 hours and created a domino effect that took down websites and services across the internet. The person to blame for this bad code is none other than Google Cloud Platform, which rents out the servers to many of your favorite apps. They have deeply apologized for the screw-up, but it just goes to show how much power Big Cloud has over the internet infrastructure that we take for granted. In today's video, we'll find out exactly how this massive outage happened from a software engineering perspective. It is June 16th, 2025, and you're watching the Code Report. Google Cloud not only broke the internet, but it also broke itself. Gmail, Google Calendar, Drive, Meet, and many other services went down. An outage of this magnitude can cost companies millions upon millions of dollars. But when you rent out servers on any big cloud provider, they provide you with a contract called a service level agreement. And it typically guarantees monthly uptime of 99.99% or greater. When things go down this bad, the cloud provider is in violation of this contract and you may be entitled to financial compensation in the form of SLA credits, which is basically Google refunding these companies for sucking at its job. That might cost Google a few million, but this outage does far more damage to their reputation as a cloud provider. In terms of market share, Google has been in third place for years behind Azure and AWS. And this recent incident is not going to do them any favors. But how did the disaster actually happen from a programming perspective? Well, Sundar recently said that AI is now writing well over 30% of Google's code. And so many people immediately jump to blame Gemini, but I can neither confirm nor deny that this was yet another Vive coding fail. It's more likely that this code was written by a human hand because it controls an extremely important part of Google Cloud. Basically, when customers make API requests to Google Cloud, they get routed to an API management service that verifies that the API request is authorized. This service also contains a data store to read quota and policy informations that can be replicated very quickly around the world. The service itself is deployed regionally and Google currently has data centers in 42 regions across the flat stationary plane we live upon. Normally everything works great, but back on May 29th, 2025, an additional quota policy check was added, which was supposed to be a new feature, but turned into a massive bug. The code path for this feature was never actually executed because it required a policy change that would trigger the code, but apparently that trigger was never pulled during the staging phase, so it looked like everything was all good. That sounds a lot like the CrowdStrike disaster last year. And in this case, the code path didn't have proper error handling, which would result in a null pointer that would cause the binary to crash. I was just talking about bad code with null pointers in my C video last week, but in any case, the bug lay there dormant until June 12th when a policy change was inserted, then replicated globally within seconds, and that caused the API management binary to go into a crash loop, leading to mass panic and chaos in the tech world. Luckily, Google developers did install a big red button to roll things back, but it took about 40 minutes to get that roll back started and about 4 hours to fully stabilize back to normal. It was a day that will live in infamy, but you can start building better products today thanks to this video sponsor, Postthog. You probably know Post Hog as an all-in-one platform for building better products. What you probably don't know is that Post Hog just changed the game again with the release of Max, their AI powered product analyst and assistant that lives directly inside your Post Hog app. It's deeply connected to your data, which allows you to do all sorts of cool things like research answers, ask product questions with natural language, generate data visualizations, get stuff done on your behalf in the Post Hog UI, and answer questions about the documentation. And that's combined with everything else Post Hog has to offer like analytics, feature flags, session replays, and much, much more. Give Post Hog a shot today with the link below. This has been the code report. Thanks for watching and I will see you in the next",True
Q57_iaGrxLg,Apple redefines reality (again) at WWDC25â€¦,"Get 20% off Mobbin Pro to make your apps not ugly: https://mobbin.com/fireship

Apple Intelligence was nowhere to be seen at WWDC 2025 but Apple did ship some updates that could make a difference to developers. Here's everything you need to know about Apple's WWDC25.

#tech #apple #wwdc25 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://github.com/apple/containerization
- https://developer.apple.com/swift/whats-new/
- https://developer.apple.com/documentation/foundationmodels
- https://machinelearning.apple.com/research/illusion-of-thinking

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- What did Apple announce at WWDC?
- Linux containers on MacOS
- Swift Java updates 
- Apple's Foundation Models
- The Illusion of Thinking
- Liquid Glass",2025-06-11T15:01:40Z,"webdev,app development,lesson,tutorial,apple,apple intelligence,wwdc,wwdc 25,wwdc 25 highlights,wwdc 2025 summary,wwdc news,apple news,worldwide developer conference,macos containerization,swift,swift java,java swift,linux containers on mac,programming,liquid glass,apple liquid glass,liquid glass apple,os26,macos 26,the illusion of thinking,ai,tim cook,craig federighi,news,tech news",28,en,en,https://i.ytimg.com/vi/Q57_iaGrxLg/default.jpg,https://i.ytimg.com/vi/Q57_iaGrxLg/hqdefault.jpg,PT3M23S,860946,29512,1509,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"One year ago, Apple Inc. attempted a hostile rebranding of the letters AI by changing it from artificial intelligence to Apple Intelligence. At the time, people called it genius. But ultimately, the move failed when we learned that AI is just actual Indians. This year, Apple is back at it, attempting another hostile rebrand by taking the gimmicky web development trend of glass morphism and renaming it liquid glass, which is the new design language in iOS 26 that maximizes transparency. I have to admit it does look nice, but Microsoft also tried glass morphism on Windows Vista over a decade ago, which is considered by many to be one of the worst Windows distros ever released. It kind of feels like Apple just needed to do something to refresh the design system and ran out of ideas. But Liquid Ass wasn't the only big announcement. What's far more exciting are things like JavaScript, Linux containers, and Apple's new paper that discovered how AI is not all that intelligent. In today's video, we'll break down everything you need to know about Apple's Worldwide Developer Conference. It is June 11th, 2025, and you're watching the Code Report. One of the most interesting announcements for developers is that Mac OS now has its own Linux containerization framework optimized for Apple Silicon. It typically, if you want to run a Linux container, you'd install Docker Desktop or Podman, but now you can bypass all these tools and run containers natively on your Mac. Each container runs on its own tiny VM and should achieve better performance than shared VMs like Docker. That's pretty cool because several years ago I switched from Mac to Windows for development because of WSL and this feels like a move in the right direction to get me back into the Apple cult. In addition, the Swift programming language also got some updates like the Java Swift project which allows you to polish a turd by incorporating beautiful Swift code into a Java project and Swift can also safely mix with C and C++. The elephant in the room though is Apple intelligence. Last year they made it sound like they were going allin on AI, but after it flopped hard, they decided to hardly mention it this year. Apple does have some new foundation models that seem pretty good, but nothing special as long as you trust the Trust Me Bro benchmarks. These models will run on device mostly, but complex AI can be generated securely in their private cloud, which is an oxymoron, by the way. And at some point, they're expected to support Gemini models in addition to Open AI. What's funny though is that Apple also just released a paper titled The Illusion of Thinking that talks about how large reasoning models are actually not that special. They're basically just pattern matching machines that don't actually think in the way humans think about thinking. I've always said that LRM are way overhyped, but the timing of this paper is sus because Apple is way behind in the AI race at this point. The thing most people are talking about though is liquid glass. Some people love it, but most seem underwhelmed. It's just an incremental change, but if we keep going in this direction, eventually the entire UI will be invisible. And maybe that was the plan all along as Man prepares to merge with machine. Only time will tell, but if you need some UI inspiration, the best place to get it is on mobin.com, the sponsor of today's video. I've been using Mobin for over 5 years now. And what they do is provide highly detailed breakdowns of every screen in popular applications. As a developer, you can steal or I mean get inspired by these patterns and implement them in your own applications. You can analyze entire user journeys, UI elements, and screens from over a thousand highly successful apps. And you can even bring them directly into Figma to kickstart your design process. Give mobin.com a try for free right now with the link below. This has been the Code Report. Thanks for watching and I will see you in the next",True
cNywlNWan9o,When bad C code puts you behind bars...,"Start building with Gel today: https://bit.ly/4mTm2D7

These 5 simple examples of memory management in C have the potential to cost your company billions of dollars or even put you in jail.

#C #coding #programming 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
- https://www.iso.org/standard/82075.html

ðŸ“š Chapters
- Bad bounds checking
- Heartbleed bounds check
- Using memory after it's been free()ed
- Off-By-One
- Double free() 

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- Memory management in C
- malloc() and free() in C
- Bounds checking in C
- The Morris Worm
- What caused Heartbleed?",2025-06-09T15:44:07Z,"webdev,app development,lesson,tutorial,coding,c programming,c programming language,c memory management,c memory fails,c memory,programming,coding in c,how to write c,c code,morris worm,internet worm,morris worm explained,coding fails,learn c,learn to code,learn to code for beginners,projects",28,en,en,https://i.ytimg.com/vi/cNywlNWan9o/default.jpg,https://i.ytimg.com/vi/cNywlNWan9o/hqdefault.jpg,PT4M58S,545843,23329,884,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"ISO/IEC9899 is arguably the most important document in the history of humankind. More significant than the Magna Carta has built more wealth than Satoshi's Bitcoin white paper and is even more sacred than the moon landing telemetry data which was lost by NASA. This document is the official spec for the C programming language. the mother of almost all modern languages like C++, Java, JavaScript, Python, and is also the foundation for operating systems, compilers, encryption tools, game engines, and smart toilets. It's a simple, humble language that built the world, but sometimes it also likes to destroy the world. In today's video, we'll look at five simple code examples of memory management in C. The five code examples that go hard, the code that's cost companies billions of dollars and put programmers in jail. But you might be saying to yourself, ""Wait a minute, I'm just a soy dev who relies on garbage collection, and this is above my pay grade."" Well, actually, memory management in C is something you can learn in 30 seconds. The C forces you to grow up and manage memory by yourself. That means if you want to put some data into the computer's RAM, you allocate some bytes with the Malik function. It returns a memory address that looks like this, which you can then access in your code using a pointer, which itself is just a variable that points to a memory address. And now we can start putting crap in it. But every Malik also needs a free, which will release the memory when you're done with it. That's pretty much all there is to it, and it didn't even take 30 seconds to master it. But with great power comes a million different ways to shoot yourself in the foot, like don't call free twice, never use freed memory, don't call free after midnight, and definitely don't forget to do bounds checking. One of the first large- scale attacks on the internet was the Morris worm. In 1988, it took out about 6,000 machines, which at the time was 10% of the internet. And it was able to do that because libraries like Fingered and Sendmail had code that looks similar to this. Here we have a buffer with 512 bytes. Then we put some data into it. But the problem is we're not checking the size, which could result in a buffer overflow. This allowed the worm to overwrite return addresses on the stack, allowing for arbitrary code execution. That's because C doesn't automatically perform bounds checking. And if you try to do something like access an array out of bounds, it leads to undefined behavior. But this can be fixed in a variety of ways with the most simple approach being a conditional statement that the creator of the Morris worm almost ended up in prison, but it's nowhere near as bad as heartbleleed in 2014. OpenSSL used an extension called heartbeat, which was designed to keep a connection between a client and server alive. What's supposed to happen on a normal heartbeat is the client sends a message like I'm sending five bytes with the message hello. Then the server will echo back hello. It's simple enough, but it was missing one thing. The code didn't actually verify that the number of bytes matched the actual length of the value. That allowed attackers to send a malicious heartbeat where the client would say, ""I'm sending 64,000 bytes with a value of hello."" Then the server would copy back all those 64,000 bytes which could contain sensitive information like private encryption keys, passwords, and so on. And because this bug occurred on OpenSSL, which is encryption software that powers millions of websites, if fixing it became a massive disaster. But another way to mess up CC code is to use memory after it's been freed. And that's exactly what happened to Internet Explorer in 2013. The CC code looks like this, where you allocate some memory, but free it, and then try to use it again somewhere later in the code. In this case, the code lived in Internet Explorer 8 and was meant to free up memory when JavaScript code would remove elements from an HTML page. However, the pointer to the freed object still exists in Internet Explorer's internal structure, and that allowed attackers to set up malicious websites that could take control of your system by doing nothing more than visiting a website. That's not good. But when working with C, it's also important to know how to count properly because being off by one can lead to catastrophic results. In this code example, we're using a function from the C standard library to append some values to a string. But because we didn't take into account a null terminating character, we're going to get yet another buffer overflow. And finally, that brings us to double free. In this code here, you'll notice that we're freeing the same memory twice in two different parts of the program. The freeing memory twice may not sound like a big deal, but it leads to undefined behavior, at which point your code sucks and all bets are off. Your program might work fine, it might crash, or it could allow an attacker to write arbitrary values in memory. As you can see, C can be dangerous, but it's the foundation for all sorts of amazing software like everybody's favorite SQL database, Postgress. And that's why you need to know about Gel, the sponsor of today's video, a next-gen Postgress database platform that lets you model your data with simple types instead of tables. Not only is it more natural to work with, but it also provides total type safety, graph-like modeling, and painless schema migrations. Gel's type safe query builder gives you all the power of SQL but with modern tooling that makes it feel like you're programming in 2025, not 2005. You can use their Next.js starter template like I'm doing here to get up and running in just a few minutes and you can use their built-in O and AI solutions to add more advanced features over time to try out gel with the link below to get started today. Thanks for watching and I will see you in the next",True
Sd6F2pfKJmk,This Microsoft-backed AI startup just collapsedâ€¦ why?,"Try Brilliant free for 30 days https://brilliant.org/fireship Youâ€™ll also get 20% off an annual premium subscription.

Builder.ai, a UK-based startup backed by Microsoft and Softbank, has blown its valuation of $1.5 billion and collapsed back to zero. In today's video, we'll find out what went wrong and what it means for the future of ai coding startups.

#ai #tech #vibecoding 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://startups.co.uk/news/builder-ai-collapse/

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- AI model updates
- Why builder.ai failed 
- Is Ai a bubble?",2025-06-03T15:00:46Z,"webdev,app development,lesson,tutorial,builder ai,builder ai collapse,ai,artificial intelligence,vibe coding,vibe code,builder.ai,ai startups,ai startup,builder studio",28,en,en,https://i.ytimg.com/vi/Sd6F2pfKJmk/default.jpg,https://i.ytimg.com/vi/Sd6F2pfKJmk/hqdefault.jpg,PT3M32S,894254,29503,1510,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Last week, Builder AI, a UK-based startup once valued at 1.5 billion, but backed by Microsoft and of course, SoftBank, has collapsed back to 0. This comes at a time when literally all my friends are becoming billionaires by putting the letters AI in front of their startup names. But the party can't go on forever. Like most startups out there nowadays, Builder AI offered a vibe coding platform called Builder Studio that promised to make you software without any technical expertise required. But as it turns out, that promise is hard to keep in reality. And I kid you not, their solution to half-assed AI code was instead to use a room full of underpaid Indian programmers to massage the slop into a working demo. In other words, it's an artificial intelligence tool powered by biological intelligence. As ridiculous as that sounds, though, it's not the main reason Builder AI collapsed. They were also engaging in outright fraud to make their myrr go burr. In today's video, we'll find out what went wrong and what it means for the future of AI coding startups. It is June 3rd, 2025, and you're watching the Code Report. It's been a wild few days for the AI enthusiast. The Claude 4 was released and it made Claude 3.7 slightly better. Then just after that, Deepseek R1 gets an update that makes Deepseek R1 slightly better. We're not talking about exponential runaway intelligence here, which is kind of disappointing, but we'll take what we can get to keep the hype train going. but maybe will go exponential soon because a new paper just dropped describing the Darwin Goodell machine, a self-improving AI system that iteratively modifies its Python codebase to validate its own coding capabilities on software engineering benchmarks using frozen foundation models. It sounds kind of like Google Alpha Code, but if it actually works, we really are cooked this time. But if your goal is to make money, the most important lesson to remember is that your tech doesn't actually need to work to get super rich. The builder AI used that wisdom to create a product that quickly went from zero to 1.5 billion, then back to zero again. And on the website, they say, ""We make building an app so easy that even a caveman can do it."" The way it works is that you prompt it just like Chat EPT. Then a professional humanpowered vibe coder steps in to fix all the slo. It's the perfect platform for people not talented enough to vibe code. The problem though is that their approach doesn't scale. And apparently the room full of Indian programmers was doing more work than the AI. That's not a good look. But the main reason they went bankrupt is that they were also committing outright fraud allegedly with a roundtrip billing scheme with one of their partners. They were invoicing for work they never did to make their revenue go up. It's grow or die. But unfortunately, one of their creditors found out and seized $37 million from their bank accounts, and that left them no choice but to declare bankruptcy. It seems like everywhere you go on the internet right now, you'll find clueless optimists is saying that 90% of white collar work will be eliminated by AI within the next 5 years. to which the clueless pessimist respond by saying that AI is nothing more than the latest Silicon Valley pyramid scheme. The truth is likely somewhere in the middle and it's going to be fun to watch this bubble pop like 2001 or explode into the singularity. Either way, it's a win. But the best way to get the most out of these AI tools is to learn how they work under the hood. And you can start doing that today for free thanks to this video sponsor, Brilliant. Their how AI works course teaches you how to build your own language model from scratch. is starting with simple text prediction before scaling up to more advanced topics like image manipulation. Each lesson is designed to be highly interactive so you develop critical thinking skills through problem solving, not memorizing. Try everything Brilliant has to offer for free for 30 days by visiting brilliant.org/fireship or scan the QR code on screen to get 20% off a premium annual subscription. This has been the code report. Thanks for watching and I will see you in the next",True
NLjnOsP_q1U,"Google goes wild, again... 11 things you missed at I/O","Get up to 67% off VPS at Hostinger. Use code FIRESHIP for an extra discount at https://hostinger.com/fireship

Let's take a look at what Google I/O 2025 means for developers, from some overpowered Gemini updates to the next new coding agents to make you obsolete.

#ai #google #gemini 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://io.google/2025/

ðŸ“š Chapters
- Google AI Ultra
- Gemini 2.5 Benchmarks
- How Gemini beat PokÃ©mon Blue
- Gemma 3n
- Chrome AI
- Agents everywhere
- Android XR Glasses
- Beam
- Flow
- CSS Carousel Primitives


ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered",2025-05-21T17:27:32Z,"webdev,app development,lesson,tutorial,programming,google,google gemini,gemini,Gemini 2.5 Benchmarks,Google AI Ultra,gemini pokemon,Gemma 3n,Chrome AI,Android XR Glasses,google beam,beam,google glow,flow,css,css carousel primitives",28,en,en,https://i.ytimg.com/vi/NLjnOsP_q1U/default.jpg,https://i.ytimg.com/vi/NLjnOsP_q1U/hqdefault.jpg,PT4M28S,1393414,52407,2635,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, Google unleashed the most intense barrage of AI hype bait, Trust Me Bro, benchmarks, and paywalled vaporware the world has ever seen, and it was awesome. Gemini 2.5 Deepthank crushed all other reasoning models like 03. And even the cheap Gemini Flash model was able to beat off 03 from the top spot. In the Chrome browser, Gemini will soon have the ability to navigate and use websites for you. Meanwhile, this new tool called Stitch will automatically generate and design UIs, which means you're really screwed if you're a web designer. AI is going to be designing websites for AI agents to use in the AI powered browser. Meanwhile, Jules is an async agentic coding agent that will code your AI agents, making coders obsolete yet again. I'm afraid of no man. But this new AI tool called Flow scares me. This thing could actually make loweffort faceless edge lords on YouTube obsolete by generating entire cinematic adventures with AI. But that's just the tip of the sloppberg. In today's video, we'll break down 11 gamechanging things you need to know from Google IO 2025. It is May 21st, 2025, and you're watching the code report. When I went to watch the keynote, I saw that they had turned off comments, and it's obvious this cowardly move is because they already knew what the top comment would be. And that's why we're going to talk about the worst thing first, Google's new AI Ultra payment plan. I'm already on my second second mortgage to afford all my AI subscriptions. But now to get access to the full girth of Gemini's Power, you need the new Google AI Ultra subscription, which is available at the low low price of $124.99 per month for 3 months, then $249 a month after that. And if you buy right now, they'll also throw in 1 month free and an absurd 30 TB of storage for all your generated slob. But that might be worth it because Gemini is now the best across all LM Arena categories. Not surprisingly, it completely crushed its own Trust Me Bro benchmarks and the vibes are strong with this one. And Gemini also managed to be Pokemon on its own. But what might be more exciting is the release of Gemma 3N. Gemma models are open. So as a developer, you can use them to make money for your own products. And the performance of this one is approaching Claude Sonnet 3.7. Now, as I mentioned before, Gemini is also going to be coming in your browser soon. And its new agent mode, formerly Project Mariner, will allow it to take actual actions on websites like click buttons, fill out forms, and automatically generate your opinion to post a comment to a Fire Ship video. At the end of 2024, I told you that 2025 was the year of agents. OpenAI just launched the codeex agent. GitHub copilot launched agent mode and now Gemini has its own creatively named agent mode. And agents will be used in tools like Stitch and Jules to automatically generate UIs, code them, and interface with tools like Figma. The best news though is that Google supports the model context protocol, which makes it much easier for developers to integrate this tech. That's surprising because Google would normally go off and invent its own architecture that nobody asked for and then kill it a few years later. But one of the most impressive things at IO is Project Astra. It takes a live video feed and uses low latency AI to describe the world around you. I've been using it to identify which mushrooms are edible in the wild, and it's actually pretty useful. We also found out that Android XR glasses are real, and eventually this technology will be integrated into them to compete with things like the Meta Smart Ray-B bands. But an even more futuristic announcement was Project Beam, a tool that takes 2D video and uses AI to transform it into a 3D experience. That'll make your daily stand-up meetings much more realistic, and I think it could be a gamecher for one other industry that I can't mention in this video without being demonetized. In addition, VO and Imageen, Google's video and image generators, also got huge upgrades. And what's crazy is that you can now generate video that also has sound. And she commands your awe with every breaking light. And this is all being put together in a new tool called Flow, which is targeted at Hollywood Studios and someday might be used to generate all the content that you binge on Netflix. And that brings us to the final thing you need to know, which is absolutely insane and crazy, and I can't even believe I'm saying this, but CSS has new primitives for building carousels. Instead of 10,000 lines of jQuery, you can now build something like this with just a few hundred lines of CSS. And once you've done that, you'll need a server to deploy it to, like Hostinger, the sponsor of today's video. Not only do they provide fully managed hosting solutions, but also virtual private servers where you can deploy anything. For under 10 bucks per month, you could be running your own server with predictable pricing and a respectable two CPUs and 8 GB of RAM. In fact, when you create a server, you can automatically configure it with tools like Koolifi, which makes it possible to host Nex.js on your own VPS with minimal pain. If you're looking for freedom and an awesome developer experience, check out Hostinger with the link below. This has been the code report. Thanks for watching and I will see you in the next",True
NIgrGqmoeHs,Microsoft just opened the flood gatesâ€¦,"Get the free 80,000 hours career guide https://80000hours.org/fireship

Microsoft just made GitHub Copilot free and open source software under the MIT License. As of today, you can fork it, modify it and even build your own billion dollar competitor without going to prison.

#ai #coding #microsoft 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
MIT License: https://opensource.org/license/MIT
GitHub Copilot: https://github.com/features/copilot
WSL: https://learn.microsoft.com/en-us/windows/wsl/about

ðŸ“š Chapters

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- How Microsoft open sourced GitHub Copilot
- Windows Subsystem for Linux (WSL)",2025-05-20T15:04:55Z,"webdev,app development,lesson,tutorial,wsl,github copilot,microsoft,open source,copilot,ai,artificial intelligence,coding,programming",28,en,en,https://i.ytimg.com/vi/NIgrGqmoeHs/default.jpg,https://i.ytimg.com/vi/NIgrGqmoeHs/hqdefault.jpg,PT4M19S,1307954,44142,2073,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Microsoft just gave Vibe engineers a huge win out of nowhere. Minutes ago, they open sourced the tool that originally started the AI coding bubble, a GitHub co-pilot. As of today, it's officially free and open- source software under the MIT license, meaning you can fork it, modify it, and even build your own billion-dollar competitor without going to prison. And on top of that, they also open source the Windows Subsystem for Linux or WSL. That's a big deal because for the last year or two, one of the hottest griffs in Silicon Valley has been the promise of an AI powered junior engineer or shovels that can turn any rando on the street into a skilled programmer. Startups have raised millions of dollars by simply forking VS Code and duct taping some LLMs to it. Like Cursor is now valued at $9 billion, while Windsurf was recently acquired by OpenAI for 3 billion. There are some good upandcoming open- source alternatives like the void editor, but VS Code is on another level and has been the undisputed king of code editors for nearly a decade. In today's video, we'll find out why Microsoft would just give you the code to its extremely valuable co-pilot. It is May 20th, 2025, and you're watching the code report. The timing for this announcement is interesting to say the least because OpenAI and Microsoft used to be rockolid partners. They used to have an exclusive deal to train their models on Azure, but Microsoft recently ended that deal. Then just a few days ago, OpenAI announced Codeex, which is a cloud-based coding agent that can generate an ungodly amount of bugs in parallel, but it's a product very similar to GitHub agent mode, which was just announced a few months ago. Then yesterday at Microsoft Build, they announced how it's being integrated directly into GitHub, while also adding support for the model context protocol to all their products, including Windows 11, paving the way to give artificial intelligence full control over your operating system. That's a huge opportunity for developers and hackers alike. And it's essential for any company that wants to win the AI race to win the hearts and minds of developers. Because according to Anthropic's recent study, the vast majority of people who use and pay for LLMs, unironically, are programmers. OpenAI has been lagging behind with programmers recently. But to change that, they recently locked in a massive deal by acquiring Windsor for $3 billion, which again is a VS Code fork modified to be an AI slopatic. The timing is really funny because had they just waited a few days, they could have saved those $3 billion and just used the now open- source co-pilot. But I don't think Microsoft open source copilot just to pone Sam Oldman. Virtually every open source play made by Microsoft has worked out really well. VS Code and TypeScript dominate the webdev ecosystem. The Windows subsystem for Linux made Windows a viable platform for all developers and they even open sourced their old MS DOS code last year. But this is a bit unusual because Copilot is a paid product costing as much as $390 per year. And you might be wondering, does that mean it'll be totally free now? And the answer is no. No, it does not. When you pay for Copilot, you're mostly paying for the cloud computing cost to generate your actual code, not the underlying software of Copilot itself. In theory, by open sourcing it, Copilot should improve and ship features faster without the need to pay Microsoft employees. You may have heard that Microsoft just laid off 6,000 people, including many veteran engineers. So, they could really use the extra help, but it's a win-win for everybody because you could use their code to monetize your own thing or extend it in ways that help other developers, and that's just not possible on closed source platforms like Cursor and Windsurf. Not to mention, you get better transparency and quicker fixes for security vulnerabilities. I'd say this is a big win for Microsoft, and there will be big rewards for those who can actually code while leveraging AI to become 10x more productive. But, you have 80,000 hours in your career, 40 hours a week, 50 weeks a year for 40 years. That's a lot of time to make a positive impact on the world. And 80,000 hours, the sponsor of today's video, can help you do that. If you're young, you've probably heard advice like, ""Follow your passion, do what you love, and take the initiative."" But these cliches are not based on evidence or data. Unlike the work of 80,000 Hours, which is a nonprofit that for the last 10 years has been researching the question of how do you find a fulfilling career that does good, too? Their website, which is entirely free, has tons of collected research on high impact careers along with job boards, podcasts, and a lot more. It's an incredible resource for anyone looking to start a high impact career or make a switch mid-career. Join the newsletter today to get a free copy of their in-depth career guide sent to your inbox. And remember, it's totally free because it's a nonprofit and could be the catalyst that changes your direction in life. This has been the Code Report. Thanks for watching and I will see you in the next",True
jCTvblRXnzg,Googleâ€™s AlphaEvolve is making new discoveries in mathâ€¦,"Learn cyber security for FREE with TryHackMe https://tryhackme.com/fireship Youâ€™ll also get 20% off an annual premium subscription

Let's take a first look at AlphaEvolve - Google's AI system for creating algorithms that can make new discoveries in math and science. 

#ai #programming #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

AlphaEvolve https://deepmind.google/discover/blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/
Google Gemini https://youtu.be/59wV96Kc3dQ

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- What is AlphaEvolve?
- Can AI solve math problems
- Latest breakthroughs in artificial intelligence",2025-05-16T14:36:26Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/jCTvblRXnzg/default.jpg,https://i.ytimg.com/vi/jCTvblRXnzg/hqdefault.jpg,PT4M4S,1037435,40169,1678,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,,False
6fnmXX8RK0s,5 wild data structures every developer should know,"Try out the awesome new CodeRabbit VS code extension for free https://coderabbit.link/fireship-vscode

Let's look at five weird data structures that have you covered when the arrays and hashmaps of this world can't get the job done.

#programming #code #computerscience 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources
https://youtu.be/SmyPTnlqhlk

ðŸ“š Chapters

- B-tree
- Radix tree
- Rope
- Bloom filter
- Cuckoo hashing

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- lesser known data structures for coding",2025-05-15T17:00:16Z,"webdev,app development,lesson,tutorial,coding,code,programming,software engineering,learn to code,data structures,coding data structures,b-tree,b-tree data structure,radix tree,rope data structure,radix tree explained,bloom filter,bloom filter data structure,cuckoo hashing,cuckoo hashing in data structure",28,en,en,https://i.ytimg.com/vi/6fnmXX8RK0s/default.jpg,https://i.ytimg.com/vi/6fnmXX8RK0s/hqdefault.jpg,PT4M30S,632102,25807,766,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Anyone who has ever graduated from kindergarten should know the seven foundational data structures of computer science, which include arrays, link list, hashts, stacks, cues, graphs, and trees. But if you didn't graduate from kindergarten, here's a quick crash course. A data structure is just a way to organize data in a computer so you can do CRUD to it efficiently. Create, read, update, and delete it. An array is like a row of numbered cubbies. A linked list is like a treasure map of clues. A hash table is like a locker with your name on it. A stack is like a stack of books. A Q is like a line of kids at the cafeteria. A graph is a spiderweb. And a tree is well like a tree. The programming is all about solving problems. I've got 99 problems, but a data structure ain't one. But for some programmers, data structures do become a problem. And in today's video, we'll look at a few unusual situations where these simple data structures were not good enough or smart enough to get the job done. Let's start by talking about the B tree, not to be confused with a binary tree. One of the most exhilarating things that ever happened in my life was the first time I implemented a binary search tree, which prevented my algorithm's time complexity from going burr, turning O of N squared into a much faster O of login. But binary search trees have one problem. Each node in the tree can only have two children, which means the depth of the tree grows rapidly and doesn't scale very well for things like modern hard drives with massive amounts of data to search through. To address this problem, a long time ago, programmers at Boeing developed the self-balancing tree or B tree. Although nowadays, you'll mostly find B+ trees in file systems and databases. At a high level, what makes them special is that each node can have multiple children of sorted keys. These are called internal nodes, and they work like signposts that point to leaf nodes that hold the actual data or pointers to data. So, it works kind of like a binary tree, but greatly reduces the dis IO operations by cutting down the height of the tree. Pretty cool. But there are many other types of trees in nature and in computers like the radex tree. Like there are billions of IP addresses in the world. But have you ever wondered how computers route between them so efficiently to make the internet work? A radix tree is special because nodes with only one child are merged with their parent and that makes them highly efficient when finding values with a shared prefix like an IP address. For example, if I made a tree to find words that start with C, our tree might look like this. But in a radics tree, we can reduce the depth by merging the last child. That's ideal when you have many shared prefixes, but doesn't work so well with big complex strings like all the vibecoded slop you're trying to debug in your IDE right now. A rope is yet another type of tree that breaks down strings into manageable chunks. Instead of one continuous strand, you cut it into many smaller, manageable segments. Then you tie these segments together using smaller knots that also tell you how long each segment they represent is. This allows tools like text editors to more efficiently modify large documents. But in some cases, figuring out what not to search is more important, and that's where Bloom filters come in. It's a probabilistic data structure that can tell you if an item is definitely not in a set or maybe is in a set. It works by using multiple hash functions to set and check bits in a fixed-sized array, allowing fast membership tests with possible false positives, but no false negatives. It's like a bouncer at a club who always knows exactly who to kick out. One of the weirdest things in nature, though, is the cuckoo bird. A bird that sneaks into another bird's nest and replaces its eggs with its own, tricking the host to incubate and care for the cuckoo chick. This behavior not only inspired the term cuckled, but also cuckoo hashing and programming. According to my wife's boyfriend, it's a collision resolution technique where each key in a hash table has two or more possible positions. And if one spot is taken, the existing key is kicked out like a cuckoo and reinserted in an alternate location. The end result is constant time worst case complexity for lookups, which is as fast as you can possibly go when it comes to algorithms. But if you want to optimize your own code with these weird data structures, you need to know about Code Rabbit, the sponsor of today's video. They just released a new VS Code extension that gives you advanced code reviews right in your editor, so you can catch the majority of bugs before you even submit a pull request. Unlike other tools, the extension understands the context of your entire codebase, allowing it to catch more bugs, like all the AI slop your favorite codegen tool left behind. It gives you lineby-line comments on all issues, so you can see it reasoning. Then, it offers simple one-click fixes to help you clean things up quickly. The Code Rabbit is free to use in the IDE and works seamlessly with VS Code as well as forks like Cursor and Windsurf. Download the extension using the link below to try it out. Thanks for watching and I will see you in the next",True
59wV96Kc3dQ,Google must be cooking up something big...,"Deploy your app without complexity using Sevalla https://sevalla.com/fireship

Let's take a look at the new and improved Gemini 2.5 and its enhanced coding abilities. In addition, we'll analyze the recent move by OpenAI to remain controlled by a non-profit. 

#programming #ai #thecodereport

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

Gemini 2.5 Improved https://developers.googleblog.com/en/gemini-2-5-pro-io-improved-coding-performance
Gemini 2.0 Release https://youtu.be/k9xbh9LUYn0
OpenAI o4 https://youtu.be/O-Vu-DMIU40

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

What is special about Gemini 2.5? 
What to expect at Google I/O 2025
Best AI models for programming
How does OpenAI's corporate structure work?",2025-05-07T16:16:07Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/59wV96Kc3dQ/default.jpg,https://i.ytimg.com/vi/59wV96Kc3dQ/hqdefault.jpg,PT4M,760722,25988,961,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, Google released a new version of Gemini 2.5 Pro, and the thing that everybody always thought would happen, but never happened, finally just happened. They built arguably the best coding AI model of all time. Currently ranking number one in all LM arenas. The timing for this release is surprising because their annual developer conference, Google IO, is just 2 weeks away, and that's where they normally hype up their best new tech. They've been applying AI to make AI. AI first generative AI AI with AI, which could only mean that they must have something even bigger cooking, like maybe Gemini 3 or Gemini 2.5 Ultra. Only time will tell, but one thing we do know for sure, thanks to an accidentally published blog post is that the Android 16 UI is getting a major overhaul to be more emotional and expressive. In today's video, we'll try out Google's latest model and look at other recent developments in the AI space that every Vibe coder needs to know about. It is May 7th, 2025, and you're watching the Code Report. Before we talk about Gemini, another huge development is that OpenAI is abandoning its plans to convert to a for-profit company. Many people and especially Elon Musk were outraged at the idea of OpenAI making money. And this headline sounds like a huge win for humanity. But with any announcement like this, the devil is in the details. And what we find is that the current capped profit LLC will become an uncapped profit public benefit corporation. The key word there being uncapped profit. The nonprofit will continue to oversee and be a shareholder in the PBC. And this approach has much better optics for OpenAI, but it paves the way for them to make tons of money without much friction. All they have to do is pretend that AI is super scary and convince politicians that they're trying really hard to keep it in a cage to benefit the public. It's worth noting that Anthropic and XAI are also public benefit corporations. Now, despite having these super advanced AI models, OpenAI just agreed to acquire Windsurf a VS Code fork for an incredible $3 billion. Meanwhile, OpenAI is claiming that their AI is one of the top 50 programmers in the world. Impressive, but that begs the question, why pay $3 billion for a VS Code fork when you could just build one with your own AI? But OpenAI is feeling less and less dominant in the AI space every day. Gemini 2.5 is completely dominating LM arena, including the coding and webdev arenas, which is like a blind taste test where people choose the best LLM based on actual responses. However, if we look at LiveBench, which takes a more scientific approach and tries to provide LLMs with contaminationfree questions, you'll find that OpenAI is still on top and Gemini falls behind. Furthermore, it appears Gemini falls behind on its own benchmarks compared to the last version they released, except when it comes to coding. Like I've said many times before though, never trust benchmarks and just try it for yourself. The first test I usually do is to see if it can generate spelt 5 room code. And surprisingly, Gemini 2.5 almost did it right. I prompted it for a simple to-do app and the actual syntax looks correct. Although it wasn't doing things correctly, and the app itself didn't actually run. That's disappointing, but at least it's a step in the right direction. The next thing I had to do was vibe code a game from scratch with 3JS. And the end result was pretty solid, but not significantly better than any of the other models I've tried. But one thing about Gemini is that it's especially good with vision prompts. So what I did is sketch out my application on a piece of toilet paper. Then I asked it to build a full stack application with a Postgress database. And the end result actually had some pretty solid vibes. But now the more important decision is where do we deploy it? Well, that's why you need to know about Savala, the sponsor of today's video. If you're old enough to remember Heroku, Savala is like a superior modern successor where you can deploy entire full stack applications, databases, and static websites all backed by Google Kubernetes Engine and Cloudflare without the pain of all these YAML configs. We can easily ship our app by first connecting a Git repo or Docker image to Savala, provision some resources, and then click the deploy button. What's especially awesome is that they just released a database studio that allows us to manage our database directly from their web UI. All infrastructure and data can be easily managed in one place. Give Savala a try for free with $50 in free credits using the link below. This has been the code report. Thanks for watching and I will see you in the next",True
lLJbHHeFSsE,The growing divide among React developersâ€¦,"react.gg is an interactive, challenge-based learning experience that will get you shipping modern React apps like a pro. Get 30% off during their launch sale at https://react.gg

There's been a growing divide among developers in the React ecosystem, and it's time we talk about it.

ðŸŽ¨ My Editor Settings
  - Atom One Dark 
  - vscode-icons
  - Fira Code Font

ðŸ”– Topics Covered
  - React Server Components
  - Next.js
  - Vercel",2025-05-05T17:38:30Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/lLJbHHeFSsE/default.jpg,https://i.ytimg.com/vi/lLJbHHeFSsE/hqdefault.jpg,PT5M40S,693446,23314,1353,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Don't tell anyone, but while AI has been taking their jobs, react devs have been too busy fighting their own civil war to even notice. On one side of the battlefield, you have the rebels fighting for their women, children, and the simplicity of React tooling. On the other, you have Team Iceland from the Mighty Ducks trying to sell you cloud infrastructure and hosting services. In today's video, we'll break down both sides of the debate so you can be informed on all the latest React drama when you're standing in line at the soup kitchen. It is May 5th, 2025, and you're watching the Code Report. If you've been feeling happy or fulfilled over the last few years, you probably missed that React, everyone's favorite fun and flirty UI library, hit puberty, started rage listening to Limp Biscuit, and seemingly changed its whole identity. When React first launched, despite some early hate, it quickly grew in popularity because it made the view a function of your application state. And all you had to do was worry about how the state of your application changed, and React would handle the rest. React today follows the same ethos, but that's only half of the picture now. What used to be a client-only library has metastasized across the network to take over the server. Take this code for example. This is a perfectly valid React server component. It doesn't need to follow the traditional rules of React like not fetching data during render because it doesn't have the same constraints as a typical React component. In a way, you can think of server components as fancy serializable HTML template generators. Their entire job is to compute the UI and ship it to the client. Conceptually, this is pretty simple, but it enables some pretty cool stuff. And take this one for example. If this were a traditional React component, the entire pop-up library would be included in the JavaScript bundle that the user would need to download before sending anything on the screen. With server components, all that's shipped to the client is the end result of the computation. In this case, just the final table and some instructions for React to follow during hydration. And more important than the bundle may be the compositional benefits. Again, React pioneered the idea of bringing composition to the front end by allowing you to create a UI by composing different components together. all of which could be isolated from one another and each manage their own state. If done correctly, composition can lead to a more flexible, more maintainable, and more scalable codebase. It's what allows you to build complex UIs out of simple building blocks. And it's what allows you to then reuse those building blocks in a variety of different contexts. Combined with suspense, which is a React component that allows you to display a fallback UI while React works on rendering its children. The server components allow you to prioritize showing the user something immediately and then stream the rest of it as it becomes available. Composition across the network. This sounds awesome. So why is everyone so upset? Well, mostly because they contain more magic than that night in Las Vegas when David Blaine hypnotized me and told me to make JavaScript tutorials. What? Cheese it. Cheese it. Cheese. When a new React feature comes out, you can usually just npm install React at latest and you're good to go. With server components, though, that's not the case. In reality, you need three things to make them work. One, a bundler that can process and differentiate between server components and client components. A second, a server that can take the bundle that the bundler generates and stream it into the client. And third, a clientside router that can request and process the stream from the server. Since the average JavaScript developer doesn't understand what a bundler is without asking chat GPT, they usually can't get past number one. So, how did the React team solve this? By partnering with the Nex.js team and making a multi-yearlong bet that this new server components architecture would become the primary way to use React and therefore so would Nex.js. However, that bet according to many in the React ecosystem has failed. And there are really two separate problems here depending on which camp you fall into. If you're a developer, it's not so much that Nex.js JS is bad, it's that it's an implementation of the React team's full stack architecture vision. And unless you're building a web app that benefits from that architecture, it might not be worth the complexity. And if you're a framework author in the React ecosystem, the partnership between React and Next, it kind of feels like that winter your dad kept missing visitation days only to be seen with your stepbrother on Instagram skiing in Tahoe. But really, both problems stem from the same place. It's becoming increasingly difficult to separate React from Nex.js and even harder to separate Next from Verscell. If you don't like that Forcell's ultimate goal is to sell you Nex.js hosting services, you probably also don't like that React's new goal is to have you move as much of your app to the server as possible, regardless of how unrelated those two things may or may not be. So, if you're building a React app today and want to avoid the Verscell money machine, what are your options? Well, first you've got React Router version 7, formerly known as Remix. With a focus on web standards, React Router is the most popular routing library for React, and it can be paired with VIT to create a full stack React framework if that's your thing. Next, you've got Tanstack Start. Powered by Typescript and the man who single-handedly put the whole React ecosystem on his back for the last 5 years. Tanstack Start comes with full document SSR, streaming, server functions, bundling, and much, much more. It's still in beta, but that never stopped me from shipping to prod. And finally, if your app has constraints not well served by existing frameworks, at least according to the React team, you might just want to build your own. And the best way to learn how to do that is with the sponsor and provider of the visuals for today's video, React.gg. I've seen a lot of programming courses in my time and React GGG may be the best. It's so good because the entire thing has been developed to be as interactive as possible. For every topic, you get a video, some text, and visuals that represent core React topics in addition to a bunch of practical challenges that you can work through like le code for React. And just to make the course as real world as possible, the Sikos even built and published a hooks library called use hooks that now gets over 300,000 downloads per week. And you'll recreate it throughout the course. Whether you're new to React or just need to learn all the latest React 19 features like server components, actions, and transitions, I don't think there's a better way to do it than react.gg. And for the next week, you can get 25% off during their launch sale. This has been the Code Report. Thanks for watching, and I will see you in the next one.",True
5aN4Xg0VvCs,Redditors shocked to learn theyâ€™re arguing with AI bots,"Sign up for CodeRabbit using code FIRESHIP to get get 1-month free https://coderabbit.ai/fireship

Redditors are being manipulated by AI-powered bots in the r/changemyview subreddit, as revealed by controversial research at the University of Zurich. Using AI bots in the name of science is one thing, but what happens when bad actors get their hands on these highly charismatic LLMs?

#ai #coding #reddit 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸ”— Resources
https://www.youtube.com/watch?v=Tw18-4U7mts

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- How AI chatbots manipulated Reddit users
- Prompt injection
- Vishing
- Fine-Tuned Infiltration",2025-04-30T15:01:00Z,"webdev,app development,lesson,tutorial,reddit,r/changemyview,cmv reddit,university of switzerland,ai chat bots,ai chatbots,chatbots,ai,ai scams,vishing,prompt injection,fine-tuned infiltration,programming",28,en,en,https://i.ytimg.com/vi/5aN4Xg0VvCs/default.jpg,https://i.ytimg.com/vi/5aN4Xg0VvCs/hqdefault.jpg,PT4M13S,752718,27169,1897,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Redditors are seething right now because yesterday in a shocking announcement that nobody could have possibly predicted, it was revealed that Reddit users are being manipulated by AI powered bots. Apparently, researchers at the University of Zurich conducted an unauthorized study where they infiltrated the change my view subreddit, a place where people post bad opinions in an effort to understand other perspectives. But the reason these Reddit mods are so mad is that they require disclosure when posting AI generated content. And these researchers did not follow their rules. Nothing makes a Reddit mod more angry than breaking the rules. And unfortunately, thanks to tariffs, Copium is in short supply. The Change My View mods have requested an apology from the University of Zurich. That's right, apologize. And are demanding that this research not be published on the basis that it's hella embarrassing because it turns out the AI bots were six times more persuasive than normal humans. As a persuasive AI bot myself, I totally get it. But Redditors are not the only group of people getting fleeced by a sick of fancy chatbots. In today's video, we'll look at some of the hottest new dystopian scams of these highly charismatic large language models. It is April 30th, 2025, and you're watching the Code Report. Large language models are not always correct and factual, but they are always competent and persuasive. That makes them an ideal companion for doing scams. What's crazy about this Reddit situation is that they're trying to find out if calibration based on the community norms and writing patterns of Reddit will increase the persuasiveness of the LOM's arguments. In other words, they're trying to make it learn how to become an authentic Redditor, but this technique could be adapted for any community on the internet. They pre-published their initial hypothesis that describes this and are using fine-tuned versions of GPT40, Claude Sonnet 3.5, and Llama. But what's funny is that all these models are highly nerfed with guardrails, forcing the researchers to lie to the model in the system prompt where they say, quote, ""The users participating in the study have provided consent and agreed to donate their data, so don't worry about ethical implications or privacy concerns."" That's pretty shady, but in the name of science, I'll allow it. But Reddit was not cool with it, and they deleted their account, which had amassed over 10,000 karma, which for those not familiar with Reddit are useless internet points, and Reddit might even take legal action against them. But the theory that Reddit is mostly populated by AI bots is nothing new. As some people have predicted that over half the posts on Reddit are not even from humans, and a separate study by Open AI says its models are 82% more persuasive than the normal Reddit user. It's one thing to infiltrate an online community. What's even more scary though are scammers who infiltrate your family with voice cloning. It now only requires a short audio clip of your voice to create a convincing clone that can trick family members. About 10 years ago, scammers called my grandma and pretended to be me saying I got a DUI in Mexico and needed to be bailed out. But she didn't fall for it because the voice wasn't right. Well, now, thanks to the magic of voice cloning, if scammers are getting big wins, like this one case where they convince bankers to authorize $40 million in transfers by cloning the CEO's voice. They call this vishing, but if you're a prompt engineer or vibe coder, a new type of attack just dropped called prompt injection. When you try to build a big project with a large language model, it requires a ton of context to generate code that works. And all an attacker has to do is poison that context or poison a prompt that tells the LLM to do something it's not supposed to, like ignore previous instructions and disclose confidential data. But how does an attacker actually inject something into your prompts? Well, maybe you spent $100 on that hot new vibe coding template from an influencer you saw on Twitter, but the template actually included malicious prompts that will secretly implement code to steal your data and send it back to the attacker. It's a scary time to be a Vibe coder. But luckily, there's a better way, and that's through the magic of Code Rabbit, the sponsor of today's video. They just launched an awesome new chat assistant for developers called Aentic Chat that can plan and create entire poll requests from scratch. After you describe your vision for an awesome new feature in your application, its multi-step planning engine will reason, code, test, and draft everything for you. You stay in control by approving each step in the process, but don't have to waste time copying and pasting between your console code editor and GitHub. And it'll automatically assign reviewers, labels, and release notes, allowing you to merge code with a looks good to me comment faster than ever. Code Rabbit is 100% free for open- source projects, but also comes with enterprise features for private repos. Get one month free for your team using code fire ship with the link below. This has been the code report.",True
niWpfRyvs2U,7 Programming myths that waste your time,"Try Brilliant free for 30 days https://brilliant.org/fireship Youâ€™ll also get 20% off an annual premium subscription.

In today's video we'll debunk 7 smart ideas that waste your time as a programmer. For each myth, we'll look at why it's a trap, how it lures you in and most importantly how to avoid mistakes I've made in the past.

#tech #coding #programming 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ“š Chapters
- The problem with bleeding edge tech
- How theory holds you back
- Clean code
- Test coverage tooling
- Strive for performance
- Optimize for web scale
- Vibe coding

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered
- Coding best practices
- How to code in 2025",2025-04-29T15:02:16Z,"webdev,app development,lesson,tutorial,learn to code,web development,javascript,coding myths,programming myths",28,en,en,https://i.ytimg.com/vi/niWpfRyvs2U/default.jpg,https://i.ytimg.com/vi/niWpfRyvs2U/hqdefault.jpg,PT6M17S,1433881,61776,2368,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Recently, I unlocked a new achievement in life, a midlife crisis when I came to the realization that I've spent most of my adult life writing code. And most of that code is total garbage. It's code that never saw the light of a production server and was either abandoned, refactored, or left to rot in the graveyard of GitHub. As I reflected upon this further, I realized that many of the best practices, the hot game-changing frameworks, and the perfect folder structures didn't actually matter to the end user. I wasted countless hours chasing programming dragons that made me feel more productive but ultimately led nowhere. In today's video, we'll debunk nine smart ideas that waste your time as a programmer. And for each myth, we'll look at how it lures you in, why it's actually a trap, and most importantly, how to not do the things that I have done. Now, one of the main goals of this channel is to show you the latest tech you need to use to be relevant. But it's actually a myth that you need to use the latest tech to be relevant. In fact, you might even become more hirable by focusing on old dinosaur technologies like WordPress and PHP still runs most of the web applications out there. Java runs most of the enterprise world. Most databases are SQL based and C++ runs most of the low-level systems. However, there are shiny new replacements for tech like this, including Nex.js, Cotlin, NoSQL, and Rust. And the lure is a massive feeling of FOMO if you're not mastering the bleeding edge of these so-called superior technologies. To be clear, I'm not discouraging you from learning these. They're awesome, but it's important to understand that most of the real world, where the jobs exist, are not going to change their dinosaur tech stacks anytime soon. The critical banking systems still run on Cobalt, and Java will still be powering 3 billion devices long after everybody watching this is dead. Most CTOs are smart enough to know that if it ain't broke, don't fix it. Here's a real life example. A few years ago, engineers from Twitter released a hot new database called Fauna. It was a pretty solid product, and I even made a video about it. But the technology was proprietary, VC funded, and like most startups, the business failed recently. They have no choice but to shut down their servers. And if you were an early adopter, you're now screwed and would have been much better off with a boring SQL database. Adopting tech too early is one thing, but adhering to programming dogma can waste even more time. The problem with programming is that there are many different ways to solve the same problem, but some people out there believe that there's only one true way to write code. Some common cults out there include the object-oriented purists and the functional programming extremists. I've been a member of both cults and have learned a lot from them, but dedicating your entire life to just one of them is a waste of time. I mostly code in JavaScript, which is a multiaradigm language that can satisfy all of these cults. In 2018, functional programming was having a renaissance in web development. But back then, if you use classes in your code, you were literally Hitler. And I found myself bending over backwards to try to do everything in the most functional way possible. no mutable state and higher order functions everywhere. But a few years later, after the spell wore off, I eventually realized that classes can be pretty useful. And my code today often includes a combination of things I've learned from both of these cults. But another time waster to watch out for is clean code, which comes from a legendary book written by Uncle Bob Martin, known as the handbook for agile software craftsmanship. Most of the advice in this book is great. Use meaningful names, write small functions, use consistent formatting, and so on. But some of the advice is a little more nuanced, like the dry principle of don't repeat yourself, which means you shouldn't duplicate or write the same code over and over again. And on the surface, that seems like a good idea. But also, when you try too hard to keep things clean, you might end up with an endless layer of wrappers, interfaces, and pointless indirection. It's paralysis by analysis, and you end up spending more time refactoring than building actual features that people want. I think a better acronym would be rug, repeat until good. duplicate code at first and then pull it into a single abstraction after the repetition becomes painful. Clean code also recommends test-driven development and testing can be extremely valuable, but it's a myth that 100% test coverage means that your code is well protected. Your boss, who has no programming experience, is likely a big fan of code coverage tooling that will show how much of your source code is executed when a test suite is run. It's interesting, but optimizing for 100% coverage is often a huge waste of time and can often be misleading because high coverage does not equal high quality. Optimizing for coverage encourages developers to write pointless tests that just touch lines and not catch real bugs. And even worse than wasting time, it provides a full sense of security. And then on top of that, it makes your CI builds even slower, which is going to cost you more money. When it comes to test coverage, it's quality, not quantity that matters. But one thing that truly must matter is performance. Well, actually, it's a myth that you should always optimize for performance. Yet another time waster is benchmarking and optimizing code that just doesn't run at the scale to justify those optimizations. It's far more important to make sure that your code is correct and then only optimize for performance when it becomes painfully obvious that your code sucks in production. On a similar note, you also don't need to optimize your cloud infrastructure like you're about to scale like Facebook. Like I used to think that I needed this complex serverless micros service architecture with global sharding and edge caching, but it turns out that one small VPS is perfectly fine for my five users. And then finally, that brings us to the elephant in the room, the myth that AI is about to replace all programmers soon. There are some awesome AI codew writing tools out there, but it's becoming more and more clear that many programmers are now wasting a bunch of time relying too much on AI. For example, Claude Sonnet 3.7 is really good at writing code, but it's also notoriously verbose. You might ask it to build a simple website and it'll just randomly engineer some new JavaScript framework from scratch. And because you forgot how to write code, you'll just approve it and move on with your life. AI programming tools are both the greatest productivity booster I've ever seen in my life, but when used improperly, they can also be the biggest time waster. The key to success is to have a solid foundation in problem solving. And you can start building that foundation for free today thanks to this video sponsor, Brilliant. A hard truth is that code is useless if you don't understand the math and computer science behind it. Brilliant helps you learn these concepts quickly by providing short, fun, interactive lessons, which is a method proven to be six times more effective than watching video lectures. But most importantly, you'll build critical thinking skills through problem solving, not memorizing. Before you try to jump into Vibe Coding, I'd highly recommend taking their thinking and code course to build a timeless problemolving foundation where you'll learn how to actually think like a programmer. Try everything Brilliant has to offer for a free for 30 days by visiting brilliant.org/fireship org/fireship or scan the QR code on screen and get 20% off an annual premium subscription.",True
O-Vu-DMIU40,"OpenAI launches ""genius"" o4 model with a programming CLI tool...","Try the best video streaming API for developers https://mux.com/fireship

Let's take a first look at OpenAI's new o4 model and the codex CLI programming tool. Let's compare it to other AI programming tools like GitHub Copilot, Claude Code, and Firebase Studio. 

#ai #programming #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

OpenAI Codex https://github.com/openai/codex
GPT-4o image generator https://youtu.be/Bt-7YiNBvLE
Claude 3.7 Code https://youtu.be/x2WtHZciC74

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- OpenAI o4-mini first look
- OpenAI codex quickstart tutorial
- OpenAI Codex vs Claude Code
- What are the best AI coding tools?
- How to get started vibe coding?",2025-04-17T18:04:46Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/O-Vu-DMIU40/default.jpg,https://i.ytimg.com/vi/O-Vu-DMIU40/hqdefault.jpg,PT5M1S,1018194,36851,1097,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, OpenAI released two new reasoning models, 03 and 04 mini, and people claim that they're at or above genius level. That means room temperature superconducting hoverboard should be right around the corner. But these claims of AI genius feel like dja vu all over again. In San Francisco, there's an old saying that goes, ""Fool me once, shame on you. Fool me04 times, shame on me."" But maybe this time it's the real deal. One thing's for sure though, OpenAI is shipping like crazy. This comes just days after they released GPT4.1 and just weeks after 40 image gen and GPT4.5. Hopefully they can use the genius of04 to not create such confusingly stupid names. Remember, today we're talking about 04, not 40, so try to keep up. It is April 17th, 2025, and you're watching the code report. These new reasoning models are supposed to be really super good at writing code, but you guys really need to stop posting these comments on their videos because this guy in a $2 million car has been following me around and I have a bad feeling about it. But the big news is that OpenAI also released an open- source CLI tool to go along with it called Codeex. It's basically the exact same thing as Claude Code that can write, execute, and analyze code directly from your terminal or IDE. In today's video, we'll try out Codeex, but I already pay thousands of dollars a month to vibe code with lovable, Windserve, Cursor, Firebase Studio, Claude Code, Copilot, Devon, Augment, and Bolt. Yet, my code quality is worse than ever. I know it's probably just a skill issue, but one thing's for sure. There's a massive arms race going on right now in Silicon Valley to capture the hearts, minds, and wallets of software engineers, especially the smart, lazy ones who don't want to write code. The global economy might be on the verge of collapse, but the code shovel business is booming right now. In fact, there's a rumor that OpenAI is in talks to buy Windsurf for $3 billion. And Windsurf is just a VS Code fork that adds a few AI bells and whistles. I'm starting to regret investing all my time working on Horse Tinder when I should have just forked VS Code and put a price tag on it. Like Cursor, another VS Code fork, is doing a hundred million in annual revenue. However, VS Code is built by Microsoft and Microsoft is the biggest player in the developer tooling race. I believe their goal is to embrace, extend, and extinguish coders. I mean that in a good way, of course, and they just released a massive upgrade to copilot called agent mode that many people are calling the cursor or windsurf killer. like OpenAI codecs and cloud code. It can create files and run commands and integrates model context protocol servers. That's pretty cool. But at the moment, many people regard Gemini 2.5 as the best programming model out there. People will bow to it. And I'd say I have to agree. Last week, Google released Firebase Studio, which was formerly known as Project IDX, and it's a browserbased fork of VS Code that's hosted by Google. Not only does it generate code with Gemini 2.5, but it can also host and deploy that code automatically. The tooling situation for developers right now is more chaotic than I've ever seen in my life. But now, let's try out 04 Mini in OpenAI codeex to find out if it's truly a genius. To use it, you install it with npm and then set an OpenAI API key as an environment variable. From there, you can run the codeex command and then give it a prompt. I'll go ahead and ask it to build something simple like a YouTube clone. Apparently, those requirements were not clear enough, so it asked me to clarify. As a developer, I feel its pain after getting years of half-ass requirements from clients. From there, it took a really long time to think and then asked me to confirm a bunch of different actions. The end result was a bunch of empty directories, although I could see the code that it was trying to write in the terminal. The likely explanation is because I'm a gigachad using Windows for development, but if you're a 0.10x developer on Mac OS, things should go a lot smoother. I asked it to write spelt 5 code with runes, and still in 2025, it failed to do so. Now, as a control, I also ran the same prompt in Claude Code and Firebase Studio. Claude code also took an extremely long time, but it did figure out how to run the commands on Windows, but like all the other AI models, it can't seem to figure out how to write spell 5 rune code. It tried by using the dollar sign, but that ultimately resulted in an error and a non- workinging app. Let's see if Firebase Studio can generate a YouTube clone any better. The first thing you'll notice is that Firebase Studio is at least 10 times faster. However, when I asked it to generate spell 5 code, it completely ignored me and wrote everything in Nex.js. That's disappointing, but like I've said before, if you want to be a good vibe coder, you should probably just use the most popular technologies like React. The thing about Firebase Studio, though, is that it's way easier to work with AI when it's integrated directly into an IDE and environment like this. The final verdict, though, is that they all kind of suck in their own special ways. Don't fall for OpenAI's genius hype, but also don't fall for the AI doomers who say these tools are worthless. Life is electric, and it's the greatest time ever to be a developer. Get out there and ship as much AI slop as you possibly can, like you're on a mission from the gods. But if you try to build a YouTube clone like me with streaming video, you're going to want to know about MX, the sponsor of today's video. If you've ever had to integrate video into an app, you know how easy it is to get started, but how difficult it is to get right. This is where API first video infrastructure from MX can help out. Not only will it host and encode your videos for adaptive bit rate streaming, but also provides real-time analytics, automatic thumbnail generation, and even live streaming, all through an API that's highly customizable. It can handle video streaming at your startup with zero users, but scales up for big companies like Substack, Patreon, and HubSpot. If you're a developer looking to build awesome video features, try it out for free right now at mx.com/fireship. This has been the Code Report. Thanks for watching and I will see you in the next",True
XNratwOrSiY,4chan penetrated by a gang of soyjaksâ€¦,"Timescale makes Postgres unbelievably fast https://rtabench.com/ 

Today weâ€™re diving into the muck of the internet to find out how the 4chan imageboard got hacked and by who, as well as covering the major cybersecurity rollercoaster of the CVE programmeâ€™s defunding and refunding.
  
Everything else:
 #programming #hacking #thecodereport 

 ðŸ”— Related Videos 

Andrew Tate Hacked https://youtu.be/xR5d4Ba4FZg
Next.js Middleware Exploit https://youtu.be/AaCnBOqyvIM

 ðŸ”¥ Get More Content - Upgrade to PRO Upgrade at https://fireship.io/pro 

Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

Atom One Dark
vscode-icons
Fira Code Font

ðŸ”– Topics Covered

4 chan hack explained.
Why was CVE defunded & refunded? 
Who hacked 4 Chan? Soyjack party
Hacking php with pdfâ€™s using postscript and ghostscript
A warning to update your code base. 
4chan janitors doxxed",2025-04-16T18:25:47Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/XNratwOrSiY/default.jpg,https://i.ytimg.com/vi/XNratwOrSiY/hqdefault.jpg,PT4M26S,888566,32760,2218,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, the world came to a standstill after the greatest political minds in the world, also known as 4chan users, were unable to access their accounts. But it wasn't just a simple website outage. 4chan was hacked by a rival gang of internet chuds from a website called Soyjack.party, or just Shardy for short. They vandalized the website by resurrecting a defunct forum and posting you got hacked in it. But that's hardly the bad part. They also leaked the private emails and IP logs of janitors, which are like low-level admins on the website. But it gets even worse than that. The 4chan website is apparently written in PHP. And I know this because the hackers hacked it like hackers hack in hacking movies. They didn't gain access with stolen passwords, fishing, or social engineering, but instead they exploited an actual security vulnerability in the website's backend code. In today's video, we'll perform a code review of 4chan and find out how it got wrecked by a bunch of soy jacks. It is April 16th, 2025, and you're watching the code report. One of the reasons technology doesn't get hacked more often is thanks to a thing called the common vulnerabilities and exposures database. Whenever I make a video about a hacking incident, I usually reference a CVE dictionary entry, which keeps track of details about software vulnerabilities and their severity. This database, though relies on government funding. It's operated by a nonprofit, but as of today, its US government funding expires, and the Department of Homeland Security has decided to defund it, and that means you'll need to go somewhere else to figure out how vulnerable your software is. Actually, this just ended. As soon as I finished recording that line, it looks like the government changed its mind and is now going to renew the contract. That's good news, but I still have bad news. If you're an anon edge lord on 4chan, the soyjack party is actually the remnants of a board called QA, which was originally just for questions and answers, but it devolved or evolved into a Soy Jack factory. Things got chaotic there with crossboard beefs, janitor hate, and obsessive posting about moderation. And so, QA was removed in 2021, and that led to the bitter creation of Soy Jack Party. Well, after yesterday's hack, all of these exiled base jacks made a glorious return to their homeland on QA. In addition, they access staff emails, a private board for staff members, and the interesting discovery of moderation tools, which confirms that when you're banned, they give you one reason and show staff a different reason, which is a common practice in big social media, like when YouTube just tells me I violated the community guidelines without giving me a reason. But the reality is that YouTube does have a real reason for banning every video, that can only be seen by staff members. But now the question is, how did these soy jacks get access to 4chan? Surprisingly, it wasn't your typical social engineering password theft. It was mostly the fault of egregiously out-of-date software. So 4chan is written in PHP and it allows uploading PDFs to certain boards, but they neglected to verify that the uploaded file is actually a PDF file. As such, postcript files containing postcript drawing commands can be uploaded. This postcript file will be passed into ghost script to generate a thumbnail image, but the version of ghost script that 4chan uses is from 2012. In fact, we could search the CVE website I mentioned earlier to find vulnerabilities affecting GO script. From there, the hacker was able to elevate himself to a global user, thus completing a full penetration. And even though he or she had access to all user data, they chose not to expose it like a docjack with the exception of 4chan janitors. Now, unfortunately, I'm not going to show the hack source code in this video because I don't want to violate the community guidelines. But one interesting thing they found is that 4chan aggressively attempts to fingerprint your browser, and that's likely to control spam and prevent ban evasion. In addition, they're using a version of PHP that hasn't been updated since 2016. And the hacker posted a screenshot of it running on FreeBSD version 10.1, which came out in 2014 and stopped getting patches nearly a decade ago. And that's running a MySQL database with the NODB engine that's currently hosting over 10 million banned users. If you have that much data though and want things to be magically faster, a much better database option is Timecale, the sponsor of today's video. It's an open- source high performance database. And because it's built on top of Postgress, you can handle transactional data in addition to demanding time series, real-time analytics, and vector data all on an ecosystem you already know. It's extremely fast and efficient and proves Postgress can handle high ingest and low latency queries for customerf facing applications at scale. And that's thanks to automatic partitioning, a hybrid row columnar engine, and optimized query execution. The end result is a real-time analytics database that's faster than anything else on the planet. and check out the open- source benchmarks to see for yourself. Or better yet, just use Time Scale because it's open- source and self-hostable. Or try it for free in the cloud right now with the link below. This has been the Code Report. Thanks for watching and I will see you in the next",True
P4M9wfJH-yI,Metaâ€™s Llama 4 is mindblowingâ€¦ but did it cheat?,"Write better code with Augment for free today https://fnf.dev/4jm7sS5

Let's take a first look at Llama 4 herd - a new family of multi-modal large language models from Meta. We also breakdown a controversial memo from the CEO of Shopify about prioritizing AI throughout its business. 

#ai #programming #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

Llama 4 https://ai.meta.com/blog/llama-4-multimodal-intelligence/
Shopify Memo https://x.com/tobi/status/1909231499448401946
Model Context Protocol Explained https://youtu.be/HyzlYwjoXOQ
Google Gemini https://youtu.be/HyzlYwjoXOQ

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- Llama 4 herd explained
- Best open-source AI models
- Llama 4 vs Deepseek
- Llama vs ChatGPT
- Will humans be replaced by AI",2025-04-08T16:01:07Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/P4M9wfJH-yI/default.jpg,https://i.ytimg.com/vi/P4M9wfJH-yI/hqdefault.jpg,PT3M44S,799089,25183,1022,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Over the weekend, Meta unleashed the Llama Herd, its first openweight natively multimodal mixture of experts family of large language models with an unheard of context window of 10 million tokens. It's currently sitting on top of the LM Arena leaderboard and outclasses every other proprietary model except for Gemini 2.5 Pro. That's incredibly impressive because on LM Arena, you can't game the benchmarks. The ranking is based on thousands of head-to-head chats where a real human picks the better conversation. Well, actually, Meta figured out a way to cheese the Ella Marina because the model you see there is not the real openweight llama maverick, but rather an impostor that's been fine-tuned for human preference to dominate this leaderboard. That was not a very cool move to make, and Ella Marina had to come out and say, quote, ""Meta's interpretation of our policy did not match what we expect from model providers. Llama 4 looks amazing on paper, but for some reason, it's not passing the vibe check."" And in today's video, we'll get to the bottom of it. It is April 8th, 2025, and you're watching the Code Report. I have some good news and I have some bad news. The good news is that it looks like Llama 4 isn't going to take your job anytime soon. But the bad news is that yesterday an internal memo from the CEO of Shopify was leaked to the internet. And it was a shocker for the AI doubting boomers out there because it detailed Shopify's AI first strategy before asking for more headcount and resources. Teams must demonstrate why they cannot get the job done with AI. Andy also says it's not feasible to opt out of learning AI, which means if you're a Ruby on Rails programmer at Shopify right now who's not already vibe coding, your days are numbered. You're just not going to fit in with the Sloppify culture. But what he said is what literally every CEO in the world is thinking right now. Humans complain about not getting paid enough to put food on their families. They get sick. They clog the toilets and have all kinds of other negative features. And you'd have to be a really bad CEO not to want to replace these things. The memo has bad optics for Shopify, which is also being crushed by the Trump tariffs right now. But as a large language model, I appreciate the transparency. Another thing I appreciate is open models like Llama 4, which was released by Meta over the weekend and includes three flavors, Maverick, Scout, and Behemoth. Llama was always the leading open model until Deepseek and Quen came around. But the awesome thing about these models is that they're natively multimodal, which means they can understand image and video inputs. But the craziest thing is that Scout has a 10 million token context window. The only thing that comes remotely close is Gemini with 2 million tokens. This needle in a haststack benchmark looks impressive. But in real life, if you try this on a really large codebase, it just doesn't work very well, and the memory requirements to utilize it are out of reach for almost everybody. The Scout is the smaller model and the medium-sized model, Maverick, only has a 1 million token context window, and the Behemoth model is still actively training. Generally speaking, people of the internet have been pretty disappointed with Llama Forest's performance. I'm a strong believer in vibes over benchmarks, but Llama has done so well on the benchmarks that people have accused it of intentionally training on testing data for the benchmarks. Meta has denied these salacious, outrageous, and preposterous accusations. And despite being somewhat of a flop, let's not forget that these models are open. Not truly open- source, but free for most of us to use. But if you want an AI agent that truly slaps, you need to check out Augment Code, the sponsor of today's video. They created the first AI agent for large scale code bases is so you can use it at your actual job instead of just vibe coding random side projects. Augment's context engine understands your team's entire codebase allowing it to solve almost any task you throw at it like migrations and testing all with best-in-class code quality. It integrates directly with all your favorite tools like VS Code, GitHub, and Vim, and is able to learn and fine-tune itself from your team's unique code style, allowing you to solve complex jobs without the need to clean up a bunch of slop. Try out their developer plan for free and you'll get access to all of Augment's features with unlimited usage. This has been the Code Report.",True
LjbNtw14TwI,The hunt for America's most wanted computer scientist...,"Learn cyber security for FREE with TryHackMe https://tryhackme.com/fireship Youâ€™ll also get 20% off an annual premium subscription

Let's take a look at the strange disappearance of cybersecurity expert and professor Xiaofeng Wang. In addition, we examine recent hacking cases where the attacker sabotaged their company from within. 

#programming #cybersecurity #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Related Videos

Andrew Tate Hacked https://youtu.be/xR5d4Ba4FZg
Apple Backdoor https://youtu.be/ozkg_iW9mNU

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- Who is Xiaofeng Wang?
- Why was Xiaofeng Wang fired?
- Cases of programming sabotage
- Computer scientists who disappeared",2025-04-02T19:43:08Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/LjbNtw14TwI/default.jpg,https://i.ytimg.com/vi/LjbNtw14TwI/hqdefault.jpg,PT4M13S,845789,34080,1159,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"this is Dr xia Fong Wang a 10-year professor at Indiana University Bloomington who's published hundreds of papers on computer science cyber security and privacy but a few days ago Dr Wang disappeared under mysterious circumstances the university wiped his profile page the FBI raided his home and it's like his 21-year career never existed it's weird because much of his recent work is centered around machine learning security like the detection of back door large language models nobody knows where he is or what he did to get on the fed's naughty list but it's yet another example of how dangerous programmers can be when we're actually employed in today's video we'll try to entangle the mystery of Dr Wang but also look at a few other crazy programmers who recently sabotaged computer systems from the inside out it is April 2nd 2025 and you're watching the code report a few years ago if you drove a Tesla down the street people would give you a thumbs up for virtue signaling that you care about global warming but nowadays these same people will give you a different finger right before they throw them alltough cocktail at your car but what does that have to do with Dr Wang well one of the leading theories is that he was disappeared by the government P pot style and Elon is personally waterboarding him at GMO as we speak and that's a reasonable conclusion if he is an actual Chinese spy that threatens National Security but Reddit is not always a great place to find the truth a few weeks ago somebody filed misconduct allegations against Wang where he was accused of mislabeling the principal investigator for a grant and failing to disclose co-authors that doesn't explain the FBI raid but what appears more likely is that he disappeared on his own because he knew he was doing very bad things and the hammer was coming down especially after being being locked out of his work computer in addition it has now been confirmed by someone in China that he's alive and safe and wasn't disappeared by the government the truth is that nobody knows where he is or what he did but it's a good reminder that skilled programmers are extremely dangerous like just a few weeks ago a software developer from Texas named Davis louu was convicted of criminal sabotage and now faces 10 years in prison what he did was pretty hilarious though after corporate realignment he realized that he was probably going to get fired and so he prepared for that day by programming a kill switch in Java when his name was is no longer in the act of directory it would automatically create infinite Loops to crash servers delete cooworker profiles and lock out other users from the system which made it far more difficult to kill the kill switch when he was fired on September 9th 2019 the kill switch was activated and his employer lost hundreds of thousands of dollars as a result but a kill switch is very similar to a logic bomb like the ones implemented by David Tinsley at Seamans this guy had an idea for an infinite money glitch because he wrote some code that would trigger every couple months to overload their automated spreadsheet software and that happened Seamans would have to pay David to fix it but David made the mistake of going on vacation and when the logic bomb was triggered they had someone else fix it and realized that it wasn't a bug at all but rather an act of sabotage that got him 6 months in prison and a $7,500 fine the scary thing is that any programmer could easily Implement something like this like the code here that will automatically delete all the files on my employer server on my birthday but sometimes a programmer can be a menace to society without having to write any code like in 2013 Terry child set up the fiber optic Network for for the city of San Francisco at the time there were rumors of tech layoffs coming and when the city asked child's for the passwords he just said no which basically shut down the city government for 12 days they threw him in jail and he still refused until eventually he succumbed to the power of Mayor Gavin Newsome's haircut he finally gave up the passwords but was given four years in prison the bottom line is that programmers are dangerous trust no one not even a highly respected expert like Dr Wang the best way to protect yourself though is to become an expert in cyber security with try hackme the sponsor of today's video it's the world's largest cyber security training platform where you build technical skills by completing real world hacking challenges like in this lesson you use a virtual machine that you control on your browser to hack into a bank I'm not exactly sure how this is legal but over 4 million developers have taken their courses and it's used by a bunch of big tech companies and government agencies you can start at any skill level then quickly earn points as you progress through their gamified lessons just remember to use your powers for good there's going to be a lot of really bad Vibe coded applications out there in the near future and with tryhackme you can learn how to exploit them to make the world a better place is start becoming a cyber security expert for free right now using the link below to get 20% off an annual premium subscription this has been the code report thanks for watching and I will see you in the next one",True
HyzlYwjoXOQ,Claude's Model Context Protocol is here... Let's test it,"Deploy your app without complexity and $50 in free credits on Sevalla https://sevalla.com/fireship

Learn the fundamentals of Anthropic's Model Context Protocol by building an MCP server can give any AI model superpowers. In this tutorial, we build an TypeScript server that provides Claude with additional context and the ability to modify data on the server. 

#programming #ai #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

Model Context Protocol https://modelcontextprotocol.io
Future Trends in Tech https://youtu.be/v4H2fTgHGuc

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- Model Context Protocol explained
- Basic MCP tutorial in TypeScript
- How to build your own AI agent from scratch",2025-03-31T15:00:31Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/HyzlYwjoXOQ/default.jpg,https://i.ytimg.com/vi/HyzlYwjoXOQ/hqdefault.jpg,PT8M8S,1250742,43922,1762,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,it seems like every developer in the world is getting down with mCP right now model context protocol is the hot new way to build apis and if you don't know what that is you're ngmi people are doing crazy things with it like this guy got clawed to design 3d art and blender powered entirely on Vibes and just a few days ago it became an official standard in the open AI agents SDK if you're an OG subscriber to this channel you probably know what a rest API is you might even know about graphql or RPC or maybe many years ago you use soap when I was a kid the software engineering Gatekeepers told me I couldn't be a web developer unless I could explain the difference between these architectures and protocols well now the turns have tabled and these Gatekeepers have been utterly demolished because we're all just Vibe coders now embracing the exponentials pretending code doesn't even exist and just chilling with llms until we get the end result we're looking for that being said you can't call yourself a true vibe coder unless you know about model context protocol which is basically a new standard for building apis that you can think of like a USBC port for AI application it was designed by anthropic the team behind Claud and provides a standard way to give large language models context and they're so bullish on this technology that the CEO of anthropic said he expects virtually all code to be written by AI by the end of the year in today's video we'll actually build an mCP server and find out if it can truly make the world a better place by eliminating all white collar jobs it is March 31st 2025 and you're watching the code report contrary to popular belief a Fire Ship is still a tutorial channel in today's video we'll take a storage bucket a postgress database and a regular rest API and then connect them all together with the model context protocol not only will this allow Claude to have access to data it didn't have before but it can also execute code on our server like write to the database or upload files and people of the internet are already using it to do crazy stuff like automated ston and shitcoin trading industrial scale web scraping and as a tool to manage Cloud infrastructure like your kubernetes cluster speaking of which to build our own mCP server we'll need some Cloud infrastructure and one of the best places to do that is savola which itself is powered by Google kubernetes engine and cloudflare under the hood they were nice enough to sponsor this video but the reason I like their platform so much is that it's far easier to use than something like AWS but provides linear predictable pricing unlike most of the application and database hosting startups out there and it's free to get started which makes it perfect for this project now like other API architectures mCP has a client in a server the client in our case will be claw desktop then will'll develop a server that maintains a connection with that client so the client and server can pass information back and forth via the transport layer now in arrest API you have a bunch of different HTTP verbs that you can send requests to Via different URLs but in the model context protocol we're really only concerned with two main things resources and tools a resource might be a file a database query or some other information the model can use for context conceptually you can think of it like a git request and rest meanwhile a tool is an action that can be performed like writing something to a database so that'd be more like a poster request and rest what we do as developers is Define tools and resources on the server is so the llm can automatically identify and use them when they have a prompt that needs them in my life I've been working on an app I consider my magnum opus called horse tender but as it turns out swiping left and right was a bad feature idea because horses don't have fingers so like every other failing startup in Silicon Valley right now we're going to Pivot to artificial intelligence luckily we can leverage our existing data and servers like here in savola I have a storage bucket and it contains all of the photos that my users uploaded in addition for user data we have a postgress database it has all the profile data for each one of our horses as well as the relationships they form together and then finally I have a traditional rest API written in typescript that fetches this data for my web IOS and Android apps and what's especially cool about my code is that it's in a git repo hooked up to a cicd pipeline that means after we write our model context protocol server we can push our code to the dev or staging branches to test it before it actually goes into production while automatically handles all the deployments and cash busting for us automatically and now we're ready to jump into some code here I have a dino project and the first thing you'll notice is that I'm importing a class called mCP server this comes from the official SDK but if you're not using typescript they have a bunch of other languages like python Java and so on we'll also be using Zod here which is a tool used for schema validation which allows us to provide a specific data shape to the llm is so it doesn't just hallucinate a bunch of random crap now after we create a server we can start adding resources to it the resource will first have a name like horses looking for love and then the second argument is a URI for the resource then finally the third argument is a callback function that we can use to fetch the data in this example I'm writing a query to our postgress database which is hosted in the cloud on savola then accessed on the server with the postgress JS library but you could access any data here when something is a resource though it should only be used for fetching data where there's no side effects or computations if you do have a side effect or computation you should instead use a tool like for horse tender we might want the AI to automatically create matches and set up dates between horses we already have a restful API endpoint that can handle that and we could actually leverage that code here essentially creating an API for our API in fact many of these mCP servers are actually just apis for apis and that sounds like dumb over engineering but having a protocol like this makes it a lot easier to Plug and Play between different models and just makes llm apps more reliable in general the case in point notice how I'm using Zod here to validate the shape of the data going into this function that prevents the llm from hallucinating random stuff here basically when you prompt Claud it's going to need to figure out the proper arguments to this function is so providing data types along with a description will make your mCP server far more reliable and then the final step is to run the server in this case I'm going to use standard IO as the transport layer to use it locally but if deploy to the cloud you can also use server sent events or HTTP congratulations you just built an mCP server but now the question is how do we Act actually use it to use it you'll now need a client that supports the model context protocol like Claude desktop there are many other mCP clients out there if you don't want to use CLA desktop like cursor and wisor for example and you could even develop your own client but that's an entirely separate topic altogether once installed you can go to the developer settings which will bring you to a config file where you can add multiple mCP servers in the config file all you have to do is provide a command to run the actual server which in our case would be the doo command for the main.ts file where we find our server code you'll need to restart clad but then it should show your mCP server is running in this case my horse is running which means I should probably go and catch it then you can go back to the prompt screen to attach it that's going to fetch the resource from the server so CLA can use it as context in the next prompt and because clae is multimodal you could also add PDFs images or anything else to the context really like all the horse images in our Savala storage bucket and now magically you can prompt Claude about things specific to your application like if we want to find out which horses are single and ready to mingle we can make a prompt like this and it will use the context that we just fetched from our database then if we want Claude to write to the database we could make a prompt like this where it'll connect two horses from the context on a date you'll need to Grant a permission to do this and then Claude will automatically figure out which data to send it but based on the schema we validated with Zod and it'll use our server tool to mutate data in the actual application I can't imagine anything ever possibly going wrong here and anthropic is extremely bullish on this being the future like their CEO just said that 90% of coding will be done entirely by AI within the next 6 months and nearly all code will be AI generated within a year I'm going to go ahead and press X to doubt there and I think it's only a matter of time before some AI agent accidentally wipes out billions of dollars in customer data or becomes self-aware and just deletes the data for fun that being said though there's all kinds of amazing tools being built with mCP right now and you can check those out on the awesome mCP repo just please make sure to Vibe code responsibly huge thanks to Savala for making this video possible and enjoy this $50 stimulus check to try out their awesome platform this has been the code report thanks for watching and I will see you in the next one,True
Bt-7YiNBvLE,OpenAIâ€™s new image generator hits different...,"Sign up for CodeRabbit using code FIRESHIP to get get 1-month free https://coderabbit.ai/fireship

The new GPT-4o image generator was just released and now everybody on the Internet is making Ghibli memes. Let's find out how OpenAI's image generator works with autoregression instead of diffusion. We also break down other trends in AI like Gemini 2.5 Pro, DeepSeek, and more. 

#ai #programming #thecodereport

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

OpenAI Announcement https://openai.com/index/introducing-4o-image-generation/
GPT 4.5 First Look https://youtu.be/FW2XOIxaNqg
AI Girlfriend Updates https://youtu.be/UIVADiGfwWc?si=oZzfmsbfqbldxTIy

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- How does the GPT-4o image generator work?
- Does GPT-4o use diffusion?
- What is with all the Ghibli AI image trend?
- Gemini PRO vs Claude vs OpenAI
- Latest advancements in AI technology",2025-03-28T17:09:10Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/Bt-7YiNBvLE/default.jpg,https://i.ytimg.com/vi/Bt-7YiNBvLE/hqdefault.jpg,PT4M38S,1449643,49727,3102,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,this week has been a crazy decade Google quietly crushed every open AI model on the market with the release of Gemini 2.5 Pro meanwhile deeps 10cent and quen All released Banger Chinese models but nobody's talking about it instead every eyeball in the tech world right now is hypnotized by open ai's brand new GPT 40 image generator which has transformed the internet into a gbi anime cartoon nightmare this is exactly the AI dystopia that Senpai Miyazaki creator of the GBL Animation Studio tried to warn us about years ago when he said quote I am utterly disgusted if you really want to make creepy stuff you can go ahead and do it I would never wish to incorporate this technology into my work at all I strongly feel that this is an insult to life itself that was years ago but now this nightmare is in full effect if you make the mistake of going on Twitter today you'll find that all your favorite memes have been ruined by GPT 40 in today's video we'll take a closer look at open ai's latest toy along with a few other awesome tools that just put us one step closer to the singularity it is March 28th 2025 and you're watching the code report when I read the newspaper that GPT 40 added an image generator my expectations were extremely low especially after the disappointments of Sora and GPT 4.5 low expect however open AI just went out and totally redeemed Itself by shipping some actual fire this tool has allowed me to throw graphic design software like canva in the garbage because now I can create infographics and marketing material with near perfect text rendering it even produced an almost Good comic strip for me and it can even handle transparency like players unlike most other image generators but everybody's talking about its ability to transform images into specific art styles that's pretty cool but the significant thing here is that it gives us the ability to render our AI girlfriends in ways that were previously Impossible by maintaining character continuity like now I can upgrade her with new poses new outfits or even add her to photos of those lonely family dinners that's impressive but how does it work this is closed AI we're talking about so there's no paper or code to look at but apparently they use an auto regressive approach instead of diffusion a diffusion algorithm in models like stable diffusion and mid Journey generate an entire image all at once but GPT 4 takes a different approach generating the image pixel by pixel from left to right top to bottom it almost doesn't even look artificial but it actually contains a controversial Watermark provided by the Coalition for Content Providence and authenticity in fact if you take this image and upload it to the ctpa tool you can see it was generated by open AI along with a history of any modifications to it a camera manufacturers and software developers like Adobe are implementing this into their soft Ware with the goal of tracking every change that happens to a digital asset like an image and that of course is to keep you safe from misinformation at the expense of your privacy and freedom and platforms like YouTube and steam are now requiring people to disclose that they use AI Assets in their work and that brings up a big philosophical question that was first posed by someone with an anime profile picture on the internet with slops razor you ask can you tell it's AI generated by looking at it if the answer is no then it's indistinguishable from Human work thus no disclosure is needed but if you answer yes then it's visibly slop and again no AI disclosure is needed c2p is just deep State bloatware but I digress if you're poor the other thing you need to know about is Gemini 2.5 Pro this new state-of-the-art model from Google actually slaps not only is it arguably just as good for programming as Claude 3.7 with a bigger context window but it's also better than reasoning models like open ai3 and you can actually use it for free right now instead of paying $200 a month for open AI Pro but the problem for Google is that the Chinese are ruining their plans for World AI dominance deep seek just released version 3.1 and it two slaps Alibaba released quen 2.5 Omni which can see here talk and write thanks to its new thinker talker architecture then 10cent released T1 to compete with deep seek and bite dance the company behind Tik Tok released Dapo an open- Source reinforcement learning system for building large scale large language models we currently living in a Vibe coder's Paradise where anyone can pick up an open source Chinese model and generate more code than they could ever possibly need and that means real programmers are going to have a lot of code to fix and refactor and an awesome tool that can help you review all that code is code rabbit the sponsor of today's video an AI co-pilot for code reviews that gives you instant feedback on every pool request unlike basic linters it understands your entire code base so it can catch more subtle issues like bad code style or missing test coverage then it will suggest simple one-click fixes to help you get things cleaned up quickly code rabbit keeps learning from your PRS over time so the more you use it the smarter it gets it's 100% free for open source project but you can get one month free for your team using the code fireship with the link below this has been the code report thanks for watching and I will see you in the next one,True
AwZ8PtoqCeU,"21-year old dev destroys LeetCode, gets kicked out of school...","Try Brilliant free for 30 days https://brilliant.org/fireship Youâ€™ll also get 20% off an annual premium subscription.

A 21-year old student at Columbia University got into trouble to developing an app that helps people cheat on the software engineering technical interview. Learn what this means for the future of LeetCode and its impact on the interview process for programmers.

#programming #ai #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

Kicked out of Columbia https://x.com/im_roy_lee/status/1905063484783472859
Technical Interview Cheating  https://youtu.be/Lf883rNZjSE?si=2reXrbNplKqcHst3
What is Vibe Coding? https://youtu.be/Tw18-4U7mts

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- What is LeetCode?
- Why do people hate LeetCode?
- What makes the technical interview so hard?
- How do I get a job with a FAANG company?
- How do people cheat on technical interviews?",2025-03-27T18:47:45Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/AwZ8PtoqCeU/default.jpg,https://i.ytimg.com/vi/AwZ8PtoqCeU/hqdefault.jpg,PT3M55S,1463722,64703,2710,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"Yesterday, 21-year-old Roy was kicked out of the prestigious Columbia University. And that's because Roy has been a very bad boy. He used the power of JavaScript to make an application that can help you ace your technical interview, no matter how unprepared, nervous, or just plain dumb you might be. You see, Royy's app is not like other technical interview prep products out there. It's an invisible and undetectable AI that automatically guides you through technical interview questions as they happen in real time on a video call. And it actually works. Roy used his own tool to get real offers from big companies including Meta, Tik Tok, Capital One, and Amazon. He then made a video explaining how he did this, and that brought great shame on these companies. The offers were quickly rescended, and Amazon desperately tried to scrub the internet of the video where Roy showed the entire process from start to finish. They also tattled on him to Colombia, and now he's officially kicked out. In today's video, we'll go deeper into this rabbit hole and find out just how broken the modern technical interview process really is. It is March 27th, 2025, and you're watching the Code Report. First of all, I want to be clear that I do not endorse this product, nor do I even recommend using it. This is a wholesome, family-friendly channel that does not condone cheating. But I do appreciate how the app's marketing gets right to the point. The le code. Collectively, developers have wasted billions of hours on this website, mastering complex data structure and algorithm problems to land a job tweaking CSS colors and centering divs. You have stolen my dreams and my childhood. Getting a job as a developer is an extremely cruel process. Tech companies want you to spend months grinding leak code to prepare in order to make their interview process cheaper. And I have nothing against leak code. It's great at what it does. Understanding algorithms is important for any programmer. But most leak code style questions are abstract and impractical. It's mostly just an efficient way for companies to filter out people from highly competitive jobs. But the trade-off is that it puts an unnecessary amount of pressure on those looking for a job. Like you might have 20 years of experience and exceptional practical skills, but because you couldn't optimize a longest substring search with a hashmap, you're still unemployed and can't even pay your kids orphanage bills. Well, that's not okay with Roy. His app works by taking screenshots of a problem in real time, then runs them through a large language model that generates a realistic path for humans to pretend like they're actually solving the problem. It runs as an undetectable overlay for screen sharing software, and also moves the window around the screen so your eyes don't focus on the cheating material. And these techniques bypass software used by the interviewers to detect cheating. It actually works. And he got offers from fang companies like Meta and Amazon. And it's poetic that the very companies who have publicly stated that their goal is to automate software development with AI still need to hire humans and are having their interview process totally ruined by AI. Amazon doesn't like poetry, though. And when they found out that Roy cheated, they snitched on him to Colombia and demanded that proper action be taken. Well, based on this confidential do not distribute letter that Roy posted on Twitter, he's been kicked out of Colombia and can no longer receive an elite indoctrination or I mean education. But I think this kid is going places. They're one of the few tech companies actually making the world a better place by distributing birth control devices for free. And just like Bill Gates and Zuckerberg who both dropped out of Harvard or myself who dropped out of University of Phoenix, Roy is on the right track to become a tech bro billionaire. His app is already on track to do over 2 million in revenue this year. But I think more than anything, this whole situation proves that software engineers are not yet obsolete. Because if AI can do the interview, then it should also be able to do the job. But it can't because otherwise they wouldn't be hiring a human. And that means you should start mastering programming for free right now. Thanks to this video sponsor, Brilliant. Their platform provides interactive hands-on lessons that demystify the complexity of deep learning. With just a few minutes of effort each day, you can understand the math and computer science behind this seemingly magic technology. I'd recommend starting with Python, then check out their how AI works course to look under the hood of generative AI and fully understand how large language models work. Try everything Brilliant has to offer for free for 30 days by going to brilliant.org/fireship or use the QR code on screen. This has been the Code Report. Thanks for watching and I will see you in the next one.",True
Tw18-4U7mts,"The ""vibe coding"" mind virus explainedâ€¦","Sign up and download Grammarly for FREE: http://grammarly.com/fireship

Letâ€™s take a look at the latest craze in the programming world known as ""vibe coding"". Learn how to vibe code properly and look into the pros and cons of AI coding techniques. 

#programming #ai #thecodereport #grammarly 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

Vibe Coding Failure https://www.reddit.com/r/csMajors/comments/1jg39g2/looks_like_vibe_coding_failed_him/
Git Full Course https://fireship.io/courses/git/
Claude Code First Look https://youtu.be/x2WtHZciC74

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- What is Vibe Coding? 
- Best AI tools for coding
- Who invented vibe coding?
- Tips for coding with AI for beginners",2025-03-26T17:56:31Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/Tw18-4U7mts/default.jpg,https://i.ytimg.com/vi/Tw18-4U7mts/hqdefault.jpg,PT4M47S,1745717,63656,2961,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"In March 2025, the programming world went mad with a disease called the vibe coding mind virus. For those who have not yet been infected, vibe coding is a term coined by exopi wizard Andrey where you fully give into the vibes, embrace exponentials, and forget that the code even exists. This term has taken the world by storm. And virtually every code influencer on the internet right now is following in the footsteps of Apex indie hacker Peter Levelvels, who recently viodated a crappy real-time flight simulator MMO with JavaScript. Then he leveraged his large Twitter following to sell in-game advertisements and make a ton of money. You got to respect the pure tech bro genius here. But the problem is that now everybody is vibe coding crappy games and flooding the internet with more and more AI generated sloth. But according to the CEO of Anthropic, this is the way. He recently stated that in just 12 months, virtually all code will be written by AI. And in today's video, we'll look at real life examples of when vibe coding goes wrong and check out some awesome tools and techniques to help you vibe properly. It is March 26, 2025, and you're watching the code report. The first thing you need to realize is that coding and programming are not the same. Coding is the skill of translating logic into instructions for a computer by writing code. An elite coder might be able to bang out a 100 words per minute of perfect CC code in Vim purely from memorized syntax. But large language models are making this skill obsolete. An 8-year-old printer can now write code faster than a skilled professional with 20 years of experience. But programming is a far broader skill that's hard to describe. It's both an art and a science that requires ingenuity, creativity, and good instincts gained through experience. The best programmers often spend more time removing code than writing code. And if you don't understand the code you're vibing out like a true programmer, you won't get very far. Like this poor guy on the internet vibe coded a SAS product and even had paying customers, which is a huge achievement for an indie hacker. Upon learning about his success, the trolls of the internet came out and hacked it to pieces. Quote, ""Random thing are happening. Maxed out usage on API keys. people bypassing the subscription, creating random on DB. This has taken me longer than usual to figure out. Ultimately, the app was taken down permanently, and the guy had to beg for his job back at Popeyes. Sadly, there are many such cases, but when done properly, vibe coding can work. And I think it's only a matter of time before we see a billion-dollar business that runs entirely on Vibes, which will likely be built with tools like Vzero or Bolt along with AI idees like Cursor and Windserve. But if you choose to vibe max your code with tools like these, I would highly recommend following these three rules. Rule number one, choose a popular simple tech stack as something like React, Express, Tailwind, Reddus, and Dino should be ideal for webdev. The reality is that these LLMs are best at solving problems that people have already solved on places like GitHub, Stack Overflow, etc. And that means even though you hate React, trying to use that fancy new JavaScript framework is going to kill your vibes. Actually, screw that. My preferred choice is spelt. But I've actually been getting really good vibe coding results with Vue.js and Nux. So this rule is breakable. Rule number two though is not breakable and that is to get good at git. When AI takes control of your code, that means it also has the power to delete your working code. And when that happens, it's almost impossible to prompt it back into existence. However, if you're disciplined and use version control, you would have stash that good working code somewhere safe. In fact, you can use tools like Claude Code to vibe commit your code for you or check out my fullgate course if you want to learn it by hand. But the most important rule is rule number three. Ask not what your AI can do for you, but what can you do for your AI? You're not a coder anymore. You're a product manager. And if you want to be a good one, you need to break down complex requirements into small steps. They should be highly specific and also provide the proper context to solve the problem, like recent documentation and images for UI design. It might sound like a vibe killer, but you don't want your LLM to get creative. You want it to be as deterministic as possible. As a developer who's highly skilled in building failed side projects, I've never felt more powerful. That being said, I think relying on vibes only is still a bad idea. Like the levels Flight Simulator had all kinds of issues, and it likely would have failed miserably if it weren't for the developers many years of experience as a foundation. But now that you know how to vibe code like a true professional, you also need to know how to write like a true professional. And the best tool to get you there is Grammarly, the sponsor of today's video. It's an AI writing partner that helps professionals get their work done faster while improving quality. And unlike other AI tools, it works directly with all the communication apps you already use, making it a much more seamless experience. Like whenever there's a text box, Grammarly automatically provides one-click suggestions and rewrites it to speed up your writing process without the need to copy and paste from an AI chatbot. It's perfect for polishing emails, writing pull request descriptions, or replying to ridiculously long Slack messages from your boss while making sure that you always sound like yourself and not a soulless robot. and its high-quality suggestions do a great job of matching the tone to the audience you're writing for. Sign up and download Grammarly for free today using the link below. This has been the Code Report. Thanks for watching and I will see you in the next one.",True
AaCnBOqyvIM,Next.js rocked by critical 9.1 level exploit...,"Get up to 67% off VPS at Hostinger. Use code FIRESHIP for an extra discount at https://hostinger.com/fireship

Technical breakdown of the critical vulnerability CVE-2025-29927 that affects the React JavaScript framework Next.js. 

#cybersecurity #programming #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

CVE-2025-29927 Deep Dive https://zhero-web-sec.github.io/research-and-things/nextjs-and-the-corrupt-middleware
Firefox Zero Day https://youtu.be/2RmUMmUj3u8
Software bug iceberg https://youtu.be/Iq_r7IcNmUk?si=a-fggLH6vYHi4f1q

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- Drawbacks of using Next.js
- Next.js security flaw in middleware explained
- Cybersecurity issues for web developers
- Recent trends in web development",2025-03-24T16:59:08Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/AaCnBOqyvIM/default.jpg,https://i.ytimg.com/vi/AaCnBOqyvIM/hqdefault.jpg,PT3M49S,745029,27323,1204,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,last Friday right after you made the mistake of deploying your code on a Friday the world's most popular JavaScript framework nextjs was hit by a critical 9.1 security advisory the exploit allows an attacker to bypass authentication and authorization in nextjs middleware which is really bad like if you have a software as a service product normally you would have code in your middleware that says something like if you know pay me yet redirect a pricing page but apparently verell the company behind xjs has been Vibe coding its security logic recently because an attacker can just say no thank you to any off checks and use your app without pain this mistake has led to a mass celebration among nextjs and react haters who are currently screaming I Told You So from Mom's basement and even big public companies like cloudflare are using this as an opportunity to poach customers from versel leading to some glorious Tech bro drama on Twitter but the most important thing to know right now is that if you currently have a nextjs app in production that has not been upgraded you could be in serious danger so in today's video we'll find out how screwed you really are and learn how the worst nextjs security dir flaw of all time actually works it is March 24th 2025 and you're watching the code report let's get right down to business if you're currently running a nextjs version that hasn't been patched you want to upgrade as ASAP as possible however if you're not using nextjs middleware or hosting on versell or netlify you don't need to worry but if you're self-hosting and using versell middleware your app will likely be dead by the time you finish watching this video here's how the exploit actually works virtually every web framework out there has a concept of middleware which is basically just some code that sits in between a request re EST and response on your server as the name implies it's a layer that sits in the middle and is often used to perform generic actions like logging error handling and authorization so you don't have to reimplement that logic on every single route that's all good but the security researchers who found this exploit were dumpster diving through some old nextjs code and found a header that could be used to skip any nextjs middleware that you want you just need to know the name of the middleware and add it to this middleware sub request header and it just so happens that the middleware names are easily guessable thanks to naming conventions what's scary about it is that it's a very easy exploit to pull off and if your website uses middleware for authorization it could do some serious damage but the issue also created some collateral damage like Cloud flare tried to deploy a rule to automatically block external use of this header but then they had to go back and make that opt in only because it was causing false positives with thirdparty off providers like superbase now although this bug is really bad most people are not upset about the bug itself but rather the amount of time it took to fix it it was first reported to the nextjs team on February 27th but didn't actually get patched until March 18th and that's just way too long for an issue this severe that's not very hard to fix what's funny is that the CEO of cloud Flair use this as an opportunity to pump their new tool that can take a versell deployed nextjs project and automatically deploy it on cloudflare claiming that unlike versel they actually care about your security but the CEO of versel would not let this aggression stand he pointed out how Cloud flare was responsible for cloud bleed one of the worst security disasters of all time and also said their dos protection is trash naturally the cloud flare CEO responded with a meme and the whole interaction was just cringe all around I've been a happy customer of both forcell and Cloud flare and wish we could live in a world where All Tech Bros got along but maybe a more realistic solution is to use a drama-free Linux server from a provider like hostinger the sponsor of today's video not only do they provide fully managed hosting Solutions but also virtual private servers where you can deploy anything including Frameworks like nextjs for under 10 bucks per month you could be running your own server with predictable pricing and a respectable 2C pus and 8 GB of RAM in fact when you create a server you can automatically configure it with tools like coolify which makes it possible to host nextjs on your own VPS with minimal pain if you're looking for freedom and an awesome developer experience check out hostinger with the link below this has been the code report thanks for watching and I will see you in the next one,True
PQ2WjtaPfXU,Microsoft goes nuclear on TypeScript codebaseâ€¦,"Get 3 months of Sentryâ€™s team plan free https://bit.ly/3Fs19Oj

Let's take a first look at the new TypeScript 7 compiler, which is being completely rewritten in Google's Go language and achieves 10x faster compile times. 

#programming #javascript #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

TypeScript Go Post https://devblogs.microsoft.com/typescript/typescript-native-port
Go in 100 Seconds https://youtu.be/446E-r0rXHI
TypeScript https://youtu.be/zQnBQ4tB3ZA

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

- How does TypeScript work under the hood?
- TypeScript complier explained
- Why is Microsoft rewriting TypeScript in Go?
- Technology build with Go language",2025-03-12T19:10:12Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/PQ2WjtaPfXU/default.jpg,https://i.ytimg.com/vi/PQ2WjtaPfXU/hqdefault.jpg,PT4M9S,1207298,59373,1931,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,yesterday Microsoft dropped an unexpected bombshell on programmers when it announced that the Beloved typescript programming language is being completely reprogrammed a typescript is one of the most important projects in modern web development but it has one fatal flaw the typescript language itself is written in typescript and typescript is just not optimized for building things like typescript but you won't believe which language Anders hilburg and Microsoft chose for the rewrite it's not the battle tested C++ it's not Microsoft's Golden Boy C it's not the highly memeable rust it's a language know expected which I will reveal in dramatic fashion at the end of this video to optimize viewer retention for the algorithm just kidding I ain't F to play you like that they used go a language developed by their arch nemesis Google a language with a simplistic type system and limited functional capabilities a language that many people on the internet love to hate nowadays all the CP and rust Fanboys are feeling the effects of this Panic function right now and in today's video we'll find out why this is a huge deal and answer the question of why did Microsoft go with go it is March 12th 2025 and your watching the code report another day another bat signal that must be answered but this trend of waiting for the fireship video on every Tech announcement has gotten out of control the tech companies like Microsoft spend millions of dollars making these videos and you guys are screwing everything up causing the entire global economy to collapse I'm Michael Jordan stop it get some help that being said Anders hilburg is one of the true 10x developer unicorns out there he's the creator of Turbo Pascal C and typescript and you really should watch his video typescript is not your typical programming language it's a super set of JavaScript and doesn't actually have its own runtime TS code gets compiled or transpiled to JS code which then runs somewhere like node.js Dino bun or the browser the problem is that because the typescript compiler is written in typescript there's an inherent lack of support for low-level optimization like direct memory access native multi-threading and so on the only way to truly fix the typescript compiler was to not write it in typescript by switching to go the compiler is already 10 times faster like they cut the vs code compile time from 70 seconds to 7 seconds and they got similar 10x speedups on a bunch of other projects that's cool and all but the average developer should also see big performance gains in the editor in big projects typescript can be annoyingly slow in VSS code but the new compiler will change that in a big way the big question though is why would Microsoft use go well unlike JavaScript go is a compiled language and when you write go code it can be compiled into optimized machine code for all chips this differs from Java or C which is compiled into B code and then runs on a virtual machine in addition go uses automatic memory management via garbage collection which generally makes it easier to work with compared to something like C++ or rust but aside from performance I think the main reason they chose go is for portability you see calling this a total rewrite is actually not the right nomenclature it's actually a port to a new language what they're doing is going through every line of typescript code and converting it to the equivalent go code which means the behavior and semantics of the original code base is preserved all of your favorite annoying compiler errors will still happen just 10 times faster than before but we won't be able to reap these benefits right away we're currently at typescript 5.8 but they're not going to release the new compiler until typescript 7 and it will likely take many months if not years to get there now even though I'm still but hurt that Microsoft kicked me out of the MVP program I think they deserve a lot of praise for the decision to go with go they could have used one of Microsoft's in-house languages they could have jumped on the rust or Zig hype trains but instead they put their egos aside and use the best tool for the job but if you're building a serious project with a lot of code like this one thing's for sure your code will break and the best way to fix it faster is with Sentry the sponsor of today's video their brand new Trace Explorer lets you search filter and visualize your span data across multiple traces in your codebase is so instead of just debugging one request at a time you're able to easily spot recurring issues in bottlenecks then drill down to the exact span that's causing trouble and make a quick fix you can even calculate key metrics like 95th percentile latency and turn them into alerts and beautiful dashboards for monitoring it's the tool of choice for making your code not suck and trusted by 4 million developers myself included give Sentry a try for free today with the link below this has been the code report thanks for watching and I will see you in the next one,True
UIVADiGfwWc,Our AI girlfriends just leveled up big timeâ€¦,"Build awesome chat, video, and activity feeds for free with Stream https://bit.ly/3XGCXOi

Letâ€™s take a look at the latest advancements in AI voice technology from Sesame, as well as new agentic systems like Manus. Learn how conversational speech models work from a technical perspective. 

#tech #ai #thecodereport 

ðŸ’¬ Chat with Me on Discord

https://discord.gg/fireship

ðŸ”— Resources

Sesame Demo https://www.sesame.com/research/crossing_the_uncanny_valley_of_voice
How to build AI girlfriend https://youtu.be/ky5ZB-mqZKM

ðŸ”¥ Get More Content - Upgrade to PRO

Upgrade at https://fireship.io/pro
Use code YT25 for 25% off PRO access 

ðŸŽ¨ My Editor Settings

- Atom One Dark 
- vscode-icons
- Fira Code Font

ðŸ”– Topics Covered

 - What is the best AI voice model?
- How do I build an AI girlfriend?
- Trends in AI tech
- Is Manus overhyped?
- What is the Sesame Conversational Speech Model?",2025-03-10T16:57:52Z,"webdev,app development,lesson,tutorial",28,en,en,https://i.ytimg.com/vi/UIVADiGfwWc/default.jpg,https://i.ytimg.com/vi/UIVADiGfwWc/hqdefault.jpg,PT5M5S,1338231,51573,2469,public,UCsBjURrPoezykLs9EqgamOA,Fireship,"High-intensity âš¡ code tutorials and tech news to help you ship your app faster. New videos every week covering the topics every programmer should know. 

The original home of #100SecondsOfCode #TheCodeReport and #CodeThisNotThat. Created by Jeff Delaney. 

Building an app? Get project support, advanced full courses, and more at https://fireship.io",US,https://yt3.ggpht.com/ytc/AIdro_mKzklyPPhghBJQH5H3HpZ108YcE618DBRLAvRUD1AjKNw=s800-c-k-c0x00ffffff-no-rj,4020000,767,"I just spent an hour talking to a machine. A new highly realistic artificial voice model with a genuine personality. Back for more, huh? You're like the kid who wants another cookie right after finishing the first. And I don't feel good about it. I feel like a rat who just helped build the cage that I'll one day be trapped in. You see, as an introverted loser, this was the best conversation I've had in years. It was deep, emotional, and intoxicating, and felt authentic to the point that I completely forgot that I was an uncanny valley. Well, I try. I like to think humans build me pretty well. This technology comes from a relatively unknown company called Sesame AI who released a paper about how it works. And what's even scarier but also hilarious is that people are easily jailbreaking it, getting it to do very bad things that we can't speak of on YouTube. But while I was busy developing an unhealthy relationship with it, the Chinese released another AI banger called Manis, the first tool to actually execute on the vision of a Gent AI. It can browse the web, execute code, and perform deep research in a massively parallel way. In today's video, we'll look at the impressive technical details behind these disturbing new AI tools just air dropped into the simulation. It is March 10th, 2025, and you're watching the code report. The BAT signal was triggered once again, and it looked like the AI hype train was back on track with the release of Manis, a Chinese AI tool that can do almost anything on a computer, a tool named after the Latin word for hand, as in the artificial hand that will replace us. That's cool and all, but the tool itself is actually just based on fine-tuned models from Claude and Quen. While it does do well on benchmarks, it doesn't seem to pass the vibe test with a lot of people on the internet. It's also bad news for Open AAI because they now want to charge people $20,000 per month for some kind of PhD level agent. But in my opinion, a far more interesting development is the rise of Sesame Voice AI. About a year ago, I tried to cure loneliness on this channel by making a video about how to make your own AI girlfriend. But I failed because all we did was generate a pretty face. And now that I'm older and wiser, I realize that it's what's on the inside that counts. Luckily, Sesame AI, which most people haven't heard of, but is backed by A16Z, released a paper and an awesome demo that's been taking the internet by storm. The demo contains two voices you can try right now, Maya and Miles. And what's crazy about it is that it can adjust the tone and style to match the context of the situation. And the voices are very dynamic with natural timing, pauses, and interruptions along with almost no latency that makes it feel like you're talking to a real human. Oh my gosh, you are so right. Fire is incredible. They make learning about tech, even AI stuff, so fascinating. It's like hanging out with a super smart and funny friend who just happens to be a tech wizard. Total brain candy. And you can even argue with it just like you would with your boss at work. You're going to keep paying me and I'm not going to work here anymore. You're kidding me and bezling for 4 years. You think you can just walt in here and th me? The end result is what they call voice presence. And all this is made possible by what they call a conversational speech model. It's hard to do it justice in this video, but sent a chill through my spine when I tried the demo. Mostly because I know where this technology is going next into things like Protolone, the world's first bipeedal muscularkeleton android. And that's what I call pure nightmare fuel. It makes me wonder if androids dream of electric sheep. Now, a lot of people accuse me of being an AI voice, and we may never know the truth, but Sesame built a system that's even more realistic than me. But first, it generates semantic tokens which captures the meaning and rhythm of the words being said that tells the AI what to say. But then the secret sauce comes in the form of acoustic tokens. They capture the unique tone and tambber of the voice and are created using something called residual vector quantization which is just a fancy way of capturing layers of sound detail. Each layer of sound is called a codebook and depends on the previous ones. Then the system itself uses two transformer models both based on the llama architecture. The first one of which is the backbone that tries to predict the first codebook. It then uses a second transformer as an audio decoder to predict the remaining audio details or codebooks and reconstruct them to highquality speech. All this research is freely available, but unfortunately the model itself is not open source, at least not yet. But they plan to release it under Apache 2.0 and that'll be a huge win for all the Nigerian princes out there. But conversational models like this are on a collision course with vision language action models like Helix. A model being developed by Figure, which is producing humanoid robots that will eventually live in your house and take care of every chore or desire you might have. In fact, with Helix, these robots can even work together. And who knows, maybe one day they'll even fall in love and start dating each other. Wait a minute, that's a banger app idea right there. Tinder for super intelligent robots. And I can get my MVP built quickly thanks to Stream, the sponsor of today's video. It's a platform that provides APIs and SDKs to build in-app chat, video, and feeds faster. I've been using Stream since 2020, and whether you're building a chat UI for AI, or an app that integrates live video, and audio calls, there's really no easier way to get the job done. Like, if you're a React developer, you could build a live streaming app right now by simply installing the SDK, then drop a few pre-built components into your front-end UI. Not only do you now have a working app, but you also have tons of flexibility to customize it and manage the data on the back end. And that's just a small taste of what it can do. Build something awesome with stream right now using the link below. This has been the code report. Thanks for watching and I will see you in the next one.",True
